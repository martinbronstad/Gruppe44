
Gruppe44.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001c6  00800100  0000228a  0000231e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000228a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000013d  008002c6  008002c6  000024e4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000024e4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002540  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000298  00000000  00000000  0000257c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003990  00000000  00000000  00002814  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011cc  00000000  00000000  000061a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001cca  00000000  00000000  00007370  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000678  00000000  00000000  0000903c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000aa0  00000000  00000000  000096b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001218  00000000  00000000  0000a154  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  0000b36c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__vector_1>
       8:	0c 94 85 05 	jmp	0xb0a	; 0xb0a <__vector_2>
       c:	0c 94 cf 05 	jmp	0xb9e	; 0xb9e <__vector_3>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <__vector_2+0x38>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	12 e0       	ldi	r17, 0x02	; 2
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	ea e8       	ldi	r30, 0x8A	; 138
     37c:	f2 e2       	ldi	r31, 0x22	; 34
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a6 3c       	cpi	r26, 0xC6	; 198
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	24 e0       	ldi	r18, 0x04	; 4
     38c:	a6 ec       	ldi	r26, 0xC6	; 198
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a3 30       	cpi	r26, 0x03	; 3
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 75 06 	call	0xcea	; 0xcea <main>
     39e:	0c 94 43 11 	jmp	0x2286	; 0x2286 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <adc_init>:
#include <math.h>
#include "CAN.h"

void adc_init (void){
	
	DDRD |= (1 << PD5); // Set port PD5 to 1
     3a6:	81 b3       	in	r24, 0x11	; 17
     3a8:	80 62       	ori	r24, 0x20	; 32
     3aa:	81 bb       	out	0x11, r24	; 17
	TCCR1A |= (1 << COM1A0)|(1 << COM1B0); // Timer/Counter1 Control Register A (TCCR1A): Setting bit 6 and 4 to 1 - "Toggle OCnA/OCnB on Compare Match."
     3ac:	8f b5       	in	r24, 0x2f	; 47
     3ae:	80 65       	ori	r24, 0x50	; 80
     3b0:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << WGM12)|(1 << CS10); // Timer/Counter1 Control Register B (TCCR1B): Setting bit 3 to 1 - "CTC-mode", and bit 0 to 1 "clkI/O/1 (No prescaling)"
     3b2:	8e b5       	in	r24, 0x2e	; 46
     3b4:	89 60       	ori	r24, 0x09	; 9
     3b6:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 0x1; // Setting Compare Match bit - which bit the counter triggers on
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	9b bd       	out	0x2b, r25	; 43
     3be:	8a bd       	out	0x2a, r24	; 42
     3c0:	08 95       	ret

000003c2 <adc_read>:
}

void adc_read(void){
	// SEND TO ADC
	volatile char * adc = ( char *) 0x1400; // Set pointer at starting memory of ADC
	adc [0] = 0xff; // Send random value to initiate
     3c2:	8f ef       	ldi	r24, 0xFF	; 255
     3c4:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <__bss_end+0xffd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3c8:	84 e1       	ldi	r24, 0x14	; 20
     3ca:	8a 95       	dec	r24
     3cc:	f1 f7       	brne	.-4      	; 0x3ca <adc_read+0x8>
	
	// WAIT
	_delay_us(60); // Is this one necessary?
	
	// READ FROM ADC
	for (int i=0;i<4;i++) // Need to read 4 values - analog input 0 to 3
     3ce:	80 e0       	ldi	r24, 0x00	; 0
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	0b c0       	rjmp	.+22     	; 0x3ea <adc_read+0x28>
	{
		uint8_t number = adc [0]; // Read the ADC value and store it in variable
     3d4:	20 91 00 14 	lds	r18, 0x1400	; 0x801400 <__bss_end+0xffd>
		ADC_states[i] = number;
     3d8:	fc 01       	movw	r30, r24
     3da:	ee 0f       	add	r30, r30
     3dc:	ff 1f       	adc	r31, r31
     3de:	e3 51       	subi	r30, 0x13	; 19
     3e0:	fd 4f       	sbci	r31, 0xFD	; 253
     3e2:	30 e0       	ldi	r19, 0x00	; 0
     3e4:	31 83       	std	Z+1, r19	; 0x01
     3e6:	20 83       	st	Z, r18
	
	// WAIT
	_delay_us(60); // Is this one necessary?
	
	// READ FROM ADC
	for (int i=0;i<4;i++) // Need to read 4 values - analog input 0 to 3
     3e8:	01 96       	adiw	r24, 0x01	; 1
     3ea:	84 30       	cpi	r24, 0x04	; 4
     3ec:	91 05       	cpc	r25, r1
     3ee:	94 f3       	brlt	.-28     	; 0x3d4 <adc_read+0x12>
		ADC_states[i] = number;
		//if (i == 0){
		//printf( "%d ", number); // Print analog input i TODO: Change this from debugging later
		//}
	}
}
     3f0:	08 95       	ret

000003f2 <adc_calibrate>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3f2:	87 ea       	ldi	r24, 0xA7	; 167
     3f4:	91 e6       	ldi	r25, 0x61	; 97
     3f6:	01 97       	sbiw	r24, 0x01	; 1
     3f8:	f1 f7       	brne	.-4      	; 0x3f6 <adc_calibrate+0x4>
     3fa:	00 c0       	rjmp	.+0      	; 0x3fc <adc_calibrate+0xa>
     3fc:	00 00       	nop

void adc_calibrate(void){
	_delay_ms(100); // Added a delay to ensure the states has settled before calibrating
	adc_read();
     3fe:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <adc_read>
	X_neutral = ADC_states[0];
     402:	ed ee       	ldi	r30, 0xED	; 237
     404:	f2 e0       	ldi	r31, 0x02	; 2
     406:	20 81       	ld	r18, Z
     408:	31 81       	ldd	r19, Z+1	; 0x01
     40a:	30 93 da 02 	sts	0x02DA, r19	; 0x8002da <X_neutral+0x1>
     40e:	20 93 d9 02 	sts	0x02D9, r18	; 0x8002d9 <X_neutral>
	Y_neutral = ADC_states[1];
     412:	82 81       	ldd	r24, Z+2	; 0x02
     414:	93 81       	ldd	r25, Z+3	; 0x03
     416:	90 93 ca 02 	sts	0x02CA, r25	; 0x8002ca <Y_neutral+0x1>
     41a:	80 93 c9 02 	sts	0x02C9, r24	; 0x8002c9 <Y_neutral>
	
	previous_x = ADC_states[0];
     41e:	30 93 d6 02 	sts	0x02D6, r19	; 0x8002d6 <previous_x+0x1>
     422:	20 93 d5 02 	sts	0x02D5, r18	; 0x8002d5 <previous_x>
	previous_y = ADC_states[1];
     426:	90 93 ec 02 	sts	0x02EC, r25	; 0x8002ec <previous_y+0x1>
     42a:	80 93 eb 02 	sts	0x02EB, r24	; 0x8002eb <previous_y>
	previous_right = ADC_states[2];
     42e:	84 81       	ldd	r24, Z+4	; 0x04
     430:	95 81       	ldd	r25, Z+5	; 0x05
     432:	90 93 d8 02 	sts	0x02D8, r25	; 0x8002d8 <previous_right+0x1>
     436:	80 93 d7 02 	sts	0x02D7, r24	; 0x8002d7 <previous_right>
	previous_left = ADC_states[3];
     43a:	86 81       	ldd	r24, Z+6	; 0x06
     43c:	97 81       	ldd	r25, Z+7	; 0x07
     43e:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <previous_left+0x1>
     442:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <previous_left>
     446:	08 95       	ret

00000448 <get_stick_state>:
}

void get_stick_state(void){ //Transform the stickstates from 0 <-> 255 to -100 <-> 100
	adc_read();
     448:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <adc_read>
	uint8_t raw_x = ADC_states[0];
     44c:	ed ee       	ldi	r30, 0xED	; 237
     44e:	f2 e0       	ldi	r31, 0x02	; 2
     450:	80 81       	ld	r24, Z
     452:	91 81       	ldd	r25, Z+1	; 0x01
	uint8_t raw_y = ADC_states[1];
     454:	22 81       	ldd	r18, Z+2	; 0x02
     456:	33 81       	ldd	r19, Z+3	; 0x03
     458:	99 27       	eor	r25, r25
	//printf("%d ", raw_y);
	//uint8_t b = 51;
	if (raw_x > X_neutral){
     45a:	60 91 d9 02 	lds	r22, 0x02D9	; 0x8002d9 <X_neutral>
     45e:	70 91 da 02 	lds	r23, 0x02DA	; 0x8002da <X_neutral+0x1>
     462:	68 17       	cp	r22, r24
     464:	79 07       	cpc	r23, r25
     466:	b4 f4       	brge	.+44     	; 0x494 <get_stick_state+0x4c>
		stick_state.X_state = (((raw_x-X_neutral) * 100 )/ (255 - X_neutral));
     468:	ac 01       	movw	r20, r24
     46a:	46 1b       	sub	r20, r22
     46c:	57 0b       	sbc	r21, r23
     46e:	e4 e6       	ldi	r30, 0x64	; 100
     470:	e4 9f       	mul	r30, r20
     472:	c0 01       	movw	r24, r0
     474:	e5 9f       	mul	r30, r21
     476:	90 0d       	add	r25, r0
     478:	11 24       	eor	r1, r1
     47a:	4f ef       	ldi	r20, 0xFF	; 255
     47c:	50 e0       	ldi	r21, 0x00	; 0
     47e:	fa 01       	movw	r30, r20
     480:	e6 1b       	sub	r30, r22
     482:	f7 0b       	sbc	r31, r23
     484:	bf 01       	movw	r22, r30
     486:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <__divmodhi4>
     48a:	70 93 e4 02 	sts	0x02E4, r23	; 0x8002e4 <stick_state+0x1>
     48e:	60 93 e3 02 	sts	0x02E3, r22	; 0x8002e3 <stick_state>
     492:	0f c0       	rjmp	.+30     	; 0x4b2 <get_stick_state+0x6a>
		//moving_average_filter_x();
	}
	else {
		stick_state.X_state = (((raw_x-X_neutral) * 100) / (X_neutral));
     494:	ac 01       	movw	r20, r24
     496:	46 1b       	sub	r20, r22
     498:	57 0b       	sbc	r21, r23
     49a:	e4 e6       	ldi	r30, 0x64	; 100
     49c:	e4 9f       	mul	r30, r20
     49e:	c0 01       	movw	r24, r0
     4a0:	e5 9f       	mul	r30, r21
     4a2:	90 0d       	add	r25, r0
     4a4:	11 24       	eor	r1, r1
     4a6:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <__divmodhi4>
     4aa:	70 93 e4 02 	sts	0x02E4, r23	; 0x8002e4 <stick_state+0x1>
     4ae:	60 93 e3 02 	sts	0x02E3, r22	; 0x8002e3 <stick_state>
     4b2:	c9 01       	movw	r24, r18
     4b4:	99 27       	eor	r25, r25
		//moving_average_filter_x();
	}
	
	if (raw_y > Y_neutral){
     4b6:	60 91 c9 02 	lds	r22, 0x02C9	; 0x8002c9 <Y_neutral>
     4ba:	70 91 ca 02 	lds	r23, 0x02CA	; 0x8002ca <Y_neutral+0x1>
     4be:	68 17       	cp	r22, r24
     4c0:	79 07       	cpc	r23, r25
     4c2:	b4 f4       	brge	.+44     	; 0x4f0 <get_stick_state+0xa8>
		stick_state.Y_state = (((raw_y-Y_neutral) * 100 )/ (255 - Y_neutral));
     4c4:	9c 01       	movw	r18, r24
     4c6:	26 1b       	sub	r18, r22
     4c8:	37 0b       	sbc	r19, r23
     4ca:	44 e6       	ldi	r20, 0x64	; 100
     4cc:	42 9f       	mul	r20, r18
     4ce:	c0 01       	movw	r24, r0
     4d0:	43 9f       	mul	r20, r19
     4d2:	90 0d       	add	r25, r0
     4d4:	11 24       	eor	r1, r1
     4d6:	2f ef       	ldi	r18, 0xFF	; 255
     4d8:	30 e0       	ldi	r19, 0x00	; 0
     4da:	a9 01       	movw	r20, r18
     4dc:	46 1b       	sub	r20, r22
     4de:	57 0b       	sbc	r21, r23
     4e0:	ba 01       	movw	r22, r20
     4e2:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <__divmodhi4>
     4e6:	70 93 e6 02 	sts	0x02E6, r23	; 0x8002e6 <stick_state+0x3>
     4ea:	60 93 e5 02 	sts	0x02E5, r22	; 0x8002e5 <stick_state+0x2>
     4ee:	08 95       	ret
	}
	else {
		stick_state.Y_state = (((raw_y-Y_neutral) * 100) / (Y_neutral));
     4f0:	9c 01       	movw	r18, r24
     4f2:	26 1b       	sub	r18, r22
     4f4:	37 0b       	sbc	r19, r23
     4f6:	44 e6       	ldi	r20, 0x64	; 100
     4f8:	42 9f       	mul	r20, r18
     4fa:	c0 01       	movw	r24, r0
     4fc:	43 9f       	mul	r20, r19
     4fe:	90 0d       	add	r25, r0
     500:	11 24       	eor	r1, r1
     502:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <__divmodhi4>
     506:	70 93 e6 02 	sts	0x02E6, r23	; 0x8002e6 <stick_state+0x3>
     50a:	60 93 e5 02 	sts	0x02E5, r22	; 0x8002e5 <stick_state+0x2>
     50e:	08 95       	ret

00000510 <get_stick_direction>:
	}
	
}

void get_stick_direction(void){ //Checks if the output is saturated, if it is the direction is defined in an enum (0-4)
	get_stick_state();
     510:	0e 94 24 02 	call	0x448	; 0x448 <get_stick_state>
	//printf(" %d",stick_state.Y_state);
	//uint8_t raw_x = ADC_states[0];
	//uint8_t raw_y = ADC_states[1];
	short x_value = stick_state.X_state;
     514:	e3 ee       	ldi	r30, 0xE3	; 227
     516:	f2 e0       	ldi	r31, 0x02	; 2
     518:	20 81       	ld	r18, Z
     51a:	31 81       	ldd	r19, Z+1	; 0x01
	short y_value = stick_state.Y_state;
     51c:	82 81       	ldd	r24, Z+2	; 0x02
     51e:	93 81       	ldd	r25, Z+3	; 0x03
	if (x_value > 50) {
     520:	23 33       	cpi	r18, 0x33	; 51
     522:	31 05       	cpc	r19, r1
     524:	3c f0       	brlt	.+14     	; 0x534 <get_stick_direction+0x24>
		stick_state.X_direction = RIGHT;
     526:	23 e0       	ldi	r18, 0x03	; 3
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	30 93 e8 02 	sts	0x02E8, r19	; 0x8002e8 <stick_state+0x5>
     52e:	20 93 e7 02 	sts	0x02E7, r18	; 0x8002e7 <stick_state+0x4>
     532:	0e c0       	rjmp	.+28     	; 0x550 <get_stick_direction+0x40>
	}
	
	else if (x_value < -50) {
     534:	2e 3c       	cpi	r18, 0xCE	; 206
     536:	3f 4f       	sbci	r19, 0xFF	; 255
     538:	3c f4       	brge	.+14     	; 0x548 <get_stick_direction+0x38>
		stick_state.X_direction = LEFT;
     53a:	22 e0       	ldi	r18, 0x02	; 2
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	30 93 e8 02 	sts	0x02E8, r19	; 0x8002e8 <stick_state+0x5>
     542:	20 93 e7 02 	sts	0x02E7, r18	; 0x8002e7 <stick_state+0x4>
     546:	04 c0       	rjmp	.+8      	; 0x550 <get_stick_direction+0x40>
	}
	
	else {
		stick_state.X_direction = NEUTRAL;		
     548:	10 92 e8 02 	sts	0x02E8, r1	; 0x8002e8 <stick_state+0x5>
     54c:	10 92 e7 02 	sts	0x02E7, r1	; 0x8002e7 <stick_state+0x4>
	}
	if (y_value > 50) {
     550:	83 33       	cpi	r24, 0x33	; 51
     552:	91 05       	cpc	r25, r1
     554:	3c f0       	brlt	.+14     	; 0x564 <get_stick_direction+0x54>
		stick_state.Y_direction = UP;
     556:	81 e0       	ldi	r24, 0x01	; 1
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	90 93 ea 02 	sts	0x02EA, r25	; 0x8002ea <stick_state+0x7>
     55e:	80 93 e9 02 	sts	0x02E9, r24	; 0x8002e9 <stick_state+0x6>
     562:	08 95       	ret
	}
	
	else if (y_value < -50) {
     564:	8e 3c       	cpi	r24, 0xCE	; 206
     566:	9f 4f       	sbci	r25, 0xFF	; 255
     568:	3c f4       	brge	.+14     	; 0x578 <get_stick_direction+0x68>
		stick_state.Y_direction = DOWN;
     56a:	84 e0       	ldi	r24, 0x04	; 4
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	90 93 ea 02 	sts	0x02EA, r25	; 0x8002ea <stick_state+0x7>
     572:	80 93 e9 02 	sts	0x02E9, r24	; 0x8002e9 <stick_state+0x6>
     576:	08 95       	ret
	}
	
	else {
		stick_state.Y_direction = NEUTRAL;
     578:	10 92 ea 02 	sts	0x02EA, r1	; 0x8002ea <stick_state+0x7>
     57c:	10 92 e9 02 	sts	0x02E9, r1	; 0x8002e9 <stick_state+0x6>
     580:	08 95       	ret

00000582 <poll_new_readings>:
	}
}



void poll_new_readings(){
     582:	0f 93       	push	r16
     584:	1f 93       	push	r17
     586:	cf 93       	push	r28
     588:	df 93       	push	r29
     58a:	cd b7       	in	r28, 0x3d	; 61
     58c:	de b7       	in	r29, 0x3e	; 62
     58e:	2a 97       	sbiw	r28, 0x0a	; 10
     590:	0f b6       	in	r0, 0x3f	; 63
     592:	f8 94       	cli
     594:	de bf       	out	0x3e, r29	; 62
     596:	0f be       	out	0x3f, r0	; 63
     598:	cd bf       	out	0x3d, r28	; 61
	get_stick_state();
     59a:	0e 94 24 02 	call	0x448	; 0x448 <get_stick_state>
	if(previous_x != stick_state.X_state || previous_y != stick_state.Y_state || previous_right != ADC_states[2] || previous_left != ADC_states[3]){
     59e:	20 91 e3 02 	lds	r18, 0x02E3	; 0x8002e3 <stick_state>
     5a2:	30 91 e4 02 	lds	r19, 0x02E4	; 0x8002e4 <stick_state+0x1>
     5a6:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <previous_x>
     5aa:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <previous_x+0x1>
     5ae:	28 17       	cp	r18, r24
     5b0:	39 07       	cpc	r19, r25
     5b2:	09 f5       	brne	.+66     	; 0x5f6 <poll_new_readings+0x74>
     5b4:	40 91 e5 02 	lds	r20, 0x02E5	; 0x8002e5 <stick_state+0x2>
     5b8:	50 91 e6 02 	lds	r21, 0x02E6	; 0x8002e6 <stick_state+0x3>
     5bc:	80 91 eb 02 	lds	r24, 0x02EB	; 0x8002eb <previous_y>
     5c0:	90 91 ec 02 	lds	r25, 0x02EC	; 0x8002ec <previous_y+0x1>
     5c4:	48 17       	cp	r20, r24
     5c6:	59 07       	cpc	r21, r25
     5c8:	b1 f4       	brne	.+44     	; 0x5f6 <poll_new_readings+0x74>
     5ca:	40 91 f1 02 	lds	r20, 0x02F1	; 0x8002f1 <ADC_states+0x4>
     5ce:	50 91 f2 02 	lds	r21, 0x02F2	; 0x8002f2 <ADC_states+0x5>
     5d2:	80 91 d7 02 	lds	r24, 0x02D7	; 0x8002d7 <previous_right>
     5d6:	90 91 d8 02 	lds	r25, 0x02D8	; 0x8002d8 <previous_right+0x1>
     5da:	48 17       	cp	r20, r24
     5dc:	59 07       	cpc	r21, r25
     5de:	59 f4       	brne	.+22     	; 0x5f6 <poll_new_readings+0x74>
     5e0:	40 91 f3 02 	lds	r20, 0x02F3	; 0x8002f3 <ADC_states+0x6>
     5e4:	50 91 f4 02 	lds	r21, 0x02F4	; 0x8002f4 <ADC_states+0x7>
     5e8:	80 91 d3 02 	lds	r24, 0x02D3	; 0x8002d3 <previous_left>
     5ec:	90 91 d4 02 	lds	r25, 0x02D4	; 0x8002d4 <previous_left+0x1>
     5f0:	48 17       	cp	r20, r24
     5f2:	59 07       	cpc	r21, r25
     5f4:	f1 f0       	breq	.+60     	; 0x632 <poll_new_readings+0xb0>
		struct Can_Message can_message;
		
		can_message.id = 1;
     5f6:	81 e0       	ldi	r24, 0x01	; 1
     5f8:	89 83       	std	Y+1, r24	; 0x01
		can_message.length = 4;
     5fa:	84 e0       	ldi	r24, 0x04	; 4
     5fc:	8a 83       	std	Y+2, r24	; 0x02
		
		can_message.data[0] = stick_state.X_state + 100;
     5fe:	2c 59       	subi	r18, 0x9C	; 156
     600:	2b 83       	std	Y+3, r18	; 0x03
		can_message.data[1] = stick_state.Y_state + 100;
     602:	30 91 e5 02 	lds	r19, 0x02E5	; 0x8002e5 <stick_state+0x2>
     606:	3c 59       	subi	r19, 0x9C	; 156
     608:	3c 83       	std	Y+4, r19	; 0x04
		can_message.data[2] = ADC_states[2];
     60a:	ed ee       	ldi	r30, 0xED	; 237
     60c:	f2 e0       	ldi	r31, 0x02	; 2
     60e:	44 81       	ldd	r20, Z+4	; 0x04
     610:	4d 83       	std	Y+5, r20	; 0x05
		can_message.data[3] = ADC_states[3];
     612:	56 81       	ldd	r21, Z+6	; 0x06
     614:	5e 83       	std	Y+6, r21	; 0x06
		// CAN TEST TO NODE 2:
		CAN_write_message(can_message);
     616:	01 e0       	ldi	r16, 0x01	; 1
     618:	14 e0       	ldi	r17, 0x04	; 4
     61a:	6f 81       	ldd	r22, Y+7	; 0x07
     61c:	78 85       	ldd	r23, Y+8	; 0x08
     61e:	89 85       	ldd	r24, Y+9	; 0x09
     620:	9a 85       	ldd	r25, Y+10	; 0x0a
     622:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <CAN_write_message>
     626:	87 ea       	ldi	r24, 0xA7	; 167
     628:	91 e6       	ldi	r25, 0x61	; 97
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <poll_new_readings+0xa8>
     62e:	00 c0       	rjmp	.+0      	; 0x630 <poll_new_readings+0xae>
     630:	00 00       	nop
		_delay_ms(100);
	}
	previous_x = stick_state.X_state;
     632:	e3 ee       	ldi	r30, 0xE3	; 227
     634:	f2 e0       	ldi	r31, 0x02	; 2
     636:	80 81       	ld	r24, Z
     638:	91 81       	ldd	r25, Z+1	; 0x01
     63a:	90 93 d6 02 	sts	0x02D6, r25	; 0x8002d6 <previous_x+0x1>
     63e:	80 93 d5 02 	sts	0x02D5, r24	; 0x8002d5 <previous_x>
	previous_y = stick_state.Y_state;
     642:	82 81       	ldd	r24, Z+2	; 0x02
     644:	93 81       	ldd	r25, Z+3	; 0x03
     646:	90 93 ec 02 	sts	0x02EC, r25	; 0x8002ec <previous_y+0x1>
     64a:	80 93 eb 02 	sts	0x02EB, r24	; 0x8002eb <previous_y>
	previous_right = ADC_states[2];
     64e:	ed ee       	ldi	r30, 0xED	; 237
     650:	f2 e0       	ldi	r31, 0x02	; 2
     652:	84 81       	ldd	r24, Z+4	; 0x04
     654:	95 81       	ldd	r25, Z+5	; 0x05
     656:	90 93 d8 02 	sts	0x02D8, r25	; 0x8002d8 <previous_right+0x1>
     65a:	80 93 d7 02 	sts	0x02D7, r24	; 0x8002d7 <previous_right>
	previous_left = ADC_states[3];
     65e:	86 81       	ldd	r24, Z+6	; 0x06
     660:	97 81       	ldd	r25, Z+7	; 0x07
     662:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <previous_left+0x1>
     666:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <previous_left>
     66a:	2a 96       	adiw	r28, 0x0a	; 10
     66c:	0f b6       	in	r0, 0x3f	; 63
     66e:	f8 94       	cli
     670:	de bf       	out	0x3e, r29	; 62
     672:	0f be       	out	0x3f, r0	; 63
     674:	cd bf       	out	0x3d, r28	; 61
     676:	df 91       	pop	r29
     678:	cf 91       	pop	r28
     67a:	1f 91       	pop	r17
     67c:	0f 91       	pop	r16
     67e:	08 95       	ret

00000680 <CAN_read>:
     680:	cf 93       	push	r28
     682:	c8 2f       	mov	r28, r24
     684:	88 b3       	in	r24, 0x18	; 24
     686:	8f 7e       	andi	r24, 0xEF	; 239
     688:	88 bb       	out	0x18, r24	; 24
     68a:	83 e0       	ldi	r24, 0x03	; 3
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <SPI_write>
     692:	8c 2f       	mov	r24, r28
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <SPI_write>
     69a:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <SPI_read>
     69e:	98 b3       	in	r25, 0x18	; 24
     6a0:	90 61       	ori	r25, 0x10	; 16
     6a2:	98 bb       	out	0x18, r25	; 24
     6a4:	cf 91       	pop	r28
     6a6:	08 95       	ret

000006a8 <CAN_write>:
     6a8:	cf 93       	push	r28
     6aa:	df 93       	push	r29
     6ac:	d8 2f       	mov	r29, r24
     6ae:	c6 2f       	mov	r28, r22
     6b0:	88 b3       	in	r24, 0x18	; 24
     6b2:	8f 7e       	andi	r24, 0xEF	; 239
     6b4:	88 bb       	out	0x18, r24	; 24
     6b6:	82 e0       	ldi	r24, 0x02	; 2
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <SPI_write>
     6be:	8d 2f       	mov	r24, r29
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <SPI_write>
     6c6:	8c 2f       	mov	r24, r28
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <SPI_write>
     6ce:	88 b3       	in	r24, 0x18	; 24
     6d0:	80 61       	ori	r24, 0x10	; 16
     6d2:	88 bb       	out	0x18, r24	; 24
     6d4:	df 91       	pop	r29
     6d6:	cf 91       	pop	r28
     6d8:	08 95       	ret

000006da <CAN_request_to_send>:
     6da:	87 70       	andi	r24, 0x07	; 7
     6dc:	98 b3       	in	r25, 0x18	; 24
     6de:	9f 7e       	andi	r25, 0xEF	; 239
     6e0:	98 bb       	out	0x18, r25	; 24
     6e2:	80 68       	ori	r24, 0x80	; 128
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <SPI_write>
     6ea:	88 b3       	in	r24, 0x18	; 24
     6ec:	80 61       	ori	r24, 0x10	; 16
     6ee:	88 bb       	out	0x18, r24	; 24
     6f0:	08 95       	ret

000006f2 <CAN_bit_modify>:
     6f2:	1f 93       	push	r17
     6f4:	cf 93       	push	r28
     6f6:	df 93       	push	r29
     6f8:	18 2f       	mov	r17, r24
     6fa:	d6 2f       	mov	r29, r22
     6fc:	c4 2f       	mov	r28, r20
     6fe:	88 b3       	in	r24, 0x18	; 24
     700:	8f 7e       	andi	r24, 0xEF	; 239
     702:	88 bb       	out	0x18, r24	; 24
     704:	85 e0       	ldi	r24, 0x05	; 5
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <SPI_write>
     70c:	81 2f       	mov	r24, r17
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <SPI_write>
     714:	8d 2f       	mov	r24, r29
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <SPI_write>
     71c:	8c 2f       	mov	r24, r28
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <SPI_write>
     724:	88 b3       	in	r24, 0x18	; 24
     726:	80 61       	ori	r24, 0x10	; 16
     728:	88 bb       	out	0x18, r24	; 24
     72a:	df 91       	pop	r29
     72c:	cf 91       	pop	r28
     72e:	1f 91       	pop	r17
     730:	08 95       	ret

00000732 <CAN_reset>:
     732:	88 b3       	in	r24, 0x18	; 24
     734:	8f 7e       	andi	r24, 0xEF	; 239
     736:	88 bb       	out	0x18, r24	; 24
     738:	80 ec       	ldi	r24, 0xC0	; 192
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <SPI_write>
     740:	88 b3       	in	r24, 0x18	; 24
     742:	80 61       	ori	r24, 0x10	; 16
     744:	88 bb       	out	0x18, r24	; 24
     746:	08 95       	ret

00000748 <CAN_init>:
     748:	0e 94 6a 0c 	call	0x18d4	; 0x18d4 <SPI_init>
     74c:	0e 94 99 03 	call	0x732	; 0x732 <CAN_reset>
     750:	8e e0       	ldi	r24, 0x0E	; 14
     752:	0e 94 40 03 	call	0x680	; 0x680 <CAN_read>
     756:	80 7e       	andi	r24, 0xE0	; 224
     758:	80 38       	cpi	r24, 0x80	; 128
     75a:	31 f0       	breq	.+12     	; 0x768 <CAN_init+0x20>
     75c:	86 e0       	ldi	r24, 0x06	; 6
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <puts>
     764:	81 e0       	ldi	r24, 0x01	; 1
     766:	08 95       	ret
     768:	43 e8       	ldi	r20, 0x83	; 131
     76a:	6f ef       	ldi	r22, 0xFF	; 255
     76c:	8a e2       	ldi	r24, 0x2A	; 42
     76e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     772:	49 ef       	ldi	r20, 0xF9	; 249
     774:	6f ef       	ldi	r22, 0xFF	; 255
     776:	89 e2       	ldi	r24, 0x29	; 41
     778:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     77c:	47 e0       	ldi	r20, 0x07	; 7
     77e:	67 ec       	ldi	r22, 0xC7	; 199
     780:	88 e2       	ldi	r24, 0x28	; 40
     782:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     786:	40 e2       	ldi	r20, 0x20	; 32
     788:	60 e6       	ldi	r22, 0x60	; 96
     78a:	80 e6       	ldi	r24, 0x60	; 96
     78c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     790:	41 e0       	ldi	r20, 0x01	; 1
     792:	61 e0       	ldi	r22, 0x01	; 1
     794:	8b e2       	ldi	r24, 0x2B	; 43
     796:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     79a:	40 e0       	ldi	r20, 0x00	; 0
     79c:	60 ee       	ldi	r22, 0xE0	; 224
     79e:	8f e0       	ldi	r24, 0x0F	; 15
     7a0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     7a4:	80 e0       	ldi	r24, 0x00	; 0
     7a6:	08 95       	ret

000007a8 <CAN_write_message>:
     7a8:	ff 92       	push	r15
     7aa:	0f 93       	push	r16
     7ac:	1f 93       	push	r17
     7ae:	cf 93       	push	r28
     7b0:	df 93       	push	r29
     7b2:	cd b7       	in	r28, 0x3d	; 61
     7b4:	de b7       	in	r29, 0x3e	; 62
     7b6:	2a 97       	sbiw	r28, 0x0a	; 10
     7b8:	0f b6       	in	r0, 0x3f	; 63
     7ba:	f8 94       	cli
     7bc:	de bf       	out	0x3e, r29	; 62
     7be:	0f be       	out	0x3f, r0	; 63
     7c0:	cd bf       	out	0x3d, r28	; 61
     7c2:	09 83       	std	Y+1, r16	; 0x01
     7c4:	1a 83       	std	Y+2, r17	; 0x02
     7c6:	2b 83       	std	Y+3, r18	; 0x03
     7c8:	3c 83       	std	Y+4, r19	; 0x04
     7ca:	4d 83       	std	Y+5, r20	; 0x05
     7cc:	5e 83       	std	Y+6, r21	; 0x06
     7ce:	6f 83       	std	Y+7, r22	; 0x07
     7d0:	78 87       	std	Y+8, r23	; 0x08
     7d2:	89 87       	std	Y+9, r24	; 0x09
     7d4:	9a 87       	std	Y+10, r25	; 0x0a
     7d6:	80 e3       	ldi	r24, 0x30	; 48
     7d8:	0e 94 40 03 	call	0x680	; 0x680 <CAN_read>
     7dc:	83 fd       	sbrc	r24, 3
     7de:	fb cf       	rjmp	.-10     	; 0x7d6 <CAN_write_message+0x2e>
     7e0:	19 81       	ldd	r17, Y+1	; 0x01
     7e2:	80 e2       	ldi	r24, 0x20	; 32
     7e4:	18 9f       	mul	r17, r24
     7e6:	b0 01       	movw	r22, r0
     7e8:	11 24       	eor	r1, r1
     7ea:	82 e3       	ldi	r24, 0x32	; 50
     7ec:	0e 94 54 03 	call	0x6a8	; 0x6a8 <CAN_write>
     7f0:	61 2f       	mov	r22, r17
     7f2:	66 95       	lsr	r22
     7f4:	66 95       	lsr	r22
     7f6:	66 95       	lsr	r22
     7f8:	81 e3       	ldi	r24, 0x31	; 49
     7fa:	0e 94 54 03 	call	0x6a8	; 0x6a8 <CAN_write>
     7fe:	fa 80       	ldd	r15, Y+2	; 0x02
     800:	6f 2d       	mov	r22, r15
     802:	85 e3       	ldi	r24, 0x35	; 53
     804:	0e 94 54 03 	call	0x6a8	; 0x6a8 <CAN_write>
     808:	00 e0       	ldi	r16, 0x00	; 0
     80a:	10 e0       	ldi	r17, 0x00	; 0
     80c:	13 c0       	rjmp	.+38     	; 0x834 <CAN_write_message+0x8c>
     80e:	e3 e0       	ldi	r30, 0x03	; 3
     810:	f0 e0       	ldi	r31, 0x00	; 0
     812:	ec 0f       	add	r30, r28
     814:	fd 1f       	adc	r31, r29
     816:	e0 0f       	add	r30, r16
     818:	f1 1f       	adc	r31, r17
     81a:	60 81       	ld	r22, Z
     81c:	86 e3       	ldi	r24, 0x36	; 54
     81e:	80 0f       	add	r24, r16
     820:	0e 94 54 03 	call	0x6a8	; 0x6a8 <CAN_write>
     824:	83 ec       	ldi	r24, 0xC3	; 195
     826:	99 e0       	ldi	r25, 0x09	; 9
     828:	01 97       	sbiw	r24, 0x01	; 1
     82a:	f1 f7       	brne	.-4      	; 0x828 <CAN_write_message+0x80>
     82c:	00 c0       	rjmp	.+0      	; 0x82e <CAN_write_message+0x86>
     82e:	00 00       	nop
     830:	0f 5f       	subi	r16, 0xFF	; 255
     832:	1f 4f       	sbci	r17, 0xFF	; 255
     834:	8f 2d       	mov	r24, r15
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	08 17       	cp	r16, r24
     83a:	19 07       	cpc	r17, r25
     83c:	44 f3       	brlt	.-48     	; 0x80e <CAN_write_message+0x66>
     83e:	81 e0       	ldi	r24, 0x01	; 1
     840:	0e 94 6d 03 	call	0x6da	; 0x6da <CAN_request_to_send>
     844:	2a 96       	adiw	r28, 0x0a	; 10
     846:	0f b6       	in	r0, 0x3f	; 63
     848:	f8 94       	cli
     84a:	de bf       	out	0x3e, r29	; 62
     84c:	0f be       	out	0x3f, r0	; 63
     84e:	cd bf       	out	0x3d, r28	; 61
     850:	df 91       	pop	r29
     852:	cf 91       	pop	r28
     854:	1f 91       	pop	r17
     856:	0f 91       	pop	r16
     858:	ff 90       	pop	r15
     85a:	08 95       	ret

0000085c <CAN_read_message>:
     85c:	ff 92       	push	r15
     85e:	0f 93       	push	r16
     860:	1f 93       	push	r17
     862:	cf 93       	push	r28
     864:	df 93       	push	r29
     866:	8c 01       	movw	r16, r24
     868:	83 ec       	ldi	r24, 0xC3	; 195
     86a:	99 e0       	ldi	r25, 0x09	; 9
     86c:	01 97       	sbiw	r24, 0x01	; 1
     86e:	f1 f7       	brne	.-4      	; 0x86c <CAN_read_message+0x10>
     870:	00 c0       	rjmp	.+0      	; 0x872 <CAN_read_message+0x16>
     872:	00 00       	nop
     874:	85 e6       	ldi	r24, 0x65	; 101
     876:	0e 94 40 03 	call	0x680	; 0x680 <CAN_read>
     87a:	8f 70       	andi	r24, 0x0F	; 15
     87c:	f8 2e       	mov	r15, r24
     87e:	f8 01       	movw	r30, r16
     880:	81 83       	std	Z+1, r24	; 0x01
     882:	83 ec       	ldi	r24, 0xC3	; 195
     884:	99 e0       	ldi	r25, 0x09	; 9
     886:	01 97       	sbiw	r24, 0x01	; 1
     888:	f1 f7       	brne	.-4      	; 0x886 <CAN_read_message+0x2a>
     88a:	00 c0       	rjmp	.+0      	; 0x88c <CAN_read_message+0x30>
     88c:	00 00       	nop
     88e:	81 e6       	ldi	r24, 0x61	; 97
     890:	0e 94 40 03 	call	0x680	; 0x680 <CAN_read>
     894:	c8 2f       	mov	r28, r24
     896:	d0 e0       	ldi	r29, 0x00	; 0
     898:	cc 0f       	add	r28, r28
     89a:	dd 1f       	adc	r29, r29
     89c:	cc 0f       	add	r28, r28
     89e:	dd 1f       	adc	r29, r29
     8a0:	cc 0f       	add	r28, r28
     8a2:	dd 1f       	adc	r29, r29
     8a4:	82 e6       	ldi	r24, 0x62	; 98
     8a6:	0e 94 40 03 	call	0x680	; 0x680 <CAN_read>
     8aa:	82 95       	swap	r24
     8ac:	86 95       	lsr	r24
     8ae:	87 70       	andi	r24, 0x07	; 7
     8b0:	c8 2b       	or	r28, r24
     8b2:	f8 01       	movw	r30, r16
     8b4:	c0 83       	st	Z, r28
     8b6:	c0 e0       	ldi	r28, 0x00	; 0
     8b8:	d0 e0       	ldi	r29, 0x00	; 0
     8ba:	0f c0       	rjmp	.+30     	; 0x8da <CAN_read_message+0x7e>
     8bc:	8c 2f       	mov	r24, r28
     8be:	8a 59       	subi	r24, 0x9A	; 154
     8c0:	0e 94 40 03 	call	0x680	; 0x680 <CAN_read>
     8c4:	f8 01       	movw	r30, r16
     8c6:	ec 0f       	add	r30, r28
     8c8:	fd 1f       	adc	r31, r29
     8ca:	82 83       	std	Z+2, r24	; 0x02
     8cc:	83 ec       	ldi	r24, 0xC3	; 195
     8ce:	99 e0       	ldi	r25, 0x09	; 9
     8d0:	01 97       	sbiw	r24, 0x01	; 1
     8d2:	f1 f7       	brne	.-4      	; 0x8d0 <CAN_read_message+0x74>
     8d4:	00 c0       	rjmp	.+0      	; 0x8d6 <CAN_read_message+0x7a>
     8d6:	00 00       	nop
     8d8:	21 96       	adiw	r28, 0x01	; 1
     8da:	8f 2d       	mov	r24, r15
     8dc:	90 e0       	ldi	r25, 0x00	; 0
     8de:	c8 17       	cp	r28, r24
     8e0:	d9 07       	cpc	r29, r25
     8e2:	64 f3       	brlt	.-40     	; 0x8bc <CAN_read_message+0x60>
     8e4:	40 e0       	ldi	r20, 0x00	; 0
     8e6:	61 e0       	ldi	r22, 0x01	; 1
     8e8:	8c e2       	ldi	r24, 0x2C	; 44
     8ea:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     8ee:	c8 01       	movw	r24, r16
     8f0:	df 91       	pop	r29
     8f2:	cf 91       	pop	r28
     8f4:	1f 91       	pop	r17
     8f6:	0f 91       	pop	r16
     8f8:	ff 90       	pop	r15
     8fa:	08 95       	ret

000008fc <USART_Init>:
     8fc:	9c bf       	out	0x3c, r25	; 60
     8fe:	80 b9       	out	0x00, r24	; 0
     900:	88 e1       	ldi	r24, 0x18	; 24
     902:	81 b9       	out	0x01, r24	; 1
     904:	8e e8       	ldi	r24, 0x8E	; 142
     906:	8c bf       	out	0x3c, r24	; 60
     908:	08 95       	ret

0000090a <USART_Transmit>:
     90a:	15 9b       	sbis	0x02, 5	; 2
     90c:	fe cf       	rjmp	.-4      	; 0x90a <USART_Transmit>
     90e:	83 b9       	out	0x03, r24	; 3
     910:	08 95       	ret

00000912 <USART_Receive>:
     912:	17 9b       	sbis	0x02, 7	; 2
     914:	fe cf       	rjmp	.-4      	; 0x912 <USART_Receive>
     916:	83 b1       	in	r24, 0x03	; 3
     918:	08 95       	ret

0000091a <start_game>:
#include "OLED.h"
#include "ADC.h"
#include "Game.h"


void start_game(){
     91a:	0f 93       	push	r16
     91c:	1f 93       	push	r17
     91e:	cf 93       	push	r28
     920:	df 93       	push	r29
     922:	cd b7       	in	r28, 0x3d	; 61
     924:	de b7       	in	r29, 0x3e	; 62
     926:	2a 97       	sbiw	r28, 0x0a	; 10
     928:	0f b6       	in	r0, 0x3f	; 63
     92a:	f8 94       	cli
     92c:	de bf       	out	0x3e, r29	; 62
     92e:	0f be       	out	0x3f, r0	; 63
     930:	cd bf       	out	0x3d, r28	; 61
	
	score1 = 0;
     932:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <score1>
	game_time = 0;
     936:	10 92 f5 02 	sts	0x02F5, r1	; 0x8002f5 <game_time>
	struct Can_Message Game_start_message;
	Game_start_message.data[0] = game_mode1;
     93a:	20 91 ee 03 	lds	r18, 0x03EE	; 0x8003ee <game_mode1>
	Game_start_message.data[1] = controller_setting;
     93e:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <controller_setting>
	Game_start_message.data[2] = difficulty;
     942:	40 91 ed 03 	lds	r20, 0x03ED	; 0x8003ed <difficulty>
	Game_start_message.length = 3;
	Game_start_message.id = 3;
	CAN_write_message(Game_start_message);
     946:	03 e0       	ldi	r16, 0x03	; 3
     948:	13 e0       	ldi	r17, 0x03	; 3
     94a:	5e 81       	ldd	r21, Y+6	; 0x06
     94c:	6f 81       	ldd	r22, Y+7	; 0x07
     94e:	78 85       	ldd	r23, Y+8	; 0x08
     950:	89 85       	ldd	r24, Y+9	; 0x09
     952:	9a 85       	ldd	r25, Y+10	; 0x0a
     954:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <CAN_write_message>
	
	if (game_mode1 == 0){
     958:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <game_mode1>
     95c:	81 11       	cpse	r24, r1
     95e:	03 c0       	rjmp	.+6      	; 0x966 <start_game+0x4c>
		Standard_mode_Menu();
     960:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <Standard_mode_Menu>
     964:	02 c0       	rjmp	.+4      	; 0x96a <start_game+0x50>
	}
	else{
		Arcade_mode_Menu();
     966:	0e 94 2a 0a 	call	0x1454	; 0x1454 <Arcade_mode_Menu>
	}
}
     96a:	2a 96       	adiw	r28, 0x0a	; 10
     96c:	0f b6       	in	r0, 0x3f	; 63
     96e:	f8 94       	cli
     970:	de bf       	out	0x3e, r29	; 62
     972:	0f be       	out	0x3f, r0	; 63
     974:	cd bf       	out	0x3d, r28	; 61
     976:	df 91       	pop	r29
     978:	cf 91       	pop	r28
     97a:	1f 91       	pop	r17
     97c:	0f 91       	pop	r16
     97e:	08 95       	ret

00000980 <game_loss>:


void game_loss(){
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	cf 93       	push	r28
     986:	df 93       	push	r29
     988:	cd b7       	in	r28, 0x3d	; 61
     98a:	de b7       	in	r29, 0x3e	; 62
     98c:	2a 97       	sbiw	r28, 0x0a	; 10
     98e:	0f b6       	in	r0, 0x3f	; 63
     990:	f8 94       	cli
     992:	de bf       	out	0x3e, r29	; 62
     994:	0f be       	out	0x3f, r0	; 63
     996:	cd bf       	out	0x3d, r28	; 61
	struct Can_Message Game_stop_message;
	Game_stop_message.id = 4;
	Game_stop_message.length = 1;
	Game_stop_message.data[0] = 0;
	CAN_write_message(Game_stop_message);
     998:	04 e0       	ldi	r16, 0x04	; 4
     99a:	11 e0       	ldi	r17, 0x01	; 1
     99c:	20 e0       	ldi	r18, 0x00	; 0
     99e:	3c 81       	ldd	r19, Y+4	; 0x04
     9a0:	4d 81       	ldd	r20, Y+5	; 0x05
     9a2:	5e 81       	ldd	r21, Y+6	; 0x06
     9a4:	6f 81       	ldd	r22, Y+7	; 0x07
     9a6:	78 85       	ldd	r23, Y+8	; 0x08
     9a8:	89 85       	ldd	r24, Y+9	; 0x09
     9aa:	9a 85       	ldd	r25, Y+10	; 0x0a
     9ac:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <CAN_write_message>
	in_game = 0;
     9b0:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <in_game>
	Menu_contents.current_menu = 5;	
     9b4:	85 e0       	ldi	r24, 0x05	; 5
     9b6:	80 93 f7 02 	sts	0x02F7, r24	; 0x8002f7 <Menu_contents+0x1>
	Game_Over_Menu();
     9ba:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <Game_Over_Menu>
	
	if (game_mode1 == 0){
     9be:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <game_mode1>
     9c2:	81 11       	cpse	r24, r1
     9c4:	0d c0       	rjmp	.+26     	; 0x9e0 <game_loss+0x60>
		//PRINT SCORE
		OLED_go_to_pos(2, 0);
     9c6:	60 e0       	ldi	r22, 0x00	; 0
     9c8:	82 e0       	ldi	r24, 0x02	; 2
     9ca:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
		OLED_printf( "Score:");
     9ce:	8a e3       	ldi	r24, 0x3A	; 58
     9d0:	91 e0       	ldi	r25, 0x01	; 1
     9d2:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <OLED_printf>
		char bokstav = score1 + 18;
		OLED_print_c(score1);
     9d6:	80 91 70 03 	lds	r24, 0x0370	; 0x800370 <score1>
     9da:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <OLED_print_c>
     9de:	0b c0       	rjmp	.+22     	; 0x9f6 <game_loss+0x76>
	}
	else{
		//PRINT TIMER
		OLED_go_to_pos(2, 0);
     9e0:	60 e0       	ldi	r22, 0x00	; 0
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
		OLED_printf( "Time:");
     9e8:	81 e4       	ldi	r24, 0x41	; 65
     9ea:	91 e0       	ldi	r25, 0x01	; 1
     9ec:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <OLED_printf>
		OLED_print_c('?');
     9f0:	8f e3       	ldi	r24, 0x3F	; 63
     9f2:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <OLED_print_c>
	}
	
}
     9f6:	2a 96       	adiw	r28, 0x0a	; 10
     9f8:	0f b6       	in	r0, 0x3f	; 63
     9fa:	f8 94       	cli
     9fc:	de bf       	out	0x3e, r29	; 62
     9fe:	0f be       	out	0x3f, r0	; 63
     a00:	cd bf       	out	0x3d, r28	; 61
     a02:	df 91       	pop	r29
     a04:	cf 91       	pop	r28
     a06:	1f 91       	pop	r17
     a08:	0f 91       	pop	r16
     a0a:	08 95       	ret

00000a0c <update_game_score>:

void update_game_score(){
	
	printf("%d \r \n", score1);
     a0c:	80 91 70 03 	lds	r24, 0x0370	; 0x800370 <score1>
     a10:	1f 92       	push	r1
     a12:	8f 93       	push	r24
     a14:	87 e4       	ldi	r24, 0x47	; 71
     a16:	91 e0       	ldi	r25, 0x01	; 1
     a18:	9f 93       	push	r25
     a1a:	8f 93       	push	r24
     a1c:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <printf>
	if (game_mode1 == 0) {
     a20:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <game_mode1>
     a24:	0f 90       	pop	r0
     a26:	0f 90       	pop	r0
     a28:	0f 90       	pop	r0
     a2a:	0f 90       	pop	r0
     a2c:	81 11       	cpse	r24, r1
     a2e:	12 c0       	rjmp	.+36     	; 0xa54 <update_game_score+0x48>
		score1 ++;
     a30:	80 91 70 03 	lds	r24, 0x0370	; 0x800370 <score1>
     a34:	8f 5f       	subi	r24, 0xFF	; 255
     a36:	80 93 70 03 	sts	0x0370, r24	; 0x800370 <score1>
		if (score1 < 10) {
     a3a:	8a 30       	cpi	r24, 0x0A	; 10
     a3c:	48 f4       	brcc	.+18     	; 0xa50 <update_game_score+0x44>
		OLED_go_to_pos(2, 60);
     a3e:	6c e3       	ldi	r22, 0x3C	; 60
     a40:	82 e0       	ldi	r24, 0x02	; 2
     a42:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
		OLED_print_c(score1);
     a46:	80 91 70 03 	lds	r24, 0x0370	; 0x800370 <score1>
     a4a:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <OLED_print_c>
     a4e:	02 c0       	rjmp	.+4      	; 0xa54 <update_game_score+0x48>
		}
		else{
		game_loss();
     a50:	0e 94 c0 04 	call	0x980	; 0x980 <game_loss>
		}
	}
	if (game_mode1 == 1) {
     a54:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <game_mode1>
     a58:	81 30       	cpi	r24, 0x01	; 1
     a5a:	11 f4       	brne	.+4      	; 0xa60 <update_game_score+0x54>
		
		game_loss();
     a5c:	0e 94 c0 04 	call	0x980	; 0x980 <game_loss>
     a60:	08 95       	ret

00000a62 <interrupt_init>:
     a62:	f8 94       	cli
     a64:	20 b3       	in	r18, 0x10	; 16
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	ac 01       	movw	r20, r24
     a6c:	02 c0       	rjmp	.+4      	; 0xa72 <interrupt_init+0x10>
     a6e:	44 0f       	add	r20, r20
     a70:	55 1f       	adc	r21, r21
     a72:	2a 95       	dec	r18
     a74:	e2 f7       	brpl	.-8      	; 0xa6e <interrupt_init+0xc>
     a76:	9a 01       	movw	r18, r20
     a78:	20 95       	com	r18
     a7a:	30 95       	com	r19
     a7c:	40 b3       	in	r20, 0x10	; 16
     a7e:	02 c0       	rjmp	.+4      	; 0xa84 <interrupt_init+0x22>
     a80:	88 0f       	add	r24, r24
     a82:	99 1f       	adc	r25, r25
     a84:	4a 95       	dec	r20
     a86:	e2 f7       	brpl	.-8      	; 0xa80 <interrupt_init+0x1e>
     a88:	82 2b       	or	r24, r18
     a8a:	93 2b       	or	r25, r19
     a8c:	91 b3       	in	r25, 0x11	; 17
     a8e:	89 23       	and	r24, r25
     a90:	81 bb       	out	0x11, r24	; 17
     a92:	86 b1       	in	r24, 0x06	; 6
     a94:	8e 7f       	andi	r24, 0xFE	; 254
     a96:	86 b9       	out	0x06, r24	; 6
     a98:	87 b1       	in	r24, 0x07	; 7
     a9a:	81 60       	ori	r24, 0x01	; 1
     a9c:	87 b9       	out	0x07, r24	; 7
     a9e:	85 b7       	in	r24, 0x35	; 53
     aa0:	80 68       	ori	r24, 0x80	; 128
     aa2:	85 bf       	out	0x35, r24	; 53
     aa4:	85 b7       	in	r24, 0x35	; 53
     aa6:	8f 60       	ori	r24, 0x0F	; 15
     aa8:	85 bf       	out	0x35, r24	; 53
     aaa:	86 b7       	in	r24, 0x36	; 54
     aac:	86 bf       	out	0x36, r24	; 54
     aae:	8b b7       	in	r24, 0x3b	; 59
     ab0:	80 6e       	ori	r24, 0xE0	; 224
     ab2:	8b bf       	out	0x3b, r24	; 59
     ab4:	78 94       	sei
     ab6:	08 95       	ret

00000ab8 <__vector_1>:
// #define different id values

struct Can_Message can_message_buttons;


ISR(INT0_vect){
     ab8:	1f 92       	push	r1
     aba:	0f 92       	push	r0
     abc:	0f b6       	in	r0, 0x3f	; 63
     abe:	0f 92       	push	r0
     ac0:	11 24       	eor	r1, r1
     ac2:	2f 93       	push	r18
     ac4:	3f 93       	push	r19
     ac6:	4f 93       	push	r20
     ac8:	5f 93       	push	r21
     aca:	6f 93       	push	r22
     acc:	7f 93       	push	r23
     ace:	8f 93       	push	r24
     ad0:	9f 93       	push	r25
     ad2:	af 93       	push	r26
     ad4:	bf 93       	push	r27
     ad6:	ef 93       	push	r30
     ad8:	ff 93       	push	r31
	printf("\r\nRight button\r\n");
     ada:	8e e4       	ldi	r24, 0x4E	; 78
     adc:	91 e0       	ldi	r25, 0x01	; 1
     ade:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <puts>

	right_button = 1;
     ae2:	81 e0       	ldi	r24, 0x01	; 1
     ae4:	80 93 c8 02 	sts	0x02C8, r24	; 0x8002c8 <right_button>
	
	//Change_page();
	//OLED_reset();
	//Game_Modes_Menu();
	//_delay_ms(100);
}
     ae8:	ff 91       	pop	r31
     aea:	ef 91       	pop	r30
     aec:	bf 91       	pop	r27
     aee:	af 91       	pop	r26
     af0:	9f 91       	pop	r25
     af2:	8f 91       	pop	r24
     af4:	7f 91       	pop	r23
     af6:	6f 91       	pop	r22
     af8:	5f 91       	pop	r21
     afa:	4f 91       	pop	r20
     afc:	3f 91       	pop	r19
     afe:	2f 91       	pop	r18
     b00:	0f 90       	pop	r0
     b02:	0f be       	out	0x3f, r0	; 63
     b04:	0f 90       	pop	r0
     b06:	1f 90       	pop	r1
     b08:	18 95       	reti

00000b0a <__vector_2>:
ISR(INT1_vect){
     b0a:	1f 92       	push	r1
     b0c:	0f 92       	push	r0
     b0e:	0f b6       	in	r0, 0x3f	; 63
     b10:	0f 92       	push	r0
     b12:	11 24       	eor	r1, r1
     b14:	0f 93       	push	r16
     b16:	1f 93       	push	r17
     b18:	2f 93       	push	r18
     b1a:	3f 93       	push	r19
     b1c:	4f 93       	push	r20
     b1e:	5f 93       	push	r21
     b20:	6f 93       	push	r22
     b22:	7f 93       	push	r23
     b24:	8f 93       	push	r24
     b26:	9f 93       	push	r25
     b28:	af 93       	push	r26
     b2a:	bf 93       	push	r27
     b2c:	ef 93       	push	r30
     b2e:	ff 93       	push	r31
	printf("\r\nLeft button\r\n");
     b30:	8e e5       	ldi	r24, 0x5E	; 94
     b32:	91 e0       	ldi	r25, 0x01	; 1
     b34:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <puts>
	if(in_game){
     b38:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <in_game>
     b3c:	88 23       	and	r24, r24
     b3e:	c9 f0       	breq	.+50     	; 0xb72 <__vector_2+0x68>
		can_message_buttons.data[0] = 1;
     b40:	81 e0       	ldi	r24, 0x01	; 1
     b42:	28 2f       	mov	r18, r24
     b44:	80 93 f1 03 	sts	0x03F1, r24	; 0x8003f1 <can_message_buttons+0x2>
		CAN_write_message(can_message_buttons);
     b48:	00 91 ef 03 	lds	r16, 0x03EF	; 0x8003ef <can_message_buttons>
     b4c:	10 91 f0 03 	lds	r17, 0x03F0	; 0x8003f0 <can_message_buttons+0x1>
     b50:	30 91 f2 03 	lds	r19, 0x03F2	; 0x8003f2 <can_message_buttons+0x3>
     b54:	40 91 f3 03 	lds	r20, 0x03F3	; 0x8003f3 <can_message_buttons+0x4>
     b58:	50 91 f4 03 	lds	r21, 0x03F4	; 0x8003f4 <can_message_buttons+0x5>
     b5c:	60 91 f5 03 	lds	r22, 0x03F5	; 0x8003f5 <can_message_buttons+0x6>
     b60:	70 91 f6 03 	lds	r23, 0x03F6	; 0x8003f6 <can_message_buttons+0x7>
     b64:	80 91 f7 03 	lds	r24, 0x03F7	; 0x8003f7 <can_message_buttons+0x8>
     b68:	90 91 f8 03 	lds	r25, 0x03F8	; 0x8003f8 <can_message_buttons+0x9>
     b6c:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <CAN_write_message>
     b70:	03 c0       	rjmp	.+6      	; 0xb78 <__vector_2+0x6e>
	}
	else{
		left_button = 1;
     b72:	81 e0       	ldi	r24, 0x01	; 1
     b74:	80 93 c7 02 	sts	0x02C7, r24	; 0x8002c7 <left_button>
	}
}
     b78:	ff 91       	pop	r31
     b7a:	ef 91       	pop	r30
     b7c:	bf 91       	pop	r27
     b7e:	af 91       	pop	r26
     b80:	9f 91       	pop	r25
     b82:	8f 91       	pop	r24
     b84:	7f 91       	pop	r23
     b86:	6f 91       	pop	r22
     b88:	5f 91       	pop	r21
     b8a:	4f 91       	pop	r20
     b8c:	3f 91       	pop	r19
     b8e:	2f 91       	pop	r18
     b90:	1f 91       	pop	r17
     b92:	0f 91       	pop	r16
     b94:	0f 90       	pop	r0
     b96:	0f be       	out	0x3f, r0	; 63
     b98:	0f 90       	pop	r0
     b9a:	1f 90       	pop	r1
     b9c:	18 95       	reti

00000b9e <__vector_3>:
ISR(INT2_vect){
     b9e:	1f 92       	push	r1
     ba0:	0f 92       	push	r0
     ba2:	0f b6       	in	r0, 0x3f	; 63
     ba4:	0f 92       	push	r0
     ba6:	11 24       	eor	r1, r1
     ba8:	cf 92       	push	r12
     baa:	df 92       	push	r13
     bac:	ff 92       	push	r15
     bae:	0f 93       	push	r16
     bb0:	1f 93       	push	r17
     bb2:	2f 93       	push	r18
     bb4:	3f 93       	push	r19
     bb6:	4f 93       	push	r20
     bb8:	5f 93       	push	r21
     bba:	6f 93       	push	r22
     bbc:	7f 93       	push	r23
     bbe:	8f 93       	push	r24
     bc0:	9f 93       	push	r25
     bc2:	af 93       	push	r26
     bc4:	bf 93       	push	r27
     bc6:	ef 93       	push	r30
     bc8:	ff 93       	push	r31
     bca:	cf 93       	push	r28
     bcc:	df 93       	push	r29
     bce:	cd b7       	in	r28, 0x3d	; 61
     bd0:	de b7       	in	r29, 0x3e	; 62
     bd2:	2a 97       	sbiw	r28, 0x0a	; 10
     bd4:	de bf       	out	0x3e, r29	; 62
     bd6:	cd bf       	out	0x3d, r28	; 61
     bd8:	87 ea       	ldi	r24, 0xA7	; 167
     bda:	91 e6       	ldi	r25, 0x61	; 97
     bdc:	01 97       	sbiw	r24, 0x01	; 1
     bde:	f1 f7       	brne	.-4      	; 0xbdc <__vector_3+0x3e>
     be0:	00 c0       	rjmp	.+0      	; 0xbe2 <__vector_3+0x44>
     be2:	00 00       	nop
	//printf("\r\n Element %u", OLED_contents.menu_index);
	
	_delay_ms(100);
	struct Can_Message rec_message = CAN_read_message();
     be4:	ce 01       	movw	r24, r28
     be6:	01 96       	adiw	r24, 0x01	; 1
     be8:	0e 94 2e 04 	call	0x85c	; 0x85c <CAN_read_message>
	if(rec_message.id != 0 & rec_message.id < 31){
     bec:	f9 80       	ldd	r15, Y+1	; 0x01
     bee:	8f ef       	ldi	r24, 0xFF	; 255
     bf0:	8f 0d       	add	r24, r15
     bf2:	8e 31       	cpi	r24, 0x1E	; 30
     bf4:	08 f0       	brcs	.+2      	; 0xbf8 <__vector_3+0x5a>
     bf6:	40 c0       	rjmp	.+128    	; 0xc78 <__vector_3+0xda>
		printf("len: %i, id: %i, data: %i \r \n", rec_message.length, rec_message.id, rec_message.data[4]);
     bf8:	8f 81       	ldd	r24, Y+7	; 0x07
     bfa:	1a 81       	ldd	r17, Y+2	; 0x02
     bfc:	c1 2e       	mov	r12, r17
     bfe:	d1 2c       	mov	r13, r1
     c00:	1f 92       	push	r1
     c02:	8f 93       	push	r24
     c04:	1f 92       	push	r1
     c06:	ff 92       	push	r15
     c08:	1f 92       	push	r1
     c0a:	1f 93       	push	r17
     c0c:	8d e6       	ldi	r24, 0x6D	; 109
     c0e:	91 e0       	ldi	r25, 0x01	; 1
     c10:	9f 93       	push	r25
     c12:	8f 93       	push	r24
     c14:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <printf>
		printf("len: %i, id: %i \r \n", rec_message.length, rec_message.id);
     c18:	1f 92       	push	r1
     c1a:	ff 92       	push	r15
     c1c:	1f 92       	push	r1
     c1e:	1f 93       	push	r17
     c20:	8b e8       	ldi	r24, 0x8B	; 139
     c22:	91 e0       	ldi	r25, 0x01	; 1
     c24:	9f 93       	push	r25
     c26:	8f 93       	push	r24
     c28:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <printf>
		for (int i = 0; i < rec_message.length; i++){
     c2c:	0f b6       	in	r0, 0x3f	; 63
     c2e:	f8 94       	cli
     c30:	de bf       	out	0x3e, r29	; 62
     c32:	0f be       	out	0x3f, r0	; 63
     c34:	cd bf       	out	0x3d, r28	; 61
     c36:	00 e0       	ldi	r16, 0x00	; 0
     c38:	10 e0       	ldi	r17, 0x00	; 0
     c3a:	1b c0       	rjmp	.+54     	; 0xc72 <__vector_3+0xd4>
			printf("DATA: %i \r \n", rec_message.data[i]);
     c3c:	e3 e0       	ldi	r30, 0x03	; 3
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	ec 0f       	add	r30, r28
     c42:	fd 1f       	adc	r31, r29
     c44:	e0 0f       	add	r30, r16
     c46:	f1 1f       	adc	r31, r17
     c48:	80 81       	ld	r24, Z
     c4a:	1f 92       	push	r1
     c4c:	8f 93       	push	r24
     c4e:	8f e9       	ldi	r24, 0x9F	; 159
     c50:	91 e0       	ldi	r25, 0x01	; 1
     c52:	9f 93       	push	r25
     c54:	8f 93       	push	r24
     c56:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <printf>
     c5a:	83 ec       	ldi	r24, 0xC3	; 195
     c5c:	99 e0       	ldi	r25, 0x09	; 9
     c5e:	01 97       	sbiw	r24, 0x01	; 1
     c60:	f1 f7       	brne	.-4      	; 0xc5e <__vector_3+0xc0>
     c62:	00 c0       	rjmp	.+0      	; 0xc64 <__vector_3+0xc6>
     c64:	00 00       	nop
	_delay_ms(100);
	struct Can_Message rec_message = CAN_read_message();
	if(rec_message.id != 0 & rec_message.id < 31){
		printf("len: %i, id: %i, data: %i \r \n", rec_message.length, rec_message.id, rec_message.data[4]);
		printf("len: %i, id: %i \r \n", rec_message.length, rec_message.id);
		for (int i = 0; i < rec_message.length; i++){
     c66:	0f 5f       	subi	r16, 0xFF	; 255
     c68:	1f 4f       	sbci	r17, 0xFF	; 255
     c6a:	0f 90       	pop	r0
     c6c:	0f 90       	pop	r0
     c6e:	0f 90       	pop	r0
     c70:	0f 90       	pop	r0
     c72:	0c 15       	cp	r16, r12
     c74:	1d 05       	cpc	r17, r13
     c76:	14 f3       	brlt	.-60     	; 0xc3c <__vector_3+0x9e>
			printf("DATA: %i \r \n", rec_message.data[i]);
			_delay_ms(10);
		}
	}
	
	if ((rec_message.id == 4) & (rec_message.data[0] == 1)){
     c78:	2b 81       	ldd	r18, Y+3	; 0x03
     c7a:	91 e0       	ldi	r25, 0x01	; 1
     c7c:	84 e0       	ldi	r24, 0x04	; 4
     c7e:	f8 12       	cpse	r15, r24
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	81 e0       	ldi	r24, 0x01	; 1
     c84:	21 30       	cpi	r18, 0x01	; 1
     c86:	09 f0       	breq	.+2      	; 0xc8a <__vector_3+0xec>
     c88:	80 e0       	ldi	r24, 0x00	; 0
     c8a:	89 23       	and	r24, r25
     c8c:	19 f0       	breq	.+6      	; 0xc94 <__vector_3+0xf6>
		in_game = 1;
     c8e:	81 e0       	ldi	r24, 0x01	; 1
     c90:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <in_game>
	}
	if ((rec_message.id == 5) & (rec_message.length > 0)){
     c94:	2a 81       	ldd	r18, Y+2	; 0x02
     c96:	91 e0       	ldi	r25, 0x01	; 1
     c98:	85 e0       	ldi	r24, 0x05	; 5
     c9a:	f8 12       	cpse	r15, r24
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	81 e0       	ldi	r24, 0x01	; 1
     ca0:	21 11       	cpse	r18, r1
     ca2:	01 c0       	rjmp	.+2      	; 0xca6 <__vector_3+0x108>
     ca4:	80 e0       	ldi	r24, 0x00	; 0
     ca6:	89 23       	and	r24, r25
     ca8:	11 f0       	breq	.+4      	; 0xcae <__vector_3+0x110>
		update_game_score();
     caa:	0e 94 06 05 	call	0xa0c	; 0xa0c <update_game_score>
	}
	
}
     cae:	2a 96       	adiw	r28, 0x0a	; 10
     cb0:	0f b6       	in	r0, 0x3f	; 63
     cb2:	f8 94       	cli
     cb4:	de bf       	out	0x3e, r29	; 62
     cb6:	0f be       	out	0x3f, r0	; 63
     cb8:	cd bf       	out	0x3d, r28	; 61
     cba:	df 91       	pop	r29
     cbc:	cf 91       	pop	r28
     cbe:	ff 91       	pop	r31
     cc0:	ef 91       	pop	r30
     cc2:	bf 91       	pop	r27
     cc4:	af 91       	pop	r26
     cc6:	9f 91       	pop	r25
     cc8:	8f 91       	pop	r24
     cca:	7f 91       	pop	r23
     ccc:	6f 91       	pop	r22
     cce:	5f 91       	pop	r21
     cd0:	4f 91       	pop	r20
     cd2:	3f 91       	pop	r19
     cd4:	2f 91       	pop	r18
     cd6:	1f 91       	pop	r17
     cd8:	0f 91       	pop	r16
     cda:	ff 90       	pop	r15
     cdc:	df 90       	pop	r13
     cde:	cf 90       	pop	r12
     ce0:	0f 90       	pop	r0
     ce2:	0f be       	out	0x3f, r0	; 63
     ce4:	0f 90       	pop	r0
     ce6:	1f 90       	pop	r1
     ce8:	18 95       	reti

00000cea <main>:


int main(void)
{

	USART_Init(31);
     cea:	8f e1       	ldi	r24, 0x1F	; 31
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	0e 94 7e 04 	call	0x8fc	; 0x8fc <USART_Init>
	fdevopen(USART_Transmit, USART_Receive);
     cf2:	69 e8       	ldi	r22, 0x89	; 137
     cf4:	74 e0       	ldi	r23, 0x04	; 4
     cf6:	85 e8       	ldi	r24, 0x85	; 133
     cf8:	94 e0       	ldi	r25, 0x04	; 4
     cfa:	0e 94 a6 0c 	call	0x194c	; 0x194c <fdevopen>
	adc_init();
     cfe:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <adc_init>
	interrupt_init();
     d02:	0e 94 31 05 	call	0xa62	; 0xa62 <interrupt_init>
	
	SFIOR |= (1 << XMM0 ); // mask unused bits for DATABUS
     d06:	80 b7       	in	r24, 0x30	; 48
     d08:	88 60       	ori	r24, 0x08	; 8
     d0a:	80 bf       	out	0x30, r24	; 48
	
	adc_calibrate();
     d0c:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <adc_calibrate>
	OLED_init();
     d10:	0e 94 72 0b 	call	0x16e4	; 0x16e4 <OLED_init>
	OLED_reset();
     d14:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
	
	CAN_init();
     d18:	0e 94 a4 03 	call	0x748	; 0x748 <CAN_init>
	
	flag_init();
     d1c:	0e 94 bf 06 	call	0xd7e	; 0xd7e <flag_init>
	
	
	Main_menu();
     d20:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <Main_menu>

	in_game = 0;
     d24:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <in_game>
	struct Can_Message can_message; //DEBUG TEST MESSAGE
	can_message.id = id_joystick_slider;
	can_message.length = lenght_joystick_slider;
	
	can_message_buttons.id = id_buttons;
     d28:	ef ee       	ldi	r30, 0xEF	; 239
     d2a:	f3 e0       	ldi	r31, 0x03	; 3
     d2c:	82 e0       	ldi	r24, 0x02	; 2
     d2e:	80 83       	st	Z, r24
	can_message_buttons.length = length_buttons;
     d30:	81 e0       	ldi	r24, 0x01	; 1
     d32:	81 83       	std	Z+1, r24	; 0x01
	
	while (1)
	{
		
		
		if (in_game == 1){ //TODO: Check if this works or if it needs to be in_game = 1;
     d34:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <in_game>
     d38:	81 30       	cpi	r24, 0x01	; 1
     d3a:	19 f4       	brne	.+6      	; 0xd42 <main+0x58>
			poll_new_readings();
     d3c:	0e 94 c1 02 	call	0x582	; 0x582 <poll_new_readings>
     d40:	f9 cf       	rjmp	.-14     	; 0xd34 <main+0x4a>
			// Update OLED while in game
			//printf("%d \r\n",Game_status.in_game);
		}
		else {
			get_stick_direction();
     d42:	0e 94 88 02 	call	0x510	; 0x510 <get_stick_direction>
			if (right_button){
     d46:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <right_button>
     d4a:	88 23       	and	r24, r24
     d4c:	21 f0       	breq	.+8      	; 0xd56 <main+0x6c>
				Change_page();
     d4e:	0e 94 8d 0a 	call	0x151a	; 0x151a <Change_page>
				right_button = 0;
     d52:	10 92 c8 02 	sts	0x02C8, r1	; 0x8002c8 <right_button>
			}
			
			if (stick_state.Y_direction == NEUTRAL){
     d56:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     d5a:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
     d5e:	00 97       	sbiw	r24, 0x00	; 0
     d60:	19 f4       	brne	.+6      	; 0xd68 <main+0x7e>
				neutral_check = 1;
     d62:	21 e0       	ldi	r18, 0x01	; 1
     d64:	20 93 c6 02 	sts	0x02C6, r18	; 0x8002c6 <__data_end>
			}
			
			if (neutral_check == 1){
     d68:	20 91 c6 02 	lds	r18, 0x02C6	; 0x8002c6 <__data_end>
     d6c:	21 30       	cpi	r18, 0x01	; 1
     d6e:	11 f7       	brne	.-60     	; 0xd34 <main+0x4a>
				if (stick_state.Y_direction != NEUTRAL){
     d70:	89 2b       	or	r24, r25
     d72:	01 f3       	breq	.-64     	; 0xd34 <main+0x4a>
					//printf("Refresh");
					Arrow_refresh();
     d74:	0e 94 f4 06 	call	0xde8	; 0xde8 <Arrow_refresh>
					neutral_check = 0;
     d78:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <__data_end>
     d7c:	db cf       	rjmp	.-74     	; 0xd34 <main+0x4a>

00000d7e <flag_init>:
	strcpy(Menu_contents.linedata[5], "element 4");
	strcpy(Menu_contents.linedata[6], "element 5");
	strcpy(Menu_contents.linedata[7], "element 6");
	strcpy(Menu_contents.linedata[8], "element 7");
	Menu_contents.menu_index = 1;
	Menu_print();
     d7e:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <Menu_contents+0x1>
     d82:	08 95       	ret

00000d84 <Menu_print_arrow>:
     d84:	80 e0       	ldi	r24, 0x00	; 0
     d86:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     d8a:	88 e1       	ldi	r24, 0x18	; 24
     d8c:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     d90:	88 e1       	ldi	r24, 0x18	; 24
     d92:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     d96:	88 e1       	ldi	r24, 0x18	; 24
     d98:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     d9c:	8e e7       	ldi	r24, 0x7E	; 126
     d9e:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     da2:	8c e3       	ldi	r24, 0x3C	; 60
     da4:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     da8:	88 e1       	ldi	r24, 0x18	; 24
     daa:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     dae:	80 e0       	ldi	r24, 0x00	; 0
     db0:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     db4:	08 95       	ret

00000db6 <Menu_no_arrow>:
     db6:	80 e0       	ldi	r24, 0x00	; 0
     db8:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     dbc:	80 e0       	ldi	r24, 0x00	; 0
     dbe:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     dc2:	80 e0       	ldi	r24, 0x00	; 0
     dc4:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     dc8:	80 e0       	ldi	r24, 0x00	; 0
     dca:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     dce:	80 e0       	ldi	r24, 0x00	; 0
     dd0:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     dd4:	80 e0       	ldi	r24, 0x00	; 0
     dd6:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     dda:	80 e0       	ldi	r24, 0x00	; 0
     ddc:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     de0:	80 e0       	ldi	r24, 0x00	; 0
     de2:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
     de6:	08 95       	ret

00000de8 <Arrow_refresh>:
     de8:	1f 93       	push	r17
     dea:	cf 93       	push	r28
     dec:	df 93       	push	r29
     dee:	0e 94 88 02 	call	0x510	; 0x510 <get_stick_direction>
     df2:	e6 ef       	ldi	r30, 0xF6	; 246
     df4:	f2 e0       	ldi	r31, 0x02	; 2
     df6:	10 81       	ld	r17, Z
     df8:	c1 2f       	mov	r28, r17
     dfa:	d0 e0       	ldi	r29, 0x00	; 0
     dfc:	81 81       	ldd	r24, Z+1	; 0x01
     dfe:	81 81       	ldd	r24, Z+1	; 0x01
     e00:	81 30       	cpi	r24, 0x01	; 1
     e02:	09 f0       	breq	.+2      	; 0xe06 <Arrow_refresh+0x1e>
     e04:	84 c0       	rjmp	.+264    	; 0xf0e <Arrow_refresh+0x126>
     e06:	c2 30       	cpi	r28, 0x02	; 2
     e08:	d1 05       	cpc	r29, r1
     e0a:	49 f5       	brne	.+82     	; 0xe5e <Arrow_refresh+0x76>
     e0c:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     e10:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
     e14:	04 97       	sbiw	r24, 0x04	; 4
     e16:	79 f4       	brne	.+30     	; 0xe36 <Arrow_refresh+0x4e>
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	81 0f       	add	r24, r17
     e1c:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
     e20:	60 e0       	ldi	r22, 0x00	; 0
     e22:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     e26:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
     e2a:	60 e0       	ldi	r22, 0x00	; 0
     e2c:	81 2f       	mov	r24, r17
     e2e:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     e32:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
     e36:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     e3a:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
     e3e:	01 97       	sbiw	r24, 0x01	; 1
     e40:	71 f4       	brne	.+28     	; 0xe5e <Arrow_refresh+0x76>
     e42:	87 e0       	ldi	r24, 0x07	; 7
     e44:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
     e48:	60 e0       	ldi	r22, 0x00	; 0
     e4a:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     e4e:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
     e52:	60 e0       	ldi	r22, 0x00	; 0
     e54:	81 2f       	mov	r24, r17
     e56:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     e5a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
     e5e:	c3 30       	cpi	r28, 0x03	; 3
     e60:	d1 05       	cpc	r29, r1
     e62:	51 f5       	brne	.+84     	; 0xeb8 <Arrow_refresh+0xd0>
     e64:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     e68:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
     e6c:	01 97       	sbiw	r24, 0x01	; 1
     e6e:	81 f4       	brne	.+32     	; 0xe90 <Arrow_refresh+0xa8>
     e70:	e6 ef       	ldi	r30, 0xF6	; 246
     e72:	f2 e0       	ldi	r31, 0x02	; 2
     e74:	80 81       	ld	r24, Z
     e76:	81 50       	subi	r24, 0x01	; 1
     e78:	80 83       	st	Z, r24
     e7a:	60 e0       	ldi	r22, 0x00	; 0
     e7c:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     e80:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
     e84:	60 e0       	ldi	r22, 0x00	; 0
     e86:	81 2f       	mov	r24, r17
     e88:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     e8c:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
     e90:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     e94:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
     e98:	04 97       	sbiw	r24, 0x04	; 4
     e9a:	71 f4       	brne	.+28     	; 0xeb8 <Arrow_refresh+0xd0>
     e9c:	87 e0       	ldi	r24, 0x07	; 7
     e9e:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
     ea2:	60 e0       	ldi	r22, 0x00	; 0
     ea4:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     ea8:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
     eac:	60 e0       	ldi	r22, 0x00	; 0
     eae:	81 2f       	mov	r24, r17
     eb0:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     eb4:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
     eb8:	c7 30       	cpi	r28, 0x07	; 7
     eba:	d1 05       	cpc	r29, r1
     ebc:	41 f5       	brne	.+80     	; 0xf0e <Arrow_refresh+0x126>
     ebe:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     ec2:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
     ec6:	01 97       	sbiw	r24, 0x01	; 1
     ec8:	71 f4       	brne	.+28     	; 0xee6 <Arrow_refresh+0xfe>
     eca:	83 e0       	ldi	r24, 0x03	; 3
     ecc:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
     ed0:	60 e0       	ldi	r22, 0x00	; 0
     ed2:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     ed6:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
     eda:	60 e0       	ldi	r22, 0x00	; 0
     edc:	81 2f       	mov	r24, r17
     ede:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     ee2:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
     ee6:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     eea:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
     eee:	04 97       	sbiw	r24, 0x04	; 4
     ef0:	71 f4       	brne	.+28     	; 0xf0e <Arrow_refresh+0x126>
     ef2:	82 e0       	ldi	r24, 0x02	; 2
     ef4:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
     ef8:	60 e0       	ldi	r22, 0x00	; 0
     efa:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     efe:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
     f02:	60 e0       	ldi	r22, 0x00	; 0
     f04:	81 2f       	mov	r24, r17
     f06:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     f0a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
     f0e:	80 91 f7 02 	lds	r24, 0x02F7	; 0x8002f7 <Menu_contents+0x1>
     f12:	82 30       	cpi	r24, 0x02	; 2
     f14:	09 f0       	breq	.+2      	; 0xf18 <Arrow_refresh+0x130>
     f16:	85 c0       	rjmp	.+266    	; 0x1022 <Arrow_refresh+0x23a>
     f18:	c2 30       	cpi	r28, 0x02	; 2
     f1a:	d1 05       	cpc	r29, r1
     f1c:	51 f5       	brne	.+84     	; 0xf72 <Arrow_refresh+0x18a>
     f1e:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     f22:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
     f26:	04 97       	sbiw	r24, 0x04	; 4
     f28:	81 f4       	brne	.+32     	; 0xf4a <Arrow_refresh+0x162>
     f2a:	e6 ef       	ldi	r30, 0xF6	; 246
     f2c:	f2 e0       	ldi	r31, 0x02	; 2
     f2e:	80 81       	ld	r24, Z
     f30:	8f 5f       	subi	r24, 0xFF	; 255
     f32:	80 83       	st	Z, r24
     f34:	60 e0       	ldi	r22, 0x00	; 0
     f36:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     f3a:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
     f3e:	60 e0       	ldi	r22, 0x00	; 0
     f40:	81 2f       	mov	r24, r17
     f42:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     f46:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
     f4a:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     f4e:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
     f52:	01 97       	sbiw	r24, 0x01	; 1
     f54:	71 f4       	brne	.+28     	; 0xf72 <Arrow_refresh+0x18a>
     f56:	87 e0       	ldi	r24, 0x07	; 7
     f58:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
     f5c:	60 e0       	ldi	r22, 0x00	; 0
     f5e:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     f62:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
     f66:	60 e0       	ldi	r22, 0x00	; 0
     f68:	81 2f       	mov	r24, r17
     f6a:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     f6e:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
     f72:	c3 30       	cpi	r28, 0x03	; 3
     f74:	d1 05       	cpc	r29, r1
     f76:	51 f5       	brne	.+84     	; 0xfcc <Arrow_refresh+0x1e4>
     f78:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     f7c:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
     f80:	01 97       	sbiw	r24, 0x01	; 1
     f82:	81 f4       	brne	.+32     	; 0xfa4 <Arrow_refresh+0x1bc>
     f84:	e6 ef       	ldi	r30, 0xF6	; 246
     f86:	f2 e0       	ldi	r31, 0x02	; 2
     f88:	80 81       	ld	r24, Z
     f8a:	81 50       	subi	r24, 0x01	; 1
     f8c:	80 83       	st	Z, r24
     f8e:	60 e0       	ldi	r22, 0x00	; 0
     f90:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     f94:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
     f98:	60 e0       	ldi	r22, 0x00	; 0
     f9a:	81 2f       	mov	r24, r17
     f9c:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     fa0:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
     fa4:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     fa8:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
     fac:	04 97       	sbiw	r24, 0x04	; 4
     fae:	71 f4       	brne	.+28     	; 0xfcc <Arrow_refresh+0x1e4>
     fb0:	87 e0       	ldi	r24, 0x07	; 7
     fb2:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
     fb6:	60 e0       	ldi	r22, 0x00	; 0
     fb8:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     fbc:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
     fc0:	60 e0       	ldi	r22, 0x00	; 0
     fc2:	81 2f       	mov	r24, r17
     fc4:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     fc8:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
     fcc:	c7 30       	cpi	r28, 0x07	; 7
     fce:	d1 05       	cpc	r29, r1
     fd0:	41 f5       	brne	.+80     	; 0x1022 <Arrow_refresh+0x23a>
     fd2:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     fd6:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
     fda:	01 97       	sbiw	r24, 0x01	; 1
     fdc:	71 f4       	brne	.+28     	; 0xffa <Arrow_refresh+0x212>
     fde:	83 e0       	ldi	r24, 0x03	; 3
     fe0:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
     fe4:	60 e0       	ldi	r22, 0x00	; 0
     fe6:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     fea:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
     fee:	60 e0       	ldi	r22, 0x00	; 0
     ff0:	81 2f       	mov	r24, r17
     ff2:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
     ff6:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
     ffa:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
     ffe:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
    1002:	04 97       	sbiw	r24, 0x04	; 4
    1004:	71 f4       	brne	.+28     	; 0x1022 <Arrow_refresh+0x23a>
    1006:	82 e0       	ldi	r24, 0x02	; 2
    1008:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
    100c:	60 e0       	ldi	r22, 0x00	; 0
    100e:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    1012:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
    1016:	60 e0       	ldi	r22, 0x00	; 0
    1018:	81 2f       	mov	r24, r17
    101a:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    101e:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
    1022:	80 91 f7 02 	lds	r24, 0x02F7	; 0x8002f7 <Menu_contents+0x1>
    1026:	83 30       	cpi	r24, 0x03	; 3
    1028:	09 f0       	breq	.+2      	; 0x102c <Arrow_refresh+0x244>
    102a:	b1 c0       	rjmp	.+354    	; 0x118e <Arrow_refresh+0x3a6>
    102c:	c2 30       	cpi	r28, 0x02	; 2
    102e:	d1 05       	cpc	r29, r1
    1030:	51 f5       	brne	.+84     	; 0x1086 <Arrow_refresh+0x29e>
    1032:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
    1036:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
    103a:	01 97       	sbiw	r24, 0x01	; 1
    103c:	71 f4       	brne	.+28     	; 0x105a <Arrow_refresh+0x272>
    103e:	87 e0       	ldi	r24, 0x07	; 7
    1040:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
    1044:	60 e0       	ldi	r22, 0x00	; 0
    1046:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    104a:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
    104e:	60 e0       	ldi	r22, 0x00	; 0
    1050:	81 2f       	mov	r24, r17
    1052:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    1056:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
    105a:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
    105e:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
    1062:	04 97       	sbiw	r24, 0x04	; 4
    1064:	81 f4       	brne	.+32     	; 0x1086 <Arrow_refresh+0x29e>
    1066:	e6 ef       	ldi	r30, 0xF6	; 246
    1068:	f2 e0       	ldi	r31, 0x02	; 2
    106a:	80 81       	ld	r24, Z
    106c:	8f 5f       	subi	r24, 0xFF	; 255
    106e:	80 83       	st	Z, r24
    1070:	60 e0       	ldi	r22, 0x00	; 0
    1072:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    1076:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
    107a:	60 e0       	ldi	r22, 0x00	; 0
    107c:	81 2f       	mov	r24, r17
    107e:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    1082:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
    1086:	c3 30       	cpi	r28, 0x03	; 3
    1088:	d1 05       	cpc	r29, r1
    108a:	61 f5       	brne	.+88     	; 0x10e4 <Arrow_refresh+0x2fc>
    108c:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
    1090:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
    1094:	04 97       	sbiw	r24, 0x04	; 4
    1096:	81 f4       	brne	.+32     	; 0x10b8 <Arrow_refresh+0x2d0>
    1098:	e6 ef       	ldi	r30, 0xF6	; 246
    109a:	f2 e0       	ldi	r31, 0x02	; 2
    109c:	80 81       	ld	r24, Z
    109e:	8f 5f       	subi	r24, 0xFF	; 255
    10a0:	80 83       	st	Z, r24
    10a2:	60 e0       	ldi	r22, 0x00	; 0
    10a4:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    10a8:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
    10ac:	60 e0       	ldi	r22, 0x00	; 0
    10ae:	81 2f       	mov	r24, r17
    10b0:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    10b4:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
    10b8:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
    10bc:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
    10c0:	01 97       	sbiw	r24, 0x01	; 1
    10c2:	81 f4       	brne	.+32     	; 0x10e4 <Arrow_refresh+0x2fc>
    10c4:	e6 ef       	ldi	r30, 0xF6	; 246
    10c6:	f2 e0       	ldi	r31, 0x02	; 2
    10c8:	80 81       	ld	r24, Z
    10ca:	81 50       	subi	r24, 0x01	; 1
    10cc:	80 83       	st	Z, r24
    10ce:	60 e0       	ldi	r22, 0x00	; 0
    10d0:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    10d4:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
    10d8:	60 e0       	ldi	r22, 0x00	; 0
    10da:	81 2f       	mov	r24, r17
    10dc:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    10e0:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
    10e4:	c4 30       	cpi	r28, 0x04	; 4
    10e6:	d1 05       	cpc	r29, r1
    10e8:	41 f5       	brne	.+80     	; 0x113a <Arrow_refresh+0x352>
    10ea:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
    10ee:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
    10f2:	01 97       	sbiw	r24, 0x01	; 1
    10f4:	71 f4       	brne	.+28     	; 0x1112 <Arrow_refresh+0x32a>
    10f6:	83 e0       	ldi	r24, 0x03	; 3
    10f8:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
    10fc:	60 e0       	ldi	r22, 0x00	; 0
    10fe:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    1102:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
    1106:	60 e0       	ldi	r22, 0x00	; 0
    1108:	81 2f       	mov	r24, r17
    110a:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    110e:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
    1112:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
    1116:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
    111a:	04 97       	sbiw	r24, 0x04	; 4
    111c:	71 f4       	brne	.+28     	; 0x113a <Arrow_refresh+0x352>
    111e:	87 e0       	ldi	r24, 0x07	; 7
    1120:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
    1124:	60 e0       	ldi	r22, 0x00	; 0
    1126:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    112a:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
    112e:	60 e0       	ldi	r22, 0x00	; 0
    1130:	81 2f       	mov	r24, r17
    1132:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    1136:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
    113a:	27 97       	sbiw	r28, 0x07	; 7
    113c:	41 f5       	brne	.+80     	; 0x118e <Arrow_refresh+0x3a6>
    113e:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
    1142:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
    1146:	01 97       	sbiw	r24, 0x01	; 1
    1148:	71 f4       	brne	.+28     	; 0x1166 <Arrow_refresh+0x37e>
    114a:	84 e0       	ldi	r24, 0x04	; 4
    114c:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
    1150:	60 e0       	ldi	r22, 0x00	; 0
    1152:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    1156:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
    115a:	60 e0       	ldi	r22, 0x00	; 0
    115c:	81 2f       	mov	r24, r17
    115e:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    1162:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
    1166:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <stick_state+0x6>
    116a:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <stick_state+0x7>
    116e:	04 97       	sbiw	r24, 0x04	; 4
    1170:	71 f4       	brne	.+28     	; 0x118e <Arrow_refresh+0x3a6>
    1172:	82 e0       	ldi	r24, 0x02	; 2
    1174:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
    1178:	60 e0       	ldi	r22, 0x00	; 0
    117a:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    117e:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
    1182:	60 e0       	ldi	r22, 0x00	; 0
    1184:	81 2f       	mov	r24, r17
    1186:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    118a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <Menu_no_arrow>
    118e:	df 91       	pop	r29
    1190:	cf 91       	pop	r28
    1192:	1f 91       	pop	r17
    1194:	08 95       	ret

00001196 <Menu_print>:
    1196:	cf 93       	push	r28
    1198:	df 93       	push	r29
    119a:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <OLED_home>
    119e:	87 e0       	ldi	r24, 0x07	; 7
    11a0:	93 e0       	ldi	r25, 0x03	; 3
    11a2:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <OLED_printf>
    11a6:	c1 e0       	ldi	r28, 0x01	; 1
    11a8:	d0 e0       	ldi	r29, 0x00	; 0
    11aa:	0f c0       	rjmp	.+30     	; 0x11ca <Menu_print+0x34>
    11ac:	6a e0       	ldi	r22, 0x0A	; 10
    11ae:	8c 2f       	mov	r24, r28
    11b0:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    11b4:	21 96       	adiw	r28, 0x01	; 1
    11b6:	2f e0       	ldi	r18, 0x0F	; 15
    11b8:	2c 9f       	mul	r18, r28
    11ba:	c0 01       	movw	r24, r0
    11bc:	2d 9f       	mul	r18, r29
    11be:	90 0d       	add	r25, r0
    11c0:	11 24       	eor	r1, r1
    11c2:	88 50       	subi	r24, 0x08	; 8
    11c4:	9d 4f       	sbci	r25, 0xFD	; 253
    11c6:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <OLED_printf>
    11ca:	c8 30       	cpi	r28, 0x08	; 8
    11cc:	d1 05       	cpc	r29, r1
    11ce:	74 f3       	brlt	.-36     	; 0x11ac <Menu_print+0x16>
    11d0:	60 e0       	ldi	r22, 0x00	; 0
    11d2:	80 91 f6 02 	lds	r24, 0x02F6	; 0x8002f6 <Menu_contents>
    11d6:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    11da:	0e 94 c2 06 	call	0xd84	; 0xd84 <Menu_print_arrow>
    11de:	df 91       	pop	r29
    11e0:	cf 91       	pop	r28
    11e2:	08 95       	ret

000011e4 <Main_menu>:
}

void Main_menu(){
	strcpy(Menu_contents.linedata[1], " - MAIN MENU -");
    11e4:	8f e0       	ldi	r24, 0x0F	; 15
    11e6:	e6 e0       	ldi	r30, 0x06	; 6
    11e8:	f2 e0       	ldi	r31, 0x02	; 2
    11ea:	a7 e0       	ldi	r26, 0x07	; 7
    11ec:	b3 e0       	ldi	r27, 0x03	; 3
    11ee:	01 90       	ld	r0, Z+
    11f0:	0d 92       	st	X+, r0
    11f2:	8a 95       	dec	r24
    11f4:	e1 f7       	brne	.-8      	; 0x11ee <Main_menu+0xa>
	strcpy(Menu_contents.linedata[2], " ");
    11f6:	80 e2       	ldi	r24, 0x20	; 32
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <Menu_contents+0x21>
    11fe:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <Menu_contents+0x20>
	strcpy(Menu_contents.linedata[3], "PLAY");
    1202:	25 e0       	ldi	r18, 0x05	; 5
    1204:	e1 e0       	ldi	r30, 0x01	; 1
    1206:	f2 e0       	ldi	r31, 0x02	; 2
    1208:	a5 e2       	ldi	r26, 0x25	; 37
    120a:	b3 e0       	ldi	r27, 0x03	; 3
    120c:	01 90       	ld	r0, Z+
    120e:	0d 92       	st	X+, r0
    1210:	2a 95       	dec	r18
    1212:	e1 f7       	brne	.-8      	; 0x120c <Main_menu+0x28>
	strcpy(Menu_contents.linedata[4], " ");
    1214:	90 93 35 03 	sts	0x0335, r25	; 0x800335 <Menu_contents+0x3f>
    1218:	80 93 34 03 	sts	0x0334, r24	; 0x800334 <Menu_contents+0x3e>
	strcpy(Menu_contents.linedata[5], " ");
    121c:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <Menu_contents+0x4e>
    1220:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <Menu_contents+0x4d>
	strcpy(Menu_contents.linedata[6], " ");
    1224:	90 93 53 03 	sts	0x0353, r25	; 0x800353 <Menu_contents+0x5d>
    1228:	80 93 52 03 	sts	0x0352, r24	; 0x800352 <Menu_contents+0x5c>
	strcpy(Menu_contents.linedata[7], " ");
    122c:	90 93 62 03 	sts	0x0362, r25	; 0x800362 <Menu_contents+0x6c>
    1230:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <Menu_contents+0x6b>
	strcpy(Menu_contents.linedata[8], " ");
    1234:	90 93 71 03 	sts	0x0371, r25	; 0x800371 <max_time>
    1238:	80 93 70 03 	sts	0x0370, r24	; 0x800370 <score1>
	Menu_contents.menu_index = 2;
    123c:	82 e0       	ldi	r24, 0x02	; 2
    123e:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
	Menu_print();
    1242:	0e 94 cb 08 	call	0x1196	; 0x1196 <Menu_print>
    1246:	08 95       	ret

00001248 <Game_Modes_Menu>:
}

void Game_Modes_Menu(){
	strcpy(Menu_contents.linedata[1], "- GAME MODES: - ");
    1248:	81 e1       	ldi	r24, 0x11	; 17
    124a:	e5 e1       	ldi	r30, 0x15	; 21
    124c:	f2 e0       	ldi	r31, 0x02	; 2
    124e:	a7 e0       	ldi	r26, 0x07	; 7
    1250:	b3 e0       	ldi	r27, 0x03	; 3
    1252:	01 90       	ld	r0, Z+
    1254:	0d 92       	st	X+, r0
    1256:	8a 95       	dec	r24
    1258:	e1 f7       	brne	.-8      	; 0x1252 <Game_Modes_Menu+0xa>
	strcpy(Menu_contents.linedata[2], " ");
    125a:	80 e2       	ldi	r24, 0x20	; 32
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <Menu_contents+0x21>
    1262:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <Menu_contents+0x20>
	strcpy(Menu_contents.linedata[3], "Normal mode");
    1266:	2c e0       	ldi	r18, 0x0C	; 12
    1268:	e6 e2       	ldi	r30, 0x26	; 38
    126a:	f2 e0       	ldi	r31, 0x02	; 2
    126c:	a5 e2       	ldi	r26, 0x25	; 37
    126e:	b3 e0       	ldi	r27, 0x03	; 3
    1270:	01 90       	ld	r0, Z+
    1272:	0d 92       	st	X+, r0
    1274:	2a 95       	dec	r18
    1276:	e1 f7       	brne	.-8      	; 0x1270 <Game_Modes_Menu+0x28>
	strcpy(Menu_contents.linedata[4], "Arcade mode");
    1278:	2c e0       	ldi	r18, 0x0C	; 12
    127a:	e2 e3       	ldi	r30, 0x32	; 50
    127c:	f2 e0       	ldi	r31, 0x02	; 2
    127e:	a4 e3       	ldi	r26, 0x34	; 52
    1280:	b3 e0       	ldi	r27, 0x03	; 3
    1282:	01 90       	ld	r0, Z+
    1284:	0d 92       	st	X+, r0
    1286:	2a 95       	dec	r18
    1288:	e1 f7       	brne	.-8      	; 0x1282 <Game_Modes_Menu+0x3a>
	strcpy(Menu_contents.linedata[5], " ");
    128a:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <Menu_contents+0x4e>
    128e:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <Menu_contents+0x4d>
	strcpy(Menu_contents.linedata[6], " ");
    1292:	90 93 53 03 	sts	0x0353, r25	; 0x800353 <Menu_contents+0x5d>
    1296:	80 93 52 03 	sts	0x0352, r24	; 0x800352 <Menu_contents+0x5c>
	strcpy(Menu_contents.linedata[7], " ");
    129a:	90 93 62 03 	sts	0x0362, r25	; 0x800362 <Menu_contents+0x6c>
    129e:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <Menu_contents+0x6b>
	strcpy(Menu_contents.linedata[8], "Back");
    12a2:	85 e0       	ldi	r24, 0x05	; 5
    12a4:	ee e3       	ldi	r30, 0x3E	; 62
    12a6:	f2 e0       	ldi	r31, 0x02	; 2
    12a8:	a0 e7       	ldi	r26, 0x70	; 112
    12aa:	b3 e0       	ldi	r27, 0x03	; 3
    12ac:	01 90       	ld	r0, Z+
    12ae:	0d 92       	st	X+, r0
    12b0:	8a 95       	dec	r24
    12b2:	e1 f7       	brne	.-8      	; 0x12ac <Game_Modes_Menu+0x64>
	Menu_contents.menu_index = 2;
    12b4:	82 e0       	ldi	r24, 0x02	; 2
    12b6:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
	Menu_print();
    12ba:	0e 94 cb 08 	call	0x1196	; 0x1196 <Menu_print>
    12be:	08 95       	ret

000012c0 <Controller_Menu>:
}

void Controller_Menu(){
	strcpy(Menu_contents.linedata[1], "- Controller: - ");
    12c0:	81 e1       	ldi	r24, 0x11	; 17
    12c2:	e3 e4       	ldi	r30, 0x43	; 67
    12c4:	f2 e0       	ldi	r31, 0x02	; 2
    12c6:	a7 e0       	ldi	r26, 0x07	; 7
    12c8:	b3 e0       	ldi	r27, 0x03	; 3
    12ca:	01 90       	ld	r0, Z+
    12cc:	0d 92       	st	X+, r0
    12ce:	8a 95       	dec	r24
    12d0:	e1 f7       	brne	.-8      	; 0x12ca <Controller_Menu+0xa>
	strcpy(Menu_contents.linedata[2], " ");
    12d2:	80 e2       	ldi	r24, 0x20	; 32
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <Menu_contents+0x21>
    12da:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <Menu_contents+0x20>
	strcpy(Menu_contents.linedata[3], "Joystick");
    12de:	29 e0       	ldi	r18, 0x09	; 9
    12e0:	e4 e5       	ldi	r30, 0x54	; 84
    12e2:	f2 e0       	ldi	r31, 0x02	; 2
    12e4:	a5 e2       	ldi	r26, 0x25	; 37
    12e6:	b3 e0       	ldi	r27, 0x03	; 3
    12e8:	01 90       	ld	r0, Z+
    12ea:	0d 92       	st	X+, r0
    12ec:	2a 95       	dec	r18
    12ee:	e1 f7       	brne	.-8      	; 0x12e8 <Controller_Menu+0x28>
	strcpy(Menu_contents.linedata[4], "Sliders");
    12f0:	28 e0       	ldi	r18, 0x08	; 8
    12f2:	ed e5       	ldi	r30, 0x5D	; 93
    12f4:	f2 e0       	ldi	r31, 0x02	; 2
    12f6:	a4 e3       	ldi	r26, 0x34	; 52
    12f8:	b3 e0       	ldi	r27, 0x03	; 3
    12fa:	01 90       	ld	r0, Z+
    12fc:	0d 92       	st	X+, r0
    12fe:	2a 95       	dec	r18
    1300:	e1 f7       	brne	.-8      	; 0x12fa <Controller_Menu+0x3a>
	strcpy(Menu_contents.linedata[5], " ");
    1302:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <Menu_contents+0x4e>
    1306:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <Menu_contents+0x4d>
	strcpy(Menu_contents.linedata[6], " ");
    130a:	90 93 53 03 	sts	0x0353, r25	; 0x800353 <Menu_contents+0x5d>
    130e:	80 93 52 03 	sts	0x0352, r24	; 0x800352 <Menu_contents+0x5c>
	strcpy(Menu_contents.linedata[7], " ");
    1312:	90 93 62 03 	sts	0x0362, r25	; 0x800362 <Menu_contents+0x6c>
    1316:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <Menu_contents+0x6b>
	strcpy(Menu_contents.linedata[8], "Back");
    131a:	85 e0       	ldi	r24, 0x05	; 5
    131c:	ee e3       	ldi	r30, 0x3E	; 62
    131e:	f2 e0       	ldi	r31, 0x02	; 2
    1320:	a0 e7       	ldi	r26, 0x70	; 112
    1322:	b3 e0       	ldi	r27, 0x03	; 3
    1324:	01 90       	ld	r0, Z+
    1326:	0d 92       	st	X+, r0
    1328:	8a 95       	dec	r24
    132a:	e1 f7       	brne	.-8      	; 0x1324 <Controller_Menu+0x64>
	Menu_contents.menu_index = 2;
    132c:	82 e0       	ldi	r24, 0x02	; 2
    132e:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
	Menu_print();
    1332:	0e 94 cb 08 	call	0x1196	; 0x1196 <Menu_print>
    1336:	08 95       	ret

00001338 <Difficulty_Menu>:
}

void Difficulty_Menu(){
    1338:	cf 93       	push	r28
    133a:	df 93       	push	r29
	strcpy(Menu_contents.linedata[1], " - DIFFICULTY - ");
    133c:	81 e1       	ldi	r24, 0x11	; 17
    133e:	e5 e6       	ldi	r30, 0x65	; 101
    1340:	f2 e0       	ldi	r31, 0x02	; 2
    1342:	a7 e0       	ldi	r26, 0x07	; 7
    1344:	b3 e0       	ldi	r27, 0x03	; 3
    1346:	01 90       	ld	r0, Z+
    1348:	0d 92       	st	X+, r0
    134a:	8a 95       	dec	r24
    134c:	e1 f7       	brne	.-8      	; 0x1346 <Difficulty_Menu+0xe>
	strcpy(Menu_contents.linedata[2], "");
    134e:	c6 ef       	ldi	r28, 0xF6	; 246
    1350:	d2 e0       	ldi	r29, 0x02	; 2
    1352:	18 a2       	std	Y+32, r1	; 0x20
	strcpy(Menu_contents.linedata[3], "Easy");
    1354:	85 e0       	ldi	r24, 0x05	; 5
    1356:	e6 e7       	ldi	r30, 0x76	; 118
    1358:	f2 e0       	ldi	r31, 0x02	; 2
    135a:	a5 e2       	ldi	r26, 0x25	; 37
    135c:	b3 e0       	ldi	r27, 0x03	; 3
    135e:	01 90       	ld	r0, Z+
    1360:	0d 92       	st	X+, r0
    1362:	8a 95       	dec	r24
    1364:	e1 f7       	brne	.-8      	; 0x135e <Difficulty_Menu+0x26>
	strcpy(Menu_contents.linedata[4], "Normal");
    1366:	87 e0       	ldi	r24, 0x07	; 7
    1368:	eb e7       	ldi	r30, 0x7B	; 123
    136a:	f2 e0       	ldi	r31, 0x02	; 2
    136c:	a4 e3       	ldi	r26, 0x34	; 52
    136e:	b3 e0       	ldi	r27, 0x03	; 3
    1370:	01 90       	ld	r0, Z+
    1372:	0d 92       	st	X+, r0
    1374:	8a 95       	dec	r24
    1376:	e1 f7       	brne	.-8      	; 0x1370 <Difficulty_Menu+0x38>
	strcpy(Menu_contents.linedata[5], "Hard");
    1378:	85 e0       	ldi	r24, 0x05	; 5
    137a:	e2 e8       	ldi	r30, 0x82	; 130
    137c:	f2 e0       	ldi	r31, 0x02	; 2
    137e:	a3 e4       	ldi	r26, 0x43	; 67
    1380:	b3 e0       	ldi	r27, 0x03	; 3
    1382:	01 90       	ld	r0, Z+
    1384:	0d 92       	st	X+, r0
    1386:	8a 95       	dec	r24
    1388:	e1 f7       	brne	.-8      	; 0x1382 <Difficulty_Menu+0x4a>
	strcpy(Menu_contents.linedata[6], "");
    138a:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <Menu_contents+0x5c>
	strcpy(Menu_contents.linedata[7], "");
    138e:	10 92 61 03 	sts	0x0361, r1	; 0x800361 <Menu_contents+0x6b>
	strcpy(Menu_contents.linedata[8], "Back");
    1392:	85 e0       	ldi	r24, 0x05	; 5
    1394:	ee e3       	ldi	r30, 0x3E	; 62
    1396:	f2 e0       	ldi	r31, 0x02	; 2
    1398:	a0 e7       	ldi	r26, 0x70	; 112
    139a:	b3 e0       	ldi	r27, 0x03	; 3
    139c:	01 90       	ld	r0, Z+
    139e:	0d 92       	st	X+, r0
    13a0:	8a 95       	dec	r24
    13a2:	e1 f7       	brne	.-8      	; 0x139c <Difficulty_Menu+0x64>
	Menu_contents.menu_index = 2;
    13a4:	82 e0       	ldi	r24, 0x02	; 2
    13a6:	88 83       	st	Y, r24
	Menu_print();
    13a8:	0e 94 cb 08 	call	0x1196	; 0x1196 <Menu_print>
}
    13ac:	df 91       	pop	r29
    13ae:	cf 91       	pop	r28
    13b0:	08 95       	ret

000013b2 <Game_print>:
	}
	OLED_go_to_pos(Menu_contents.menu_index, 0);
	Menu_print_arrow();
}

void Game_print(){
    13b2:	cf 93       	push	r28
    13b4:	df 93       	push	r29
	OLED_home();
    13b6:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <OLED_home>
	OLED_printf(Menu_contents.linedata[1]);
    13ba:	87 e0       	ldi	r24, 0x07	; 7
    13bc:	93 e0       	ldi	r25, 0x03	; 3
    13be:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <OLED_printf>
	for (int i = 0; i < 8; i++){
    13c2:	c0 e0       	ldi	r28, 0x00	; 0
    13c4:	d0 e0       	ldi	r29, 0x00	; 0
    13c6:	0f c0       	rjmp	.+30     	; 0x13e6 <Game_print+0x34>
		OLED_go_to_pos(i, 0);
    13c8:	60 e0       	ldi	r22, 0x00	; 0
    13ca:	8c 2f       	mov	r24, r28
    13cc:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
		OLED_printf(Menu_contents.linedata[i+1]);
    13d0:	21 96       	adiw	r28, 0x01	; 1
    13d2:	2f e0       	ldi	r18, 0x0F	; 15
    13d4:	2c 9f       	mul	r18, r28
    13d6:	c0 01       	movw	r24, r0
    13d8:	2d 9f       	mul	r18, r29
    13da:	90 0d       	add	r25, r0
    13dc:	11 24       	eor	r1, r1
    13de:	88 50       	subi	r24, 0x08	; 8
    13e0:	9d 4f       	sbci	r25, 0xFD	; 253
    13e2:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <OLED_printf>
}

void Game_print(){
	OLED_home();
	OLED_printf(Menu_contents.linedata[1]);
	for (int i = 0; i < 8; i++){
    13e6:	c8 30       	cpi	r28, 0x08	; 8
    13e8:	d1 05       	cpc	r29, r1
    13ea:	74 f3       	brlt	.-36     	; 0x13c8 <Game_print+0x16>
		OLED_go_to_pos(i, 0);
		OLED_printf(Menu_contents.linedata[i+1]);
		}
}
    13ec:	df 91       	pop	r29
    13ee:	cf 91       	pop	r28
    13f0:	08 95       	ret

000013f2 <Standard_mode_Menu>:
	Menu_contents.menu_index = 2;
	Menu_print();
}

void Standard_mode_Menu(){
	strcpy(Menu_contents.linedata[1], "STANDARD MODE:");
    13f2:	8f e0       	ldi	r24, 0x0F	; 15
    13f4:	e7 e8       	ldi	r30, 0x87	; 135
    13f6:	f2 e0       	ldi	r31, 0x02	; 2
    13f8:	a7 e0       	ldi	r26, 0x07	; 7
    13fa:	b3 e0       	ldi	r27, 0x03	; 3
    13fc:	01 90       	ld	r0, Z+
    13fe:	0d 92       	st	X+, r0
    1400:	8a 95       	dec	r24
    1402:	e1 f7       	brne	.-8      	; 0x13fc <Standard_mode_Menu+0xa>
	strcpy(Menu_contents.linedata[2], " ");
    1404:	80 e2       	ldi	r24, 0x20	; 32
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <Menu_contents+0x21>
    140c:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <Menu_contents+0x20>
	strcpy(Menu_contents.linedata[3], "Score:");
    1410:	27 e0       	ldi	r18, 0x07	; 7
    1412:	ea e3       	ldi	r30, 0x3A	; 58
    1414:	f1 e0       	ldi	r31, 0x01	; 1
    1416:	a5 e2       	ldi	r26, 0x25	; 37
    1418:	b3 e0       	ldi	r27, 0x03	; 3
    141a:	01 90       	ld	r0, Z+
    141c:	0d 92       	st	X+, r0
    141e:	2a 95       	dec	r18
    1420:	e1 f7       	brne	.-8      	; 0x141a <Standard_mode_Menu+0x28>
	strcpy(Menu_contents.linedata[4], " ");
    1422:	90 93 35 03 	sts	0x0335, r25	; 0x800335 <Menu_contents+0x3f>
    1426:	80 93 34 03 	sts	0x0334, r24	; 0x800334 <Menu_contents+0x3e>
	strcpy(Menu_contents.linedata[5], " ");
    142a:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <Menu_contents+0x4e>
    142e:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <Menu_contents+0x4d>
	strcpy(Menu_contents.linedata[6], " ");
    1432:	90 93 53 03 	sts	0x0353, r25	; 0x800353 <Menu_contents+0x5d>
    1436:	80 93 52 03 	sts	0x0352, r24	; 0x800352 <Menu_contents+0x5c>
	strcpy(Menu_contents.linedata[7], " ");
    143a:	90 93 62 03 	sts	0x0362, r25	; 0x800362 <Menu_contents+0x6c>
    143e:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <Menu_contents+0x6b>
	strcpy(Menu_contents.linedata[8], " ");
    1442:	90 93 71 03 	sts	0x0371, r25	; 0x800371 <max_time>
    1446:	80 93 70 03 	sts	0x0370, r24	; 0x800370 <score1>
	Menu_contents.menu_index = 0;
    144a:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Menu_contents>
	Game_print();
    144e:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Game_print>
    1452:	08 95       	ret

00001454 <Arcade_mode_Menu>:
}

void Arcade_mode_Menu(){
	strcpy(Menu_contents.linedata[1], "Arcade MODE:");
    1454:	8d e0       	ldi	r24, 0x0D	; 13
    1456:	e6 e9       	ldi	r30, 0x96	; 150
    1458:	f2 e0       	ldi	r31, 0x02	; 2
    145a:	a7 e0       	ldi	r26, 0x07	; 7
    145c:	b3 e0       	ldi	r27, 0x03	; 3
    145e:	01 90       	ld	r0, Z+
    1460:	0d 92       	st	X+, r0
    1462:	8a 95       	dec	r24
    1464:	e1 f7       	brne	.-8      	; 0x145e <Arcade_mode_Menu+0xa>
	strcpy(Menu_contents.linedata[2], " ");
    1466:	80 e2       	ldi	r24, 0x20	; 32
    1468:	90 e0       	ldi	r25, 0x00	; 0
    146a:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <Menu_contents+0x21>
    146e:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <Menu_contents+0x20>
	strcpy(Menu_contents.linedata[3], "Time:");
    1472:	26 e0       	ldi	r18, 0x06	; 6
    1474:	e1 e4       	ldi	r30, 0x41	; 65
    1476:	f1 e0       	ldi	r31, 0x01	; 1
    1478:	a5 e2       	ldi	r26, 0x25	; 37
    147a:	b3 e0       	ldi	r27, 0x03	; 3
    147c:	01 90       	ld	r0, Z+
    147e:	0d 92       	st	X+, r0
    1480:	2a 95       	dec	r18
    1482:	e1 f7       	brne	.-8      	; 0x147c <Arcade_mode_Menu+0x28>
	strcpy(Menu_contents.linedata[4], " ");
    1484:	90 93 35 03 	sts	0x0335, r25	; 0x800335 <Menu_contents+0x3f>
    1488:	80 93 34 03 	sts	0x0334, r24	; 0x800334 <Menu_contents+0x3e>
	strcpy(Menu_contents.linedata[5], " ");
    148c:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <Menu_contents+0x4e>
    1490:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <Menu_contents+0x4d>
	strcpy(Menu_contents.linedata[6], " ");
    1494:	90 93 53 03 	sts	0x0353, r25	; 0x800353 <Menu_contents+0x5d>
    1498:	80 93 52 03 	sts	0x0352, r24	; 0x800352 <Menu_contents+0x5c>
	strcpy(Menu_contents.linedata[7], " ");
    149c:	90 93 62 03 	sts	0x0362, r25	; 0x800362 <Menu_contents+0x6c>
    14a0:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <Menu_contents+0x6b>
	strcpy(Menu_contents.linedata[8], " ");
    14a4:	90 93 71 03 	sts	0x0371, r25	; 0x800371 <max_time>
    14a8:	80 93 70 03 	sts	0x0370, r24	; 0x800370 <score1>
	Menu_contents.menu_index = 0;
    14ac:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Menu_contents>
	Game_print();
    14b0:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Game_print>
    14b4:	08 95       	ret

000014b6 <Game_Over_Menu>:
}

void Game_Over_Menu(){
	strcpy(Menu_contents.linedata[1], " - GAME OVER -");
    14b6:	8f e0       	ldi	r24, 0x0F	; 15
    14b8:	e0 eb       	ldi	r30, 0xB0	; 176
    14ba:	f2 e0       	ldi	r31, 0x02	; 2
    14bc:	a7 e0       	ldi	r26, 0x07	; 7
    14be:	b3 e0       	ldi	r27, 0x03	; 3
    14c0:	01 90       	ld	r0, Z+
    14c2:	0d 92       	st	X+, r0
    14c4:	8a 95       	dec	r24
    14c6:	e1 f7       	brne	.-8      	; 0x14c0 <Game_Over_Menu+0xa>
	strcpy(Menu_contents.linedata[2], " ");
    14c8:	80 e2       	ldi	r24, 0x20	; 32
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <Menu_contents+0x21>
    14d0:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <Menu_contents+0x20>
	strcpy(Menu_contents.linedata[3], " ");
    14d4:	90 93 26 03 	sts	0x0326, r25	; 0x800326 <Menu_contents+0x30>
    14d8:	80 93 25 03 	sts	0x0325, r24	; 0x800325 <Menu_contents+0x2f>
	strcpy(Menu_contents.linedata[4], " ");
    14dc:	90 93 35 03 	sts	0x0335, r25	; 0x800335 <Menu_contents+0x3f>
    14e0:	80 93 34 03 	sts	0x0334, r24	; 0x800334 <Menu_contents+0x3e>
	strcpy(Menu_contents.linedata[5], " ");
    14e4:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <Menu_contents+0x4e>
    14e8:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <Menu_contents+0x4d>
	strcpy(Menu_contents.linedata[6], " ");
    14ec:	90 93 53 03 	sts	0x0353, r25	; 0x800353 <Menu_contents+0x5d>
    14f0:	80 93 52 03 	sts	0x0352, r24	; 0x800352 <Menu_contents+0x5c>
	strcpy(Menu_contents.linedata[7], " ");
    14f4:	90 93 62 03 	sts	0x0362, r25	; 0x800362 <Menu_contents+0x6c>
    14f8:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <Menu_contents+0x6b>
	strcpy(Menu_contents.linedata[8], "Exit to menu");
    14fc:	8d e0       	ldi	r24, 0x0D	; 13
    14fe:	e3 ea       	ldi	r30, 0xA3	; 163
    1500:	f2 e0       	ldi	r31, 0x02	; 2
    1502:	a0 e7       	ldi	r26, 0x70	; 112
    1504:	b3 e0       	ldi	r27, 0x03	; 3
    1506:	01 90       	ld	r0, Z+
    1508:	0d 92       	st	X+, r0
    150a:	8a 95       	dec	r24
    150c:	e1 f7       	brne	.-8      	; 0x1506 <Game_Over_Menu+0x50>
	Menu_contents.menu_index = 7;
    150e:	87 e0       	ldi	r24, 0x07	; 7
    1510:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <Menu_contents>
	Game_print();
    1514:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Game_print>
    1518:	08 95       	ret

0000151a <Change_page>:
		OLED_printf(Menu_contents.linedata[i+1]);
		}
}

void Change_page(){
	int current_index = Menu_contents.menu_index;
    151a:	e6 ef       	ldi	r30, 0xF6	; 246
    151c:	f2 e0       	ldi	r31, 0x02	; 2
    151e:	80 81       	ld	r24, Z
    1520:	90 e0       	ldi	r25, 0x00	; 0
	
	//printf("%d\r\n",Menu_contents.current_menu);
	if (Menu_contents.current_menu == 0){
    1522:	21 81       	ldd	r18, Z+1	; 0x01
    1524:	21 11       	cpse	r18, r1
    1526:	0f c0       	rjmp	.+30     	; 0x1546 <Change_page+0x2c>
		if (current_index == 2){
    1528:	02 97       	sbiw	r24, 0x02	; 2
    152a:	09 f0       	breq	.+2      	; 0x152e <Change_page+0x14>
    152c:	d7 c0       	rjmp	.+430    	; 0x16dc <Change_page+0x1c2>
			OLED_reset();
    152e:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
			Game_Modes_Menu();
    1532:	0e 94 24 09 	call	0x1248	; 0x1248 <Game_Modes_Menu>
			Game_Modes_Menu();
    1536:	0e 94 24 09 	call	0x1248	; 0x1248 <Game_Modes_Menu>
			Menu_contents.current_menu++;
    153a:	e6 ef       	ldi	r30, 0xF6	; 246
    153c:	f2 e0       	ldi	r31, 0x02	; 2
    153e:	81 81       	ldd	r24, Z+1	; 0x01
    1540:	8f 5f       	subi	r24, 0xFF	; 255
    1542:	81 83       	std	Z+1, r24	; 0x01
    1544:	08 95       	ret
		}
		return;
	}
	
	if (Menu_contents.current_menu == 1){
    1546:	20 91 f7 02 	lds	r18, 0x02F7	; 0x8002f7 <Menu_contents+0x1>
    154a:	21 30       	cpi	r18, 0x01	; 1
    154c:	91 f5       	brne	.+100    	; 0x15b2 <Change_page+0x98>

		if (current_index == 2){ // Normal mode
    154e:	82 30       	cpi	r24, 0x02	; 2
    1550:	91 05       	cpc	r25, r1
    1552:	71 f4       	brne	.+28     	; 0x1570 <Change_page+0x56>
			OLED_reset();
    1554:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
			Controller_Menu();
    1558:	0e 94 60 09 	call	0x12c0	; 0x12c0 <Controller_Menu>
			Controller_Menu();
    155c:	0e 94 60 09 	call	0x12c0	; 0x12c0 <Controller_Menu>
			game_mode1 = 0; //NORMAL
    1560:	10 92 ee 03 	sts	0x03EE, r1	; 0x8003ee <game_mode1>
			Menu_contents.current_menu++;
    1564:	e6 ef       	ldi	r30, 0xF6	; 246
    1566:	f2 e0       	ldi	r31, 0x02	; 2
    1568:	81 81       	ldd	r24, Z+1	; 0x01
    156a:	8f 5f       	subi	r24, 0xFF	; 255
    156c:	81 83       	std	Z+1, r24	; 0x01
			return;
    156e:	08 95       	ret
		}
		
		if (current_index == 3){ // Arcade mode
    1570:	83 30       	cpi	r24, 0x03	; 3
    1572:	91 05       	cpc	r25, r1
    1574:	79 f4       	brne	.+30     	; 0x1594 <Change_page+0x7a>
			OLED_reset();
    1576:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
			Controller_Menu();
    157a:	0e 94 60 09 	call	0x12c0	; 0x12c0 <Controller_Menu>
			Controller_Menu();
    157e:	0e 94 60 09 	call	0x12c0	; 0x12c0 <Controller_Menu>
			game_mode1 = 1; //ARCADE
    1582:	81 e0       	ldi	r24, 0x01	; 1
    1584:	80 93 ee 03 	sts	0x03EE, r24	; 0x8003ee <game_mode1>
			Menu_contents.current_menu++;
    1588:	e6 ef       	ldi	r30, 0xF6	; 246
    158a:	f2 e0       	ldi	r31, 0x02	; 2
    158c:	81 81       	ldd	r24, Z+1	; 0x01
    158e:	8f 5f       	subi	r24, 0xFF	; 255
    1590:	81 83       	std	Z+1, r24	; 0x01
			return;
    1592:	08 95       	ret
		}
		
		if (current_index == 7){
    1594:	87 30       	cpi	r24, 0x07	; 7
    1596:	91 05       	cpc	r25, r1
    1598:	61 f4       	brne	.+24     	; 0x15b2 <Change_page+0x98>
			OLED_reset();
    159a:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
			Main_menu();
    159e:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <Main_menu>
			Main_menu();
    15a2:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <Main_menu>
			Menu_contents.current_menu--;
    15a6:	e6 ef       	ldi	r30, 0xF6	; 246
    15a8:	f2 e0       	ldi	r31, 0x02	; 2
    15aa:	81 81       	ldd	r24, Z+1	; 0x01
    15ac:	81 50       	subi	r24, 0x01	; 1
    15ae:	81 83       	std	Z+1, r24	; 0x01
			return;
    15b0:	08 95       	ret
		}
	}
	
	if (Menu_contents.current_menu == 2){
    15b2:	20 91 f7 02 	lds	r18, 0x02F7	; 0x8002f7 <Menu_contents+0x1>
    15b6:	22 30       	cpi	r18, 0x02	; 2
    15b8:	91 f5       	brne	.+100    	; 0x161e <Change_page+0x104>
		if (current_index == 2){ // Joystick
    15ba:	82 30       	cpi	r24, 0x02	; 2
    15bc:	91 05       	cpc	r25, r1
    15be:	71 f4       	brne	.+28     	; 0x15dc <Change_page+0xc2>
			OLED_reset();
    15c0:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
			Difficulty_Menu();
    15c4:	0e 94 9c 09 	call	0x1338	; 0x1338 <Difficulty_Menu>
			Difficulty_Menu();
    15c8:	0e 94 9c 09 	call	0x1338	; 0x1338 <Difficulty_Menu>
			controller_setting = 0; //JOYSTICK
    15cc:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <controller_setting>
			Menu_contents.current_menu++;
    15d0:	e6 ef       	ldi	r30, 0xF6	; 246
    15d2:	f2 e0       	ldi	r31, 0x02	; 2
    15d4:	81 81       	ldd	r24, Z+1	; 0x01
    15d6:	8f 5f       	subi	r24, 0xFF	; 255
    15d8:	81 83       	std	Z+1, r24	; 0x01
			return;
    15da:	08 95       	ret
		}
		
		if (current_index == 3){
    15dc:	83 30       	cpi	r24, 0x03	; 3
    15de:	91 05       	cpc	r25, r1
    15e0:	79 f4       	brne	.+30     	; 0x1600 <Change_page+0xe6>
			OLED_reset();
    15e2:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
			Difficulty_Menu();
    15e6:	0e 94 9c 09 	call	0x1338	; 0x1338 <Difficulty_Menu>
			Difficulty_Menu();
    15ea:	0e 94 9c 09 	call	0x1338	; 0x1338 <Difficulty_Menu>
			controller_setting = 1; //SLIDER
    15ee:	81 e0       	ldi	r24, 0x01	; 1
    15f0:	80 93 72 03 	sts	0x0372, r24	; 0x800372 <controller_setting>
			Menu_contents.current_menu++;
    15f4:	e6 ef       	ldi	r30, 0xF6	; 246
    15f6:	f2 e0       	ldi	r31, 0x02	; 2
    15f8:	81 81       	ldd	r24, Z+1	; 0x01
    15fa:	8f 5f       	subi	r24, 0xFF	; 255
    15fc:	81 83       	std	Z+1, r24	; 0x01
			return;
    15fe:	08 95       	ret
		}
		
		if (current_index == 7){
    1600:	87 30       	cpi	r24, 0x07	; 7
    1602:	91 05       	cpc	r25, r1
    1604:	61 f4       	brne	.+24     	; 0x161e <Change_page+0x104>
			OLED_reset();
    1606:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
			Game_Modes_Menu();
    160a:	0e 94 24 09 	call	0x1248	; 0x1248 <Game_Modes_Menu>
			Game_Modes_Menu();
    160e:	0e 94 24 09 	call	0x1248	; 0x1248 <Game_Modes_Menu>
			Menu_contents.current_menu--;
    1612:	e6 ef       	ldi	r30, 0xF6	; 246
    1614:	f2 e0       	ldi	r31, 0x02	; 2
    1616:	81 81       	ldd	r24, Z+1	; 0x01
    1618:	81 50       	subi	r24, 0x01	; 1
    161a:	81 83       	std	Z+1, r24	; 0x01
			return;
    161c:	08 95       	ret
		}
	}
	
	if (Menu_contents.current_menu == 3){
    161e:	20 91 f7 02 	lds	r18, 0x02F7	; 0x8002f7 <Menu_contents+0x1>
    1622:	23 30       	cpi	r18, 0x03	; 3
    1624:	09 f0       	breq	.+2      	; 0x1628 <Change_page+0x10e>
    1626:	4c c0       	rjmp	.+152    	; 0x16c0 <Change_page+0x1a6>
		if (current_index == 2){ // EASY
    1628:	82 30       	cpi	r24, 0x02	; 2
    162a:	91 05       	cpc	r25, r1
    162c:	d1 f4       	brne	.+52     	; 0x1662 <Change_page+0x148>
			OLED_reset();
    162e:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
			difficulty = 0;
    1632:	10 92 ed 03 	sts	0x03ED, r1	; 0x8003ed <difficulty>
			printf("%d \r\n",game_mode1);
    1636:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <game_mode1>
    163a:	1f 92       	push	r1
    163c:	8f 93       	push	r24
    163e:	8f eb       	ldi	r24, 0xBF	; 191
    1640:	92 e0       	ldi	r25, 0x02	; 2
    1642:	9f 93       	push	r25
    1644:	8f 93       	push	r24
    1646:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <printf>
			Menu_contents.current_menu++;
    164a:	e6 ef       	ldi	r30, 0xF6	; 246
    164c:	f2 e0       	ldi	r31, 0x02	; 2
    164e:	81 81       	ldd	r24, Z+1	; 0x01
    1650:	8f 5f       	subi	r24, 0xFF	; 255
    1652:	81 83       	std	Z+1, r24	; 0x01
			start_game();
    1654:	0e 94 8d 04 	call	0x91a	; 0x91a <start_game>
			return;
    1658:	0f 90       	pop	r0
    165a:	0f 90       	pop	r0
    165c:	0f 90       	pop	r0
    165e:	0f 90       	pop	r0
    1660:	08 95       	ret
		}
		
		if (current_index == 3){ // MEDIUM
    1662:	83 30       	cpi	r24, 0x03	; 3
    1664:	91 05       	cpc	r25, r1
    1666:	69 f4       	brne	.+26     	; 0x1682 <Change_page+0x168>
			OLED_reset();
    1668:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
			difficulty = 1;
    166c:	81 e0       	ldi	r24, 0x01	; 1
    166e:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <difficulty>
			Menu_contents.current_menu++;
    1672:	e6 ef       	ldi	r30, 0xF6	; 246
    1674:	f2 e0       	ldi	r31, 0x02	; 2
    1676:	81 81       	ldd	r24, Z+1	; 0x01
    1678:	8f 5f       	subi	r24, 0xFF	; 255
    167a:	81 83       	std	Z+1, r24	; 0x01
			start_game();
    167c:	0e 94 8d 04 	call	0x91a	; 0x91a <start_game>
			return;
    1680:	08 95       	ret
		}
		
		if (current_index == 4){ // HARD
    1682:	84 30       	cpi	r24, 0x04	; 4
    1684:	91 05       	cpc	r25, r1
    1686:	69 f4       	brne	.+26     	; 0x16a2 <Change_page+0x188>
			OLED_reset();
    1688:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
			difficulty = 2;
    168c:	82 e0       	ldi	r24, 0x02	; 2
    168e:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <difficulty>
			Menu_contents.current_menu++;
    1692:	e6 ef       	ldi	r30, 0xF6	; 246
    1694:	f2 e0       	ldi	r31, 0x02	; 2
    1696:	81 81       	ldd	r24, Z+1	; 0x01
    1698:	8f 5f       	subi	r24, 0xFF	; 255
    169a:	81 83       	std	Z+1, r24	; 0x01
			start_game();
    169c:	0e 94 8d 04 	call	0x91a	; 0x91a <start_game>
			return;
    16a0:	08 95       	ret
		}
		
		if (current_index == 7){
    16a2:	87 30       	cpi	r24, 0x07	; 7
    16a4:	91 05       	cpc	r25, r1
    16a6:	61 f4       	brne	.+24     	; 0x16c0 <Change_page+0x1a6>
			OLED_reset();
    16a8:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
			Controller_Menu();
    16ac:	0e 94 60 09 	call	0x12c0	; 0x12c0 <Controller_Menu>
			Controller_Menu();
    16b0:	0e 94 60 09 	call	0x12c0	; 0x12c0 <Controller_Menu>
			Menu_contents.current_menu--;
    16b4:	e6 ef       	ldi	r30, 0xF6	; 246
    16b6:	f2 e0       	ldi	r31, 0x02	; 2
    16b8:	81 81       	ldd	r24, Z+1	; 0x01
    16ba:	81 50       	subi	r24, 0x01	; 1
    16bc:	81 83       	std	Z+1, r24	; 0x01
			return;
    16be:	08 95       	ret
	}
	
	
	
	
	if (Menu_contents.current_menu == 5){
    16c0:	20 91 f7 02 	lds	r18, 0x02F7	; 0x8002f7 <Menu_contents+0x1>
    16c4:	25 30       	cpi	r18, 0x05	; 5
    16c6:	51 f4       	brne	.+20     	; 0x16dc <Change_page+0x1c2>
		if (current_index == 7){
    16c8:	07 97       	sbiw	r24, 0x07	; 7
    16ca:	41 f4       	brne	.+16     	; 0x16dc <Change_page+0x1c2>
			OLED_reset();
    16cc:	0e 94 0f 0c 	call	0x181e	; 0x181e <OLED_reset>
			Main_menu();
    16d0:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <Main_menu>
			Main_menu();
    16d4:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <Main_menu>
			Menu_contents.current_menu = 0;
    16d8:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <Menu_contents+0x1>
    16dc:	08 95       	ret

000016de <OLED_write_c>:
    16de:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xbfd>
    16e2:	08 95       	ret

000016e4 <OLED_init>:
    16e4:	8e ea       	ldi	r24, 0xAE	; 174
    16e6:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    16ea:	81 ea       	ldi	r24, 0xA1	; 161
    16ec:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    16f0:	8a ed       	ldi	r24, 0xDA	; 218
    16f2:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    16f6:	82 e1       	ldi	r24, 0x12	; 18
    16f8:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    16fc:	88 ec       	ldi	r24, 0xC8	; 200
    16fe:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1702:	88 ea       	ldi	r24, 0xA8	; 168
    1704:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1708:	8f e3       	ldi	r24, 0x3F	; 63
    170a:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    170e:	85 ed       	ldi	r24, 0xD5	; 213
    1710:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1714:	80 e8       	ldi	r24, 0x80	; 128
    1716:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    171a:	81 e8       	ldi	r24, 0x81	; 129
    171c:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1720:	80 e5       	ldi	r24, 0x50	; 80
    1722:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1726:	89 ed       	ldi	r24, 0xD9	; 217
    1728:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    172c:	81 e2       	ldi	r24, 0x21	; 33
    172e:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1732:	80 e2       	ldi	r24, 0x20	; 32
    1734:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1738:	82 e0       	ldi	r24, 0x02	; 2
    173a:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    173e:	8b ed       	ldi	r24, 0xDB	; 219
    1740:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1744:	80 e3       	ldi	r24, 0x30	; 48
    1746:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    174a:	8d ea       	ldi	r24, 0xAD	; 173
    174c:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1750:	80 e0       	ldi	r24, 0x00	; 0
    1752:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1756:	84 ea       	ldi	r24, 0xA4	; 164
    1758:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    175c:	86 ea       	ldi	r24, 0xA6	; 166
    175e:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1762:	8f ea       	ldi	r24, 0xAF	; 175
    1764:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1768:	08 95       	ret

0000176a <OLED_write_d>:
    176a:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xdfd>
    176e:	08 95       	ret

00001770 <OLED_go_to_line>:
    1770:	80 6b       	ori	r24, 0xB0	; 176
    1772:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1776:	08 95       	ret

00001778 <OLED_go_to_column>:
    1778:	cf 93       	push	r28
    177a:	c8 2f       	mov	r28, r24
    177c:	cf 70       	andi	r28, 0x0F	; 15
    177e:	82 95       	swap	r24
    1780:	8f 70       	andi	r24, 0x0F	; 15
    1782:	80 61       	ori	r24, 0x10	; 16
    1784:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1788:	8c 2f       	mov	r24, r28
    178a:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    178e:	cf 91       	pop	r28
    1790:	08 95       	ret

00001792 <OLED_go_to_pos>:
    1792:	cf 93       	push	r28
    1794:	c6 2f       	mov	r28, r22
    1796:	0e 94 b8 0b 	call	0x1770	; 0x1770 <OLED_go_to_line>
    179a:	8c 2f       	mov	r24, r28
    179c:	0e 94 bc 0b 	call	0x1778	; 0x1778 <OLED_go_to_column>
    17a0:	cf 91       	pop	r28
    17a2:	08 95       	ret

000017a4 <OLED_home>:
    17a4:	60 e0       	ldi	r22, 0x00	; 0
    17a6:	80 e0       	ldi	r24, 0x00	; 0
    17a8:	0e 94 c9 0b 	call	0x1792	; 0x1792 <OLED_go_to_pos>
    17ac:	08 95       	ret

000017ae <OLED_print_c>:
    17ae:	cf 93       	push	r28
    17b0:	df 93       	push	r29
    17b2:	d8 2f       	mov	r29, r24
    17b4:	c0 e0       	ldi	r28, 0x00	; 0
    17b6:	11 c0       	rjmp	.+34     	; 0x17da <OLED_print_c+0x2c>
    17b8:	ed 2f       	mov	r30, r29
    17ba:	f0 e0       	ldi	r31, 0x00	; 0
    17bc:	b0 97       	sbiw	r30, 0x20	; 32
    17be:	ee 0f       	add	r30, r30
    17c0:	ff 1f       	adc	r31, r31
    17c2:	ee 0f       	add	r30, r30
    17c4:	ff 1f       	adc	r31, r31
    17c6:	ee 0f       	add	r30, r30
    17c8:	ff 1f       	adc	r31, r31
    17ca:	ec 0f       	add	r30, r28
    17cc:	f1 1d       	adc	r31, r1
    17ce:	e0 59       	subi	r30, 0x90	; 144
    17d0:	ff 4f       	sbci	r31, 0xFF	; 255
    17d2:	84 91       	lpm	r24, Z
    17d4:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
    17d8:	cf 5f       	subi	r28, 0xFF	; 255
    17da:	c8 30       	cpi	r28, 0x08	; 8
    17dc:	68 f3       	brcs	.-38     	; 0x17b8 <OLED_print_c+0xa>
    17de:	df 91       	pop	r29
    17e0:	cf 91       	pop	r28
    17e2:	08 95       	ret

000017e4 <OLED_printf>:
    17e4:	1f 93       	push	r17
    17e6:	cf 93       	push	r28
    17e8:	df 93       	push	r29
    17ea:	ec 01       	movw	r28, r24
    17ec:	10 e0       	ldi	r17, 0x00	; 0
    17ee:	07 c0       	rjmp	.+14     	; 0x17fe <OLED_printf+0x1a>
    17f0:	fe 01       	movw	r30, r28
    17f2:	e8 0f       	add	r30, r24
    17f4:	f9 1f       	adc	r31, r25
    17f6:	80 81       	ld	r24, Z
    17f8:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <OLED_print_c>
    17fc:	1f 5f       	subi	r17, 0xFF	; 255
    17fe:	81 2f       	mov	r24, r17
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	fe 01       	movw	r30, r28
    1804:	01 90       	ld	r0, Z+
    1806:	00 20       	and	r0, r0
    1808:	e9 f7       	brne	.-6      	; 0x1804 <OLED_printf+0x20>
    180a:	31 97       	sbiw	r30, 0x01	; 1
    180c:	ec 1b       	sub	r30, r28
    180e:	fd 0b       	sbc	r31, r29
    1810:	8e 17       	cp	r24, r30
    1812:	9f 07       	cpc	r25, r31
    1814:	68 f3       	brcs	.-38     	; 0x17f0 <OLED_printf+0xc>
    1816:	df 91       	pop	r29
    1818:	cf 91       	pop	r28
    181a:	1f 91       	pop	r17
    181c:	08 95       	ret

0000181e <OLED_reset>:
    181e:	cf 93       	push	r28
    1820:	80 eb       	ldi	r24, 0xB0	; 176
    1822:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1826:	c0 e0       	ldi	r28, 0x00	; 0
    1828:	04 c0       	rjmp	.+8      	; 0x1832 <OLED_reset+0x14>
    182a:	80 e0       	ldi	r24, 0x00	; 0
    182c:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
    1830:	cf 5f       	subi	r28, 0xFF	; 255
    1832:	cc 23       	and	r28, r28
    1834:	d4 f7       	brge	.-12     	; 0x182a <OLED_reset+0xc>
    1836:	81 eb       	ldi	r24, 0xB1	; 177
    1838:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    183c:	c0 e0       	ldi	r28, 0x00	; 0
    183e:	04 c0       	rjmp	.+8      	; 0x1848 <OLED_reset+0x2a>
    1840:	80 e0       	ldi	r24, 0x00	; 0
    1842:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
    1846:	cf 5f       	subi	r28, 0xFF	; 255
    1848:	cc 23       	and	r28, r28
    184a:	d4 f7       	brge	.-12     	; 0x1840 <OLED_reset+0x22>
    184c:	82 eb       	ldi	r24, 0xB2	; 178
    184e:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1852:	c0 e0       	ldi	r28, 0x00	; 0
    1854:	04 c0       	rjmp	.+8      	; 0x185e <OLED_reset+0x40>
    1856:	80 e0       	ldi	r24, 0x00	; 0
    1858:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
    185c:	cf 5f       	subi	r28, 0xFF	; 255
    185e:	cc 23       	and	r28, r28
    1860:	d4 f7       	brge	.-12     	; 0x1856 <OLED_reset+0x38>
    1862:	83 eb       	ldi	r24, 0xB3	; 179
    1864:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1868:	c0 e0       	ldi	r28, 0x00	; 0
    186a:	04 c0       	rjmp	.+8      	; 0x1874 <OLED_reset+0x56>
    186c:	80 e0       	ldi	r24, 0x00	; 0
    186e:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
    1872:	cf 5f       	subi	r28, 0xFF	; 255
    1874:	cc 23       	and	r28, r28
    1876:	d4 f7       	brge	.-12     	; 0x186c <OLED_reset+0x4e>
    1878:	84 eb       	ldi	r24, 0xB4	; 180
    187a:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    187e:	c0 e0       	ldi	r28, 0x00	; 0
    1880:	04 c0       	rjmp	.+8      	; 0x188a <OLED_reset+0x6c>
    1882:	80 e0       	ldi	r24, 0x00	; 0
    1884:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
    1888:	cf 5f       	subi	r28, 0xFF	; 255
    188a:	cc 23       	and	r28, r28
    188c:	d4 f7       	brge	.-12     	; 0x1882 <OLED_reset+0x64>
    188e:	85 eb       	ldi	r24, 0xB5	; 181
    1890:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    1894:	c0 e0       	ldi	r28, 0x00	; 0
    1896:	04 c0       	rjmp	.+8      	; 0x18a0 <OLED_reset+0x82>
    1898:	80 e0       	ldi	r24, 0x00	; 0
    189a:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
    189e:	cf 5f       	subi	r28, 0xFF	; 255
    18a0:	cc 23       	and	r28, r28
    18a2:	d4 f7       	brge	.-12     	; 0x1898 <OLED_reset+0x7a>
    18a4:	86 eb       	ldi	r24, 0xB6	; 182
    18a6:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    18aa:	c0 e0       	ldi	r28, 0x00	; 0
    18ac:	04 c0       	rjmp	.+8      	; 0x18b6 <OLED_reset+0x98>
    18ae:	80 e0       	ldi	r24, 0x00	; 0
    18b0:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
    18b4:	cf 5f       	subi	r28, 0xFF	; 255
    18b6:	cc 23       	and	r28, r28
    18b8:	d4 f7       	brge	.-12     	; 0x18ae <OLED_reset+0x90>
    18ba:	87 eb       	ldi	r24, 0xB7	; 183
    18bc:	0e 94 6f 0b 	call	0x16de	; 0x16de <OLED_write_c>
    18c0:	c0 e0       	ldi	r28, 0x00	; 0
    18c2:	04 c0       	rjmp	.+8      	; 0x18cc <OLED_reset+0xae>
    18c4:	80 e0       	ldi	r24, 0x00	; 0
    18c6:	0e 94 b5 0b 	call	0x176a	; 0x176a <OLED_write_d>
    18ca:	cf 5f       	subi	r28, 0xFF	; 255
    18cc:	cc 23       	and	r28, r28
    18ce:	d4 f7       	brge	.-12     	; 0x18c4 <OLED_reset+0xa6>
    18d0:	cf 91       	pop	r28
    18d2:	08 95       	ret

000018d4 <SPI_init>:
    18d4:	87 b3       	in	r24, 0x17	; 23
    18d6:	80 6b       	ori	r24, 0xB0	; 176
    18d8:	87 bb       	out	0x17, r24	; 23
    18da:	8d b1       	in	r24, 0x0d	; 13
    18dc:	81 65       	ori	r24, 0x51	; 81
    18de:	8d b9       	out	0x0d, r24	; 13
    18e0:	88 b3       	in	r24, 0x18	; 24
    18e2:	80 61       	ori	r24, 0x10	; 16
    18e4:	88 bb       	out	0x18, r24	; 24
    18e6:	08 95       	ret

000018e8 <SPI_write>:
    18e8:	8f b9       	out	0x0f, r24	; 15
    18ea:	77 9b       	sbis	0x0e, 7	; 14
    18ec:	fe cf       	rjmp	.-4      	; 0x18ea <SPI_write+0x2>
    18ee:	08 95       	ret

000018f0 <SPI_read>:
    18f0:	8f ef       	ldi	r24, 0xFF	; 255
    18f2:	8f b9       	out	0x0f, r24	; 15
    18f4:	77 9b       	sbis	0x0e, 7	; 14
    18f6:	fe cf       	rjmp	.-4      	; 0x18f4 <SPI_read+0x4>
    18f8:	8f b1       	in	r24, 0x0f	; 15
    18fa:	08 95       	ret

000018fc <__divmodhi4>:
    18fc:	97 fb       	bst	r25, 7
    18fe:	07 2e       	mov	r0, r23
    1900:	16 f4       	brtc	.+4      	; 0x1906 <__divmodhi4+0xa>
    1902:	00 94       	com	r0
    1904:	07 d0       	rcall	.+14     	; 0x1914 <__divmodhi4_neg1>
    1906:	77 fd       	sbrc	r23, 7
    1908:	09 d0       	rcall	.+18     	; 0x191c <__divmodhi4_neg2>
    190a:	0e 94 92 0c 	call	0x1924	; 0x1924 <__udivmodhi4>
    190e:	07 fc       	sbrc	r0, 7
    1910:	05 d0       	rcall	.+10     	; 0x191c <__divmodhi4_neg2>
    1912:	3e f4       	brtc	.+14     	; 0x1922 <__divmodhi4_exit>

00001914 <__divmodhi4_neg1>:
    1914:	90 95       	com	r25
    1916:	81 95       	neg	r24
    1918:	9f 4f       	sbci	r25, 0xFF	; 255
    191a:	08 95       	ret

0000191c <__divmodhi4_neg2>:
    191c:	70 95       	com	r23
    191e:	61 95       	neg	r22
    1920:	7f 4f       	sbci	r23, 0xFF	; 255

00001922 <__divmodhi4_exit>:
    1922:	08 95       	ret

00001924 <__udivmodhi4>:
    1924:	aa 1b       	sub	r26, r26
    1926:	bb 1b       	sub	r27, r27
    1928:	51 e1       	ldi	r21, 0x11	; 17
    192a:	07 c0       	rjmp	.+14     	; 0x193a <__udivmodhi4_ep>

0000192c <__udivmodhi4_loop>:
    192c:	aa 1f       	adc	r26, r26
    192e:	bb 1f       	adc	r27, r27
    1930:	a6 17       	cp	r26, r22
    1932:	b7 07       	cpc	r27, r23
    1934:	10 f0       	brcs	.+4      	; 0x193a <__udivmodhi4_ep>
    1936:	a6 1b       	sub	r26, r22
    1938:	b7 0b       	sbc	r27, r23

0000193a <__udivmodhi4_ep>:
    193a:	88 1f       	adc	r24, r24
    193c:	99 1f       	adc	r25, r25
    193e:	5a 95       	dec	r21
    1940:	a9 f7       	brne	.-22     	; 0x192c <__udivmodhi4_loop>
    1942:	80 95       	com	r24
    1944:	90 95       	com	r25
    1946:	bc 01       	movw	r22, r24
    1948:	cd 01       	movw	r24, r26
    194a:	08 95       	ret

0000194c <fdevopen>:
    194c:	0f 93       	push	r16
    194e:	1f 93       	push	r17
    1950:	cf 93       	push	r28
    1952:	df 93       	push	r29
    1954:	00 97       	sbiw	r24, 0x00	; 0
    1956:	31 f4       	brne	.+12     	; 0x1964 <fdevopen+0x18>
    1958:	61 15       	cp	r22, r1
    195a:	71 05       	cpc	r23, r1
    195c:	19 f4       	brne	.+6      	; 0x1964 <fdevopen+0x18>
    195e:	80 e0       	ldi	r24, 0x00	; 0
    1960:	90 e0       	ldi	r25, 0x00	; 0
    1962:	3a c0       	rjmp	.+116    	; 0x19d8 <fdevopen+0x8c>
    1964:	8b 01       	movw	r16, r22
    1966:	ec 01       	movw	r28, r24
    1968:	6e e0       	ldi	r22, 0x0E	; 14
    196a:	70 e0       	ldi	r23, 0x00	; 0
    196c:	81 e0       	ldi	r24, 0x01	; 1
    196e:	90 e0       	ldi	r25, 0x00	; 0
    1970:	0e 94 18 0f 	call	0x1e30	; 0x1e30 <calloc>
    1974:	fc 01       	movw	r30, r24
    1976:	89 2b       	or	r24, r25
    1978:	91 f3       	breq	.-28     	; 0x195e <fdevopen+0x12>
    197a:	80 e8       	ldi	r24, 0x80	; 128
    197c:	83 83       	std	Z+3, r24	; 0x03
    197e:	01 15       	cp	r16, r1
    1980:	11 05       	cpc	r17, r1
    1982:	71 f0       	breq	.+28     	; 0x19a0 <fdevopen+0x54>
    1984:	13 87       	std	Z+11, r17	; 0x0b
    1986:	02 87       	std	Z+10, r16	; 0x0a
    1988:	81 e8       	ldi	r24, 0x81	; 129
    198a:	83 83       	std	Z+3, r24	; 0x03
    198c:	80 91 f9 03 	lds	r24, 0x03F9	; 0x8003f9 <__iob>
    1990:	90 91 fa 03 	lds	r25, 0x03FA	; 0x8003fa <__iob+0x1>
    1994:	89 2b       	or	r24, r25
    1996:	21 f4       	brne	.+8      	; 0x19a0 <fdevopen+0x54>
    1998:	f0 93 fa 03 	sts	0x03FA, r31	; 0x8003fa <__iob+0x1>
    199c:	e0 93 f9 03 	sts	0x03F9, r30	; 0x8003f9 <__iob>
    19a0:	20 97       	sbiw	r28, 0x00	; 0
    19a2:	c9 f0       	breq	.+50     	; 0x19d6 <fdevopen+0x8a>
    19a4:	d1 87       	std	Z+9, r29	; 0x09
    19a6:	c0 87       	std	Z+8, r28	; 0x08
    19a8:	83 81       	ldd	r24, Z+3	; 0x03
    19aa:	82 60       	ori	r24, 0x02	; 2
    19ac:	83 83       	std	Z+3, r24	; 0x03
    19ae:	80 91 fb 03 	lds	r24, 0x03FB	; 0x8003fb <__iob+0x2>
    19b2:	90 91 fc 03 	lds	r25, 0x03FC	; 0x8003fc <__iob+0x3>
    19b6:	89 2b       	or	r24, r25
    19b8:	71 f4       	brne	.+28     	; 0x19d6 <fdevopen+0x8a>
    19ba:	f0 93 fc 03 	sts	0x03FC, r31	; 0x8003fc <__iob+0x3>
    19be:	e0 93 fb 03 	sts	0x03FB, r30	; 0x8003fb <__iob+0x2>
    19c2:	80 91 fd 03 	lds	r24, 0x03FD	; 0x8003fd <__iob+0x4>
    19c6:	90 91 fe 03 	lds	r25, 0x03FE	; 0x8003fe <__iob+0x5>
    19ca:	89 2b       	or	r24, r25
    19cc:	21 f4       	brne	.+8      	; 0x19d6 <fdevopen+0x8a>
    19ce:	f0 93 fe 03 	sts	0x03FE, r31	; 0x8003fe <__iob+0x5>
    19d2:	e0 93 fd 03 	sts	0x03FD, r30	; 0x8003fd <__iob+0x4>
    19d6:	cf 01       	movw	r24, r30
    19d8:	df 91       	pop	r29
    19da:	cf 91       	pop	r28
    19dc:	1f 91       	pop	r17
    19de:	0f 91       	pop	r16
    19e0:	08 95       	ret

000019e2 <printf>:
    19e2:	a0 e0       	ldi	r26, 0x00	; 0
    19e4:	b0 e0       	ldi	r27, 0x00	; 0
    19e6:	e7 ef       	ldi	r30, 0xF7	; 247
    19e8:	fc e0       	ldi	r31, 0x0C	; 12
    19ea:	0c 94 1c 11 	jmp	0x2238	; 0x2238 <__prologue_saves__+0x20>
    19ee:	ae 01       	movw	r20, r28
    19f0:	4b 5f       	subi	r20, 0xFB	; 251
    19f2:	5f 4f       	sbci	r21, 0xFF	; 255
    19f4:	fa 01       	movw	r30, r20
    19f6:	61 91       	ld	r22, Z+
    19f8:	71 91       	ld	r23, Z+
    19fa:	af 01       	movw	r20, r30
    19fc:	80 91 fb 03 	lds	r24, 0x03FB	; 0x8003fb <__iob+0x2>
    1a00:	90 91 fc 03 	lds	r25, 0x03FC	; 0x8003fc <__iob+0x3>
    1a04:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <vfprintf>
    1a08:	e2 e0       	ldi	r30, 0x02	; 2
    1a0a:	0c 94 38 11 	jmp	0x2270	; 0x2270 <__epilogue_restores__+0x20>

00001a0e <puts>:
    1a0e:	0f 93       	push	r16
    1a10:	1f 93       	push	r17
    1a12:	cf 93       	push	r28
    1a14:	df 93       	push	r29
    1a16:	e0 91 fb 03 	lds	r30, 0x03FB	; 0x8003fb <__iob+0x2>
    1a1a:	f0 91 fc 03 	lds	r31, 0x03FC	; 0x8003fc <__iob+0x3>
    1a1e:	23 81       	ldd	r18, Z+3	; 0x03
    1a20:	21 ff       	sbrs	r18, 1
    1a22:	1b c0       	rjmp	.+54     	; 0x1a5a <puts+0x4c>
    1a24:	8c 01       	movw	r16, r24
    1a26:	d0 e0       	ldi	r29, 0x00	; 0
    1a28:	c0 e0       	ldi	r28, 0x00	; 0
    1a2a:	f8 01       	movw	r30, r16
    1a2c:	81 91       	ld	r24, Z+
    1a2e:	8f 01       	movw	r16, r30
    1a30:	60 91 fb 03 	lds	r22, 0x03FB	; 0x8003fb <__iob+0x2>
    1a34:	70 91 fc 03 	lds	r23, 0x03FC	; 0x8003fc <__iob+0x3>
    1a38:	db 01       	movw	r26, r22
    1a3a:	18 96       	adiw	r26, 0x08	; 8
    1a3c:	ed 91       	ld	r30, X+
    1a3e:	fc 91       	ld	r31, X
    1a40:	19 97       	sbiw	r26, 0x09	; 9
    1a42:	88 23       	and	r24, r24
    1a44:	31 f0       	breq	.+12     	; 0x1a52 <puts+0x44>
    1a46:	09 95       	icall
    1a48:	89 2b       	or	r24, r25
    1a4a:	79 f3       	breq	.-34     	; 0x1a2a <puts+0x1c>
    1a4c:	df ef       	ldi	r29, 0xFF	; 255
    1a4e:	cf ef       	ldi	r28, 0xFF	; 255
    1a50:	ec cf       	rjmp	.-40     	; 0x1a2a <puts+0x1c>
    1a52:	8a e0       	ldi	r24, 0x0A	; 10
    1a54:	09 95       	icall
    1a56:	89 2b       	or	r24, r25
    1a58:	19 f0       	breq	.+6      	; 0x1a60 <puts+0x52>
    1a5a:	8f ef       	ldi	r24, 0xFF	; 255
    1a5c:	9f ef       	ldi	r25, 0xFF	; 255
    1a5e:	02 c0       	rjmp	.+4      	; 0x1a64 <puts+0x56>
    1a60:	8d 2f       	mov	r24, r29
    1a62:	9c 2f       	mov	r25, r28
    1a64:	df 91       	pop	r29
    1a66:	cf 91       	pop	r28
    1a68:	1f 91       	pop	r17
    1a6a:	0f 91       	pop	r16
    1a6c:	08 95       	ret

00001a6e <vfprintf>:
    1a6e:	ab e0       	ldi	r26, 0x0B	; 11
    1a70:	b0 e0       	ldi	r27, 0x00	; 0
    1a72:	ed e3       	ldi	r30, 0x3D	; 61
    1a74:	fd e0       	ldi	r31, 0x0D	; 13
    1a76:	0c 94 0c 11 	jmp	0x2218	; 0x2218 <__prologue_saves__>
    1a7a:	6c 01       	movw	r12, r24
    1a7c:	7b 01       	movw	r14, r22
    1a7e:	8a 01       	movw	r16, r20
    1a80:	fc 01       	movw	r30, r24
    1a82:	17 82       	std	Z+7, r1	; 0x07
    1a84:	16 82       	std	Z+6, r1	; 0x06
    1a86:	83 81       	ldd	r24, Z+3	; 0x03
    1a88:	81 ff       	sbrs	r24, 1
    1a8a:	cc c1       	rjmp	.+920    	; 0x1e24 <vfprintf+0x3b6>
    1a8c:	ce 01       	movw	r24, r28
    1a8e:	01 96       	adiw	r24, 0x01	; 1
    1a90:	3c 01       	movw	r6, r24
    1a92:	f6 01       	movw	r30, r12
    1a94:	93 81       	ldd	r25, Z+3	; 0x03
    1a96:	f7 01       	movw	r30, r14
    1a98:	93 fd       	sbrc	r25, 3
    1a9a:	85 91       	lpm	r24, Z+
    1a9c:	93 ff       	sbrs	r25, 3
    1a9e:	81 91       	ld	r24, Z+
    1aa0:	7f 01       	movw	r14, r30
    1aa2:	88 23       	and	r24, r24
    1aa4:	09 f4       	brne	.+2      	; 0x1aa8 <vfprintf+0x3a>
    1aa6:	ba c1       	rjmp	.+884    	; 0x1e1c <vfprintf+0x3ae>
    1aa8:	85 32       	cpi	r24, 0x25	; 37
    1aaa:	39 f4       	brne	.+14     	; 0x1aba <vfprintf+0x4c>
    1aac:	93 fd       	sbrc	r25, 3
    1aae:	85 91       	lpm	r24, Z+
    1ab0:	93 ff       	sbrs	r25, 3
    1ab2:	81 91       	ld	r24, Z+
    1ab4:	7f 01       	movw	r14, r30
    1ab6:	85 32       	cpi	r24, 0x25	; 37
    1ab8:	29 f4       	brne	.+10     	; 0x1ac4 <vfprintf+0x56>
    1aba:	b6 01       	movw	r22, r12
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	0e 94 72 10 	call	0x20e4	; 0x20e4 <fputc>
    1ac2:	e7 cf       	rjmp	.-50     	; 0x1a92 <vfprintf+0x24>
    1ac4:	91 2c       	mov	r9, r1
    1ac6:	21 2c       	mov	r2, r1
    1ac8:	31 2c       	mov	r3, r1
    1aca:	ff e1       	ldi	r31, 0x1F	; 31
    1acc:	f3 15       	cp	r31, r3
    1ace:	d8 f0       	brcs	.+54     	; 0x1b06 <vfprintf+0x98>
    1ad0:	8b 32       	cpi	r24, 0x2B	; 43
    1ad2:	79 f0       	breq	.+30     	; 0x1af2 <vfprintf+0x84>
    1ad4:	38 f4       	brcc	.+14     	; 0x1ae4 <vfprintf+0x76>
    1ad6:	80 32       	cpi	r24, 0x20	; 32
    1ad8:	79 f0       	breq	.+30     	; 0x1af8 <vfprintf+0x8a>
    1ada:	83 32       	cpi	r24, 0x23	; 35
    1adc:	a1 f4       	brne	.+40     	; 0x1b06 <vfprintf+0x98>
    1ade:	23 2d       	mov	r18, r3
    1ae0:	20 61       	ori	r18, 0x10	; 16
    1ae2:	1d c0       	rjmp	.+58     	; 0x1b1e <vfprintf+0xb0>
    1ae4:	8d 32       	cpi	r24, 0x2D	; 45
    1ae6:	61 f0       	breq	.+24     	; 0x1b00 <vfprintf+0x92>
    1ae8:	80 33       	cpi	r24, 0x30	; 48
    1aea:	69 f4       	brne	.+26     	; 0x1b06 <vfprintf+0x98>
    1aec:	23 2d       	mov	r18, r3
    1aee:	21 60       	ori	r18, 0x01	; 1
    1af0:	16 c0       	rjmp	.+44     	; 0x1b1e <vfprintf+0xb0>
    1af2:	83 2d       	mov	r24, r3
    1af4:	82 60       	ori	r24, 0x02	; 2
    1af6:	38 2e       	mov	r3, r24
    1af8:	e3 2d       	mov	r30, r3
    1afa:	e4 60       	ori	r30, 0x04	; 4
    1afc:	3e 2e       	mov	r3, r30
    1afe:	2a c0       	rjmp	.+84     	; 0x1b54 <vfprintf+0xe6>
    1b00:	f3 2d       	mov	r31, r3
    1b02:	f8 60       	ori	r31, 0x08	; 8
    1b04:	1d c0       	rjmp	.+58     	; 0x1b40 <vfprintf+0xd2>
    1b06:	37 fc       	sbrc	r3, 7
    1b08:	2d c0       	rjmp	.+90     	; 0x1b64 <vfprintf+0xf6>
    1b0a:	20 ed       	ldi	r18, 0xD0	; 208
    1b0c:	28 0f       	add	r18, r24
    1b0e:	2a 30       	cpi	r18, 0x0A	; 10
    1b10:	40 f0       	brcs	.+16     	; 0x1b22 <vfprintf+0xb4>
    1b12:	8e 32       	cpi	r24, 0x2E	; 46
    1b14:	b9 f4       	brne	.+46     	; 0x1b44 <vfprintf+0xd6>
    1b16:	36 fc       	sbrc	r3, 6
    1b18:	81 c1       	rjmp	.+770    	; 0x1e1c <vfprintf+0x3ae>
    1b1a:	23 2d       	mov	r18, r3
    1b1c:	20 64       	ori	r18, 0x40	; 64
    1b1e:	32 2e       	mov	r3, r18
    1b20:	19 c0       	rjmp	.+50     	; 0x1b54 <vfprintf+0xe6>
    1b22:	36 fe       	sbrs	r3, 6
    1b24:	06 c0       	rjmp	.+12     	; 0x1b32 <vfprintf+0xc4>
    1b26:	8a e0       	ldi	r24, 0x0A	; 10
    1b28:	98 9e       	mul	r9, r24
    1b2a:	20 0d       	add	r18, r0
    1b2c:	11 24       	eor	r1, r1
    1b2e:	92 2e       	mov	r9, r18
    1b30:	11 c0       	rjmp	.+34     	; 0x1b54 <vfprintf+0xe6>
    1b32:	ea e0       	ldi	r30, 0x0A	; 10
    1b34:	2e 9e       	mul	r2, r30
    1b36:	20 0d       	add	r18, r0
    1b38:	11 24       	eor	r1, r1
    1b3a:	22 2e       	mov	r2, r18
    1b3c:	f3 2d       	mov	r31, r3
    1b3e:	f0 62       	ori	r31, 0x20	; 32
    1b40:	3f 2e       	mov	r3, r31
    1b42:	08 c0       	rjmp	.+16     	; 0x1b54 <vfprintf+0xe6>
    1b44:	8c 36       	cpi	r24, 0x6C	; 108
    1b46:	21 f4       	brne	.+8      	; 0x1b50 <vfprintf+0xe2>
    1b48:	83 2d       	mov	r24, r3
    1b4a:	80 68       	ori	r24, 0x80	; 128
    1b4c:	38 2e       	mov	r3, r24
    1b4e:	02 c0       	rjmp	.+4      	; 0x1b54 <vfprintf+0xe6>
    1b50:	88 36       	cpi	r24, 0x68	; 104
    1b52:	41 f4       	brne	.+16     	; 0x1b64 <vfprintf+0xf6>
    1b54:	f7 01       	movw	r30, r14
    1b56:	93 fd       	sbrc	r25, 3
    1b58:	85 91       	lpm	r24, Z+
    1b5a:	93 ff       	sbrs	r25, 3
    1b5c:	81 91       	ld	r24, Z+
    1b5e:	7f 01       	movw	r14, r30
    1b60:	81 11       	cpse	r24, r1
    1b62:	b3 cf       	rjmp	.-154    	; 0x1aca <vfprintf+0x5c>
    1b64:	98 2f       	mov	r25, r24
    1b66:	9f 7d       	andi	r25, 0xDF	; 223
    1b68:	95 54       	subi	r25, 0x45	; 69
    1b6a:	93 30       	cpi	r25, 0x03	; 3
    1b6c:	28 f4       	brcc	.+10     	; 0x1b78 <vfprintf+0x10a>
    1b6e:	0c 5f       	subi	r16, 0xFC	; 252
    1b70:	1f 4f       	sbci	r17, 0xFF	; 255
    1b72:	9f e3       	ldi	r25, 0x3F	; 63
    1b74:	99 83       	std	Y+1, r25	; 0x01
    1b76:	0d c0       	rjmp	.+26     	; 0x1b92 <vfprintf+0x124>
    1b78:	83 36       	cpi	r24, 0x63	; 99
    1b7a:	31 f0       	breq	.+12     	; 0x1b88 <vfprintf+0x11a>
    1b7c:	83 37       	cpi	r24, 0x73	; 115
    1b7e:	71 f0       	breq	.+28     	; 0x1b9c <vfprintf+0x12e>
    1b80:	83 35       	cpi	r24, 0x53	; 83
    1b82:	09 f0       	breq	.+2      	; 0x1b86 <vfprintf+0x118>
    1b84:	59 c0       	rjmp	.+178    	; 0x1c38 <vfprintf+0x1ca>
    1b86:	21 c0       	rjmp	.+66     	; 0x1bca <vfprintf+0x15c>
    1b88:	f8 01       	movw	r30, r16
    1b8a:	80 81       	ld	r24, Z
    1b8c:	89 83       	std	Y+1, r24	; 0x01
    1b8e:	0e 5f       	subi	r16, 0xFE	; 254
    1b90:	1f 4f       	sbci	r17, 0xFF	; 255
    1b92:	88 24       	eor	r8, r8
    1b94:	83 94       	inc	r8
    1b96:	91 2c       	mov	r9, r1
    1b98:	53 01       	movw	r10, r6
    1b9a:	13 c0       	rjmp	.+38     	; 0x1bc2 <vfprintf+0x154>
    1b9c:	28 01       	movw	r4, r16
    1b9e:	f2 e0       	ldi	r31, 0x02	; 2
    1ba0:	4f 0e       	add	r4, r31
    1ba2:	51 1c       	adc	r5, r1
    1ba4:	f8 01       	movw	r30, r16
    1ba6:	a0 80       	ld	r10, Z
    1ba8:	b1 80       	ldd	r11, Z+1	; 0x01
    1baa:	36 fe       	sbrs	r3, 6
    1bac:	03 c0       	rjmp	.+6      	; 0x1bb4 <vfprintf+0x146>
    1bae:	69 2d       	mov	r22, r9
    1bb0:	70 e0       	ldi	r23, 0x00	; 0
    1bb2:	02 c0       	rjmp	.+4      	; 0x1bb8 <vfprintf+0x14a>
    1bb4:	6f ef       	ldi	r22, 0xFF	; 255
    1bb6:	7f ef       	ldi	r23, 0xFF	; 255
    1bb8:	c5 01       	movw	r24, r10
    1bba:	0e 94 67 10 	call	0x20ce	; 0x20ce <strnlen>
    1bbe:	4c 01       	movw	r8, r24
    1bc0:	82 01       	movw	r16, r4
    1bc2:	f3 2d       	mov	r31, r3
    1bc4:	ff 77       	andi	r31, 0x7F	; 127
    1bc6:	3f 2e       	mov	r3, r31
    1bc8:	16 c0       	rjmp	.+44     	; 0x1bf6 <vfprintf+0x188>
    1bca:	28 01       	movw	r4, r16
    1bcc:	22 e0       	ldi	r18, 0x02	; 2
    1bce:	42 0e       	add	r4, r18
    1bd0:	51 1c       	adc	r5, r1
    1bd2:	f8 01       	movw	r30, r16
    1bd4:	a0 80       	ld	r10, Z
    1bd6:	b1 80       	ldd	r11, Z+1	; 0x01
    1bd8:	36 fe       	sbrs	r3, 6
    1bda:	03 c0       	rjmp	.+6      	; 0x1be2 <vfprintf+0x174>
    1bdc:	69 2d       	mov	r22, r9
    1bde:	70 e0       	ldi	r23, 0x00	; 0
    1be0:	02 c0       	rjmp	.+4      	; 0x1be6 <vfprintf+0x178>
    1be2:	6f ef       	ldi	r22, 0xFF	; 255
    1be4:	7f ef       	ldi	r23, 0xFF	; 255
    1be6:	c5 01       	movw	r24, r10
    1be8:	0e 94 55 10 	call	0x20aa	; 0x20aa <strnlen_P>
    1bec:	4c 01       	movw	r8, r24
    1bee:	f3 2d       	mov	r31, r3
    1bf0:	f0 68       	ori	r31, 0x80	; 128
    1bf2:	3f 2e       	mov	r3, r31
    1bf4:	82 01       	movw	r16, r4
    1bf6:	33 fc       	sbrc	r3, 3
    1bf8:	1b c0       	rjmp	.+54     	; 0x1c30 <vfprintf+0x1c2>
    1bfa:	82 2d       	mov	r24, r2
    1bfc:	90 e0       	ldi	r25, 0x00	; 0
    1bfe:	88 16       	cp	r8, r24
    1c00:	99 06       	cpc	r9, r25
    1c02:	b0 f4       	brcc	.+44     	; 0x1c30 <vfprintf+0x1c2>
    1c04:	b6 01       	movw	r22, r12
    1c06:	80 e2       	ldi	r24, 0x20	; 32
    1c08:	90 e0       	ldi	r25, 0x00	; 0
    1c0a:	0e 94 72 10 	call	0x20e4	; 0x20e4 <fputc>
    1c0e:	2a 94       	dec	r2
    1c10:	f4 cf       	rjmp	.-24     	; 0x1bfa <vfprintf+0x18c>
    1c12:	f5 01       	movw	r30, r10
    1c14:	37 fc       	sbrc	r3, 7
    1c16:	85 91       	lpm	r24, Z+
    1c18:	37 fe       	sbrs	r3, 7
    1c1a:	81 91       	ld	r24, Z+
    1c1c:	5f 01       	movw	r10, r30
    1c1e:	b6 01       	movw	r22, r12
    1c20:	90 e0       	ldi	r25, 0x00	; 0
    1c22:	0e 94 72 10 	call	0x20e4	; 0x20e4 <fputc>
    1c26:	21 10       	cpse	r2, r1
    1c28:	2a 94       	dec	r2
    1c2a:	21 e0       	ldi	r18, 0x01	; 1
    1c2c:	82 1a       	sub	r8, r18
    1c2e:	91 08       	sbc	r9, r1
    1c30:	81 14       	cp	r8, r1
    1c32:	91 04       	cpc	r9, r1
    1c34:	71 f7       	brne	.-36     	; 0x1c12 <vfprintf+0x1a4>
    1c36:	e8 c0       	rjmp	.+464    	; 0x1e08 <vfprintf+0x39a>
    1c38:	84 36       	cpi	r24, 0x64	; 100
    1c3a:	11 f0       	breq	.+4      	; 0x1c40 <vfprintf+0x1d2>
    1c3c:	89 36       	cpi	r24, 0x69	; 105
    1c3e:	41 f5       	brne	.+80     	; 0x1c90 <vfprintf+0x222>
    1c40:	f8 01       	movw	r30, r16
    1c42:	37 fe       	sbrs	r3, 7
    1c44:	07 c0       	rjmp	.+14     	; 0x1c54 <vfprintf+0x1e6>
    1c46:	60 81       	ld	r22, Z
    1c48:	71 81       	ldd	r23, Z+1	; 0x01
    1c4a:	82 81       	ldd	r24, Z+2	; 0x02
    1c4c:	93 81       	ldd	r25, Z+3	; 0x03
    1c4e:	0c 5f       	subi	r16, 0xFC	; 252
    1c50:	1f 4f       	sbci	r17, 0xFF	; 255
    1c52:	08 c0       	rjmp	.+16     	; 0x1c64 <vfprintf+0x1f6>
    1c54:	60 81       	ld	r22, Z
    1c56:	71 81       	ldd	r23, Z+1	; 0x01
    1c58:	07 2e       	mov	r0, r23
    1c5a:	00 0c       	add	r0, r0
    1c5c:	88 0b       	sbc	r24, r24
    1c5e:	99 0b       	sbc	r25, r25
    1c60:	0e 5f       	subi	r16, 0xFE	; 254
    1c62:	1f 4f       	sbci	r17, 0xFF	; 255
    1c64:	f3 2d       	mov	r31, r3
    1c66:	ff 76       	andi	r31, 0x6F	; 111
    1c68:	3f 2e       	mov	r3, r31
    1c6a:	97 ff       	sbrs	r25, 7
    1c6c:	09 c0       	rjmp	.+18     	; 0x1c80 <vfprintf+0x212>
    1c6e:	90 95       	com	r25
    1c70:	80 95       	com	r24
    1c72:	70 95       	com	r23
    1c74:	61 95       	neg	r22
    1c76:	7f 4f       	sbci	r23, 0xFF	; 255
    1c78:	8f 4f       	sbci	r24, 0xFF	; 255
    1c7a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c7c:	f0 68       	ori	r31, 0x80	; 128
    1c7e:	3f 2e       	mov	r3, r31
    1c80:	2a e0       	ldi	r18, 0x0A	; 10
    1c82:	30 e0       	ldi	r19, 0x00	; 0
    1c84:	a3 01       	movw	r20, r6
    1c86:	0e 94 ae 10 	call	0x215c	; 0x215c <__ultoa_invert>
    1c8a:	88 2e       	mov	r8, r24
    1c8c:	86 18       	sub	r8, r6
    1c8e:	45 c0       	rjmp	.+138    	; 0x1d1a <vfprintf+0x2ac>
    1c90:	85 37       	cpi	r24, 0x75	; 117
    1c92:	31 f4       	brne	.+12     	; 0x1ca0 <vfprintf+0x232>
    1c94:	23 2d       	mov	r18, r3
    1c96:	2f 7e       	andi	r18, 0xEF	; 239
    1c98:	b2 2e       	mov	r11, r18
    1c9a:	2a e0       	ldi	r18, 0x0A	; 10
    1c9c:	30 e0       	ldi	r19, 0x00	; 0
    1c9e:	25 c0       	rjmp	.+74     	; 0x1cea <vfprintf+0x27c>
    1ca0:	93 2d       	mov	r25, r3
    1ca2:	99 7f       	andi	r25, 0xF9	; 249
    1ca4:	b9 2e       	mov	r11, r25
    1ca6:	8f 36       	cpi	r24, 0x6F	; 111
    1ca8:	c1 f0       	breq	.+48     	; 0x1cda <vfprintf+0x26c>
    1caa:	18 f4       	brcc	.+6      	; 0x1cb2 <vfprintf+0x244>
    1cac:	88 35       	cpi	r24, 0x58	; 88
    1cae:	79 f0       	breq	.+30     	; 0x1cce <vfprintf+0x260>
    1cb0:	b5 c0       	rjmp	.+362    	; 0x1e1c <vfprintf+0x3ae>
    1cb2:	80 37       	cpi	r24, 0x70	; 112
    1cb4:	19 f0       	breq	.+6      	; 0x1cbc <vfprintf+0x24e>
    1cb6:	88 37       	cpi	r24, 0x78	; 120
    1cb8:	21 f0       	breq	.+8      	; 0x1cc2 <vfprintf+0x254>
    1cba:	b0 c0       	rjmp	.+352    	; 0x1e1c <vfprintf+0x3ae>
    1cbc:	e9 2f       	mov	r30, r25
    1cbe:	e0 61       	ori	r30, 0x10	; 16
    1cc0:	be 2e       	mov	r11, r30
    1cc2:	b4 fe       	sbrs	r11, 4
    1cc4:	0d c0       	rjmp	.+26     	; 0x1ce0 <vfprintf+0x272>
    1cc6:	fb 2d       	mov	r31, r11
    1cc8:	f4 60       	ori	r31, 0x04	; 4
    1cca:	bf 2e       	mov	r11, r31
    1ccc:	09 c0       	rjmp	.+18     	; 0x1ce0 <vfprintf+0x272>
    1cce:	34 fe       	sbrs	r3, 4
    1cd0:	0a c0       	rjmp	.+20     	; 0x1ce6 <vfprintf+0x278>
    1cd2:	29 2f       	mov	r18, r25
    1cd4:	26 60       	ori	r18, 0x06	; 6
    1cd6:	b2 2e       	mov	r11, r18
    1cd8:	06 c0       	rjmp	.+12     	; 0x1ce6 <vfprintf+0x278>
    1cda:	28 e0       	ldi	r18, 0x08	; 8
    1cdc:	30 e0       	ldi	r19, 0x00	; 0
    1cde:	05 c0       	rjmp	.+10     	; 0x1cea <vfprintf+0x27c>
    1ce0:	20 e1       	ldi	r18, 0x10	; 16
    1ce2:	30 e0       	ldi	r19, 0x00	; 0
    1ce4:	02 c0       	rjmp	.+4      	; 0x1cea <vfprintf+0x27c>
    1ce6:	20 e1       	ldi	r18, 0x10	; 16
    1ce8:	32 e0       	ldi	r19, 0x02	; 2
    1cea:	f8 01       	movw	r30, r16
    1cec:	b7 fe       	sbrs	r11, 7
    1cee:	07 c0       	rjmp	.+14     	; 0x1cfe <vfprintf+0x290>
    1cf0:	60 81       	ld	r22, Z
    1cf2:	71 81       	ldd	r23, Z+1	; 0x01
    1cf4:	82 81       	ldd	r24, Z+2	; 0x02
    1cf6:	93 81       	ldd	r25, Z+3	; 0x03
    1cf8:	0c 5f       	subi	r16, 0xFC	; 252
    1cfa:	1f 4f       	sbci	r17, 0xFF	; 255
    1cfc:	06 c0       	rjmp	.+12     	; 0x1d0a <vfprintf+0x29c>
    1cfe:	60 81       	ld	r22, Z
    1d00:	71 81       	ldd	r23, Z+1	; 0x01
    1d02:	80 e0       	ldi	r24, 0x00	; 0
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	0e 5f       	subi	r16, 0xFE	; 254
    1d08:	1f 4f       	sbci	r17, 0xFF	; 255
    1d0a:	a3 01       	movw	r20, r6
    1d0c:	0e 94 ae 10 	call	0x215c	; 0x215c <__ultoa_invert>
    1d10:	88 2e       	mov	r8, r24
    1d12:	86 18       	sub	r8, r6
    1d14:	fb 2d       	mov	r31, r11
    1d16:	ff 77       	andi	r31, 0x7F	; 127
    1d18:	3f 2e       	mov	r3, r31
    1d1a:	36 fe       	sbrs	r3, 6
    1d1c:	0d c0       	rjmp	.+26     	; 0x1d38 <vfprintf+0x2ca>
    1d1e:	23 2d       	mov	r18, r3
    1d20:	2e 7f       	andi	r18, 0xFE	; 254
    1d22:	a2 2e       	mov	r10, r18
    1d24:	89 14       	cp	r8, r9
    1d26:	58 f4       	brcc	.+22     	; 0x1d3e <vfprintf+0x2d0>
    1d28:	34 fe       	sbrs	r3, 4
    1d2a:	0b c0       	rjmp	.+22     	; 0x1d42 <vfprintf+0x2d4>
    1d2c:	32 fc       	sbrc	r3, 2
    1d2e:	09 c0       	rjmp	.+18     	; 0x1d42 <vfprintf+0x2d4>
    1d30:	83 2d       	mov	r24, r3
    1d32:	8e 7e       	andi	r24, 0xEE	; 238
    1d34:	a8 2e       	mov	r10, r24
    1d36:	05 c0       	rjmp	.+10     	; 0x1d42 <vfprintf+0x2d4>
    1d38:	b8 2c       	mov	r11, r8
    1d3a:	a3 2c       	mov	r10, r3
    1d3c:	03 c0       	rjmp	.+6      	; 0x1d44 <vfprintf+0x2d6>
    1d3e:	b8 2c       	mov	r11, r8
    1d40:	01 c0       	rjmp	.+2      	; 0x1d44 <vfprintf+0x2d6>
    1d42:	b9 2c       	mov	r11, r9
    1d44:	a4 fe       	sbrs	r10, 4
    1d46:	0f c0       	rjmp	.+30     	; 0x1d66 <vfprintf+0x2f8>
    1d48:	fe 01       	movw	r30, r28
    1d4a:	e8 0d       	add	r30, r8
    1d4c:	f1 1d       	adc	r31, r1
    1d4e:	80 81       	ld	r24, Z
    1d50:	80 33       	cpi	r24, 0x30	; 48
    1d52:	21 f4       	brne	.+8      	; 0x1d5c <vfprintf+0x2ee>
    1d54:	9a 2d       	mov	r25, r10
    1d56:	99 7e       	andi	r25, 0xE9	; 233
    1d58:	a9 2e       	mov	r10, r25
    1d5a:	09 c0       	rjmp	.+18     	; 0x1d6e <vfprintf+0x300>
    1d5c:	a2 fe       	sbrs	r10, 2
    1d5e:	06 c0       	rjmp	.+12     	; 0x1d6c <vfprintf+0x2fe>
    1d60:	b3 94       	inc	r11
    1d62:	b3 94       	inc	r11
    1d64:	04 c0       	rjmp	.+8      	; 0x1d6e <vfprintf+0x300>
    1d66:	8a 2d       	mov	r24, r10
    1d68:	86 78       	andi	r24, 0x86	; 134
    1d6a:	09 f0       	breq	.+2      	; 0x1d6e <vfprintf+0x300>
    1d6c:	b3 94       	inc	r11
    1d6e:	a3 fc       	sbrc	r10, 3
    1d70:	11 c0       	rjmp	.+34     	; 0x1d94 <vfprintf+0x326>
    1d72:	a0 fe       	sbrs	r10, 0
    1d74:	06 c0       	rjmp	.+12     	; 0x1d82 <vfprintf+0x314>
    1d76:	b2 14       	cp	r11, r2
    1d78:	88 f4       	brcc	.+34     	; 0x1d9c <vfprintf+0x32e>
    1d7a:	28 0c       	add	r2, r8
    1d7c:	92 2c       	mov	r9, r2
    1d7e:	9b 18       	sub	r9, r11
    1d80:	0e c0       	rjmp	.+28     	; 0x1d9e <vfprintf+0x330>
    1d82:	b2 14       	cp	r11, r2
    1d84:	60 f4       	brcc	.+24     	; 0x1d9e <vfprintf+0x330>
    1d86:	b6 01       	movw	r22, r12
    1d88:	80 e2       	ldi	r24, 0x20	; 32
    1d8a:	90 e0       	ldi	r25, 0x00	; 0
    1d8c:	0e 94 72 10 	call	0x20e4	; 0x20e4 <fputc>
    1d90:	b3 94       	inc	r11
    1d92:	f7 cf       	rjmp	.-18     	; 0x1d82 <vfprintf+0x314>
    1d94:	b2 14       	cp	r11, r2
    1d96:	18 f4       	brcc	.+6      	; 0x1d9e <vfprintf+0x330>
    1d98:	2b 18       	sub	r2, r11
    1d9a:	02 c0       	rjmp	.+4      	; 0x1da0 <vfprintf+0x332>
    1d9c:	98 2c       	mov	r9, r8
    1d9e:	21 2c       	mov	r2, r1
    1da0:	a4 fe       	sbrs	r10, 4
    1da2:	10 c0       	rjmp	.+32     	; 0x1dc4 <vfprintf+0x356>
    1da4:	b6 01       	movw	r22, r12
    1da6:	80 e3       	ldi	r24, 0x30	; 48
    1da8:	90 e0       	ldi	r25, 0x00	; 0
    1daa:	0e 94 72 10 	call	0x20e4	; 0x20e4 <fputc>
    1dae:	a2 fe       	sbrs	r10, 2
    1db0:	17 c0       	rjmp	.+46     	; 0x1de0 <vfprintf+0x372>
    1db2:	a1 fc       	sbrc	r10, 1
    1db4:	03 c0       	rjmp	.+6      	; 0x1dbc <vfprintf+0x34e>
    1db6:	88 e7       	ldi	r24, 0x78	; 120
    1db8:	90 e0       	ldi	r25, 0x00	; 0
    1dba:	02 c0       	rjmp	.+4      	; 0x1dc0 <vfprintf+0x352>
    1dbc:	88 e5       	ldi	r24, 0x58	; 88
    1dbe:	90 e0       	ldi	r25, 0x00	; 0
    1dc0:	b6 01       	movw	r22, r12
    1dc2:	0c c0       	rjmp	.+24     	; 0x1ddc <vfprintf+0x36e>
    1dc4:	8a 2d       	mov	r24, r10
    1dc6:	86 78       	andi	r24, 0x86	; 134
    1dc8:	59 f0       	breq	.+22     	; 0x1de0 <vfprintf+0x372>
    1dca:	a1 fe       	sbrs	r10, 1
    1dcc:	02 c0       	rjmp	.+4      	; 0x1dd2 <vfprintf+0x364>
    1dce:	8b e2       	ldi	r24, 0x2B	; 43
    1dd0:	01 c0       	rjmp	.+2      	; 0x1dd4 <vfprintf+0x366>
    1dd2:	80 e2       	ldi	r24, 0x20	; 32
    1dd4:	a7 fc       	sbrc	r10, 7
    1dd6:	8d e2       	ldi	r24, 0x2D	; 45
    1dd8:	b6 01       	movw	r22, r12
    1dda:	90 e0       	ldi	r25, 0x00	; 0
    1ddc:	0e 94 72 10 	call	0x20e4	; 0x20e4 <fputc>
    1de0:	89 14       	cp	r8, r9
    1de2:	38 f4       	brcc	.+14     	; 0x1df2 <vfprintf+0x384>
    1de4:	b6 01       	movw	r22, r12
    1de6:	80 e3       	ldi	r24, 0x30	; 48
    1de8:	90 e0       	ldi	r25, 0x00	; 0
    1dea:	0e 94 72 10 	call	0x20e4	; 0x20e4 <fputc>
    1dee:	9a 94       	dec	r9
    1df0:	f7 cf       	rjmp	.-18     	; 0x1de0 <vfprintf+0x372>
    1df2:	8a 94       	dec	r8
    1df4:	f3 01       	movw	r30, r6
    1df6:	e8 0d       	add	r30, r8
    1df8:	f1 1d       	adc	r31, r1
    1dfa:	80 81       	ld	r24, Z
    1dfc:	b6 01       	movw	r22, r12
    1dfe:	90 e0       	ldi	r25, 0x00	; 0
    1e00:	0e 94 72 10 	call	0x20e4	; 0x20e4 <fputc>
    1e04:	81 10       	cpse	r8, r1
    1e06:	f5 cf       	rjmp	.-22     	; 0x1df2 <vfprintf+0x384>
    1e08:	22 20       	and	r2, r2
    1e0a:	09 f4       	brne	.+2      	; 0x1e0e <vfprintf+0x3a0>
    1e0c:	42 ce       	rjmp	.-892    	; 0x1a92 <vfprintf+0x24>
    1e0e:	b6 01       	movw	r22, r12
    1e10:	80 e2       	ldi	r24, 0x20	; 32
    1e12:	90 e0       	ldi	r25, 0x00	; 0
    1e14:	0e 94 72 10 	call	0x20e4	; 0x20e4 <fputc>
    1e18:	2a 94       	dec	r2
    1e1a:	f6 cf       	rjmp	.-20     	; 0x1e08 <vfprintf+0x39a>
    1e1c:	f6 01       	movw	r30, r12
    1e1e:	86 81       	ldd	r24, Z+6	; 0x06
    1e20:	97 81       	ldd	r25, Z+7	; 0x07
    1e22:	02 c0       	rjmp	.+4      	; 0x1e28 <vfprintf+0x3ba>
    1e24:	8f ef       	ldi	r24, 0xFF	; 255
    1e26:	9f ef       	ldi	r25, 0xFF	; 255
    1e28:	2b 96       	adiw	r28, 0x0b	; 11
    1e2a:	e2 e1       	ldi	r30, 0x12	; 18
    1e2c:	0c 94 28 11 	jmp	0x2250	; 0x2250 <__epilogue_restores__>

00001e30 <calloc>:
    1e30:	0f 93       	push	r16
    1e32:	1f 93       	push	r17
    1e34:	cf 93       	push	r28
    1e36:	df 93       	push	r29
    1e38:	86 9f       	mul	r24, r22
    1e3a:	80 01       	movw	r16, r0
    1e3c:	87 9f       	mul	r24, r23
    1e3e:	10 0d       	add	r17, r0
    1e40:	96 9f       	mul	r25, r22
    1e42:	10 0d       	add	r17, r0
    1e44:	11 24       	eor	r1, r1
    1e46:	c8 01       	movw	r24, r16
    1e48:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <malloc>
    1e4c:	ec 01       	movw	r28, r24
    1e4e:	00 97       	sbiw	r24, 0x00	; 0
    1e50:	29 f0       	breq	.+10     	; 0x1e5c <calloc+0x2c>
    1e52:	a8 01       	movw	r20, r16
    1e54:	60 e0       	ldi	r22, 0x00	; 0
    1e56:	70 e0       	ldi	r23, 0x00	; 0
    1e58:	0e 94 60 10 	call	0x20c0	; 0x20c0 <memset>
    1e5c:	ce 01       	movw	r24, r28
    1e5e:	df 91       	pop	r29
    1e60:	cf 91       	pop	r28
    1e62:	1f 91       	pop	r17
    1e64:	0f 91       	pop	r16
    1e66:	08 95       	ret

00001e68 <malloc>:
    1e68:	0f 93       	push	r16
    1e6a:	1f 93       	push	r17
    1e6c:	cf 93       	push	r28
    1e6e:	df 93       	push	r29
    1e70:	82 30       	cpi	r24, 0x02	; 2
    1e72:	91 05       	cpc	r25, r1
    1e74:	10 f4       	brcc	.+4      	; 0x1e7a <malloc+0x12>
    1e76:	82 e0       	ldi	r24, 0x02	; 2
    1e78:	90 e0       	ldi	r25, 0x00	; 0
    1e7a:	e0 91 01 04 	lds	r30, 0x0401	; 0x800401 <__flp>
    1e7e:	f0 91 02 04 	lds	r31, 0x0402	; 0x800402 <__flp+0x1>
    1e82:	20 e0       	ldi	r18, 0x00	; 0
    1e84:	30 e0       	ldi	r19, 0x00	; 0
    1e86:	a0 e0       	ldi	r26, 0x00	; 0
    1e88:	b0 e0       	ldi	r27, 0x00	; 0
    1e8a:	30 97       	sbiw	r30, 0x00	; 0
    1e8c:	19 f1       	breq	.+70     	; 0x1ed4 <malloc+0x6c>
    1e8e:	40 81       	ld	r20, Z
    1e90:	51 81       	ldd	r21, Z+1	; 0x01
    1e92:	02 81       	ldd	r16, Z+2	; 0x02
    1e94:	13 81       	ldd	r17, Z+3	; 0x03
    1e96:	48 17       	cp	r20, r24
    1e98:	59 07       	cpc	r21, r25
    1e9a:	c8 f0       	brcs	.+50     	; 0x1ece <malloc+0x66>
    1e9c:	84 17       	cp	r24, r20
    1e9e:	95 07       	cpc	r25, r21
    1ea0:	69 f4       	brne	.+26     	; 0x1ebc <malloc+0x54>
    1ea2:	10 97       	sbiw	r26, 0x00	; 0
    1ea4:	31 f0       	breq	.+12     	; 0x1eb2 <malloc+0x4a>
    1ea6:	12 96       	adiw	r26, 0x02	; 2
    1ea8:	0c 93       	st	X, r16
    1eaa:	12 97       	sbiw	r26, 0x02	; 2
    1eac:	13 96       	adiw	r26, 0x03	; 3
    1eae:	1c 93       	st	X, r17
    1eb0:	27 c0       	rjmp	.+78     	; 0x1f00 <malloc+0x98>
    1eb2:	00 93 01 04 	sts	0x0401, r16	; 0x800401 <__flp>
    1eb6:	10 93 02 04 	sts	0x0402, r17	; 0x800402 <__flp+0x1>
    1eba:	22 c0       	rjmp	.+68     	; 0x1f00 <malloc+0x98>
    1ebc:	21 15       	cp	r18, r1
    1ebe:	31 05       	cpc	r19, r1
    1ec0:	19 f0       	breq	.+6      	; 0x1ec8 <malloc+0x60>
    1ec2:	42 17       	cp	r20, r18
    1ec4:	53 07       	cpc	r21, r19
    1ec6:	18 f4       	brcc	.+6      	; 0x1ece <malloc+0x66>
    1ec8:	9a 01       	movw	r18, r20
    1eca:	bd 01       	movw	r22, r26
    1ecc:	ef 01       	movw	r28, r30
    1ece:	df 01       	movw	r26, r30
    1ed0:	f8 01       	movw	r30, r16
    1ed2:	db cf       	rjmp	.-74     	; 0x1e8a <malloc+0x22>
    1ed4:	21 15       	cp	r18, r1
    1ed6:	31 05       	cpc	r19, r1
    1ed8:	f9 f0       	breq	.+62     	; 0x1f18 <malloc+0xb0>
    1eda:	28 1b       	sub	r18, r24
    1edc:	39 0b       	sbc	r19, r25
    1ede:	24 30       	cpi	r18, 0x04	; 4
    1ee0:	31 05       	cpc	r19, r1
    1ee2:	80 f4       	brcc	.+32     	; 0x1f04 <malloc+0x9c>
    1ee4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ee6:	9b 81       	ldd	r25, Y+3	; 0x03
    1ee8:	61 15       	cp	r22, r1
    1eea:	71 05       	cpc	r23, r1
    1eec:	21 f0       	breq	.+8      	; 0x1ef6 <malloc+0x8e>
    1eee:	fb 01       	movw	r30, r22
    1ef0:	93 83       	std	Z+3, r25	; 0x03
    1ef2:	82 83       	std	Z+2, r24	; 0x02
    1ef4:	04 c0       	rjmp	.+8      	; 0x1efe <malloc+0x96>
    1ef6:	90 93 02 04 	sts	0x0402, r25	; 0x800402 <__flp+0x1>
    1efa:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <__flp>
    1efe:	fe 01       	movw	r30, r28
    1f00:	32 96       	adiw	r30, 0x02	; 2
    1f02:	44 c0       	rjmp	.+136    	; 0x1f8c <malloc+0x124>
    1f04:	fe 01       	movw	r30, r28
    1f06:	e2 0f       	add	r30, r18
    1f08:	f3 1f       	adc	r31, r19
    1f0a:	81 93       	st	Z+, r24
    1f0c:	91 93       	st	Z+, r25
    1f0e:	22 50       	subi	r18, 0x02	; 2
    1f10:	31 09       	sbc	r19, r1
    1f12:	39 83       	std	Y+1, r19	; 0x01
    1f14:	28 83       	st	Y, r18
    1f16:	3a c0       	rjmp	.+116    	; 0x1f8c <malloc+0x124>
    1f18:	20 91 ff 03 	lds	r18, 0x03FF	; 0x8003ff <__brkval>
    1f1c:	30 91 00 04 	lds	r19, 0x0400	; 0x800400 <__brkval+0x1>
    1f20:	23 2b       	or	r18, r19
    1f22:	41 f4       	brne	.+16     	; 0x1f34 <malloc+0xcc>
    1f24:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1f28:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1f2c:	30 93 00 04 	sts	0x0400, r19	; 0x800400 <__brkval+0x1>
    1f30:	20 93 ff 03 	sts	0x03FF, r18	; 0x8003ff <__brkval>
    1f34:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f38:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f3c:	21 15       	cp	r18, r1
    1f3e:	31 05       	cpc	r19, r1
    1f40:	41 f4       	brne	.+16     	; 0x1f52 <malloc+0xea>
    1f42:	2d b7       	in	r18, 0x3d	; 61
    1f44:	3e b7       	in	r19, 0x3e	; 62
    1f46:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1f4a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1f4e:	24 1b       	sub	r18, r20
    1f50:	35 0b       	sbc	r19, r21
    1f52:	e0 91 ff 03 	lds	r30, 0x03FF	; 0x8003ff <__brkval>
    1f56:	f0 91 00 04 	lds	r31, 0x0400	; 0x800400 <__brkval+0x1>
    1f5a:	e2 17       	cp	r30, r18
    1f5c:	f3 07       	cpc	r31, r19
    1f5e:	a0 f4       	brcc	.+40     	; 0x1f88 <malloc+0x120>
    1f60:	2e 1b       	sub	r18, r30
    1f62:	3f 0b       	sbc	r19, r31
    1f64:	28 17       	cp	r18, r24
    1f66:	39 07       	cpc	r19, r25
    1f68:	78 f0       	brcs	.+30     	; 0x1f88 <malloc+0x120>
    1f6a:	ac 01       	movw	r20, r24
    1f6c:	4e 5f       	subi	r20, 0xFE	; 254
    1f6e:	5f 4f       	sbci	r21, 0xFF	; 255
    1f70:	24 17       	cp	r18, r20
    1f72:	35 07       	cpc	r19, r21
    1f74:	48 f0       	brcs	.+18     	; 0x1f88 <malloc+0x120>
    1f76:	4e 0f       	add	r20, r30
    1f78:	5f 1f       	adc	r21, r31
    1f7a:	50 93 00 04 	sts	0x0400, r21	; 0x800400 <__brkval+0x1>
    1f7e:	40 93 ff 03 	sts	0x03FF, r20	; 0x8003ff <__brkval>
    1f82:	81 93       	st	Z+, r24
    1f84:	91 93       	st	Z+, r25
    1f86:	02 c0       	rjmp	.+4      	; 0x1f8c <malloc+0x124>
    1f88:	e0 e0       	ldi	r30, 0x00	; 0
    1f8a:	f0 e0       	ldi	r31, 0x00	; 0
    1f8c:	cf 01       	movw	r24, r30
    1f8e:	df 91       	pop	r29
    1f90:	cf 91       	pop	r28
    1f92:	1f 91       	pop	r17
    1f94:	0f 91       	pop	r16
    1f96:	08 95       	ret

00001f98 <free>:
    1f98:	cf 93       	push	r28
    1f9a:	df 93       	push	r29
    1f9c:	00 97       	sbiw	r24, 0x00	; 0
    1f9e:	09 f4       	brne	.+2      	; 0x1fa2 <free+0xa>
    1fa0:	81 c0       	rjmp	.+258    	; 0x20a4 <free+0x10c>
    1fa2:	fc 01       	movw	r30, r24
    1fa4:	32 97       	sbiw	r30, 0x02	; 2
    1fa6:	13 82       	std	Z+3, r1	; 0x03
    1fa8:	12 82       	std	Z+2, r1	; 0x02
    1faa:	a0 91 01 04 	lds	r26, 0x0401	; 0x800401 <__flp>
    1fae:	b0 91 02 04 	lds	r27, 0x0402	; 0x800402 <__flp+0x1>
    1fb2:	10 97       	sbiw	r26, 0x00	; 0
    1fb4:	81 f4       	brne	.+32     	; 0x1fd6 <free+0x3e>
    1fb6:	20 81       	ld	r18, Z
    1fb8:	31 81       	ldd	r19, Z+1	; 0x01
    1fba:	82 0f       	add	r24, r18
    1fbc:	93 1f       	adc	r25, r19
    1fbe:	20 91 ff 03 	lds	r18, 0x03FF	; 0x8003ff <__brkval>
    1fc2:	30 91 00 04 	lds	r19, 0x0400	; 0x800400 <__brkval+0x1>
    1fc6:	28 17       	cp	r18, r24
    1fc8:	39 07       	cpc	r19, r25
    1fca:	51 f5       	brne	.+84     	; 0x2020 <free+0x88>
    1fcc:	f0 93 00 04 	sts	0x0400, r31	; 0x800400 <__brkval+0x1>
    1fd0:	e0 93 ff 03 	sts	0x03FF, r30	; 0x8003ff <__brkval>
    1fd4:	67 c0       	rjmp	.+206    	; 0x20a4 <free+0x10c>
    1fd6:	ed 01       	movw	r28, r26
    1fd8:	20 e0       	ldi	r18, 0x00	; 0
    1fda:	30 e0       	ldi	r19, 0x00	; 0
    1fdc:	ce 17       	cp	r28, r30
    1fde:	df 07       	cpc	r29, r31
    1fe0:	40 f4       	brcc	.+16     	; 0x1ff2 <free+0x5a>
    1fe2:	4a 81       	ldd	r20, Y+2	; 0x02
    1fe4:	5b 81       	ldd	r21, Y+3	; 0x03
    1fe6:	9e 01       	movw	r18, r28
    1fe8:	41 15       	cp	r20, r1
    1fea:	51 05       	cpc	r21, r1
    1fec:	f1 f0       	breq	.+60     	; 0x202a <free+0x92>
    1fee:	ea 01       	movw	r28, r20
    1ff0:	f5 cf       	rjmp	.-22     	; 0x1fdc <free+0x44>
    1ff2:	d3 83       	std	Z+3, r29	; 0x03
    1ff4:	c2 83       	std	Z+2, r28	; 0x02
    1ff6:	40 81       	ld	r20, Z
    1ff8:	51 81       	ldd	r21, Z+1	; 0x01
    1ffa:	84 0f       	add	r24, r20
    1ffc:	95 1f       	adc	r25, r21
    1ffe:	c8 17       	cp	r28, r24
    2000:	d9 07       	cpc	r29, r25
    2002:	59 f4       	brne	.+22     	; 0x201a <free+0x82>
    2004:	88 81       	ld	r24, Y
    2006:	99 81       	ldd	r25, Y+1	; 0x01
    2008:	84 0f       	add	r24, r20
    200a:	95 1f       	adc	r25, r21
    200c:	02 96       	adiw	r24, 0x02	; 2
    200e:	91 83       	std	Z+1, r25	; 0x01
    2010:	80 83       	st	Z, r24
    2012:	8a 81       	ldd	r24, Y+2	; 0x02
    2014:	9b 81       	ldd	r25, Y+3	; 0x03
    2016:	93 83       	std	Z+3, r25	; 0x03
    2018:	82 83       	std	Z+2, r24	; 0x02
    201a:	21 15       	cp	r18, r1
    201c:	31 05       	cpc	r19, r1
    201e:	29 f4       	brne	.+10     	; 0x202a <free+0x92>
    2020:	f0 93 02 04 	sts	0x0402, r31	; 0x800402 <__flp+0x1>
    2024:	e0 93 01 04 	sts	0x0401, r30	; 0x800401 <__flp>
    2028:	3d c0       	rjmp	.+122    	; 0x20a4 <free+0x10c>
    202a:	e9 01       	movw	r28, r18
    202c:	fb 83       	std	Y+3, r31	; 0x03
    202e:	ea 83       	std	Y+2, r30	; 0x02
    2030:	49 91       	ld	r20, Y+
    2032:	59 91       	ld	r21, Y+
    2034:	c4 0f       	add	r28, r20
    2036:	d5 1f       	adc	r29, r21
    2038:	ec 17       	cp	r30, r28
    203a:	fd 07       	cpc	r31, r29
    203c:	61 f4       	brne	.+24     	; 0x2056 <free+0xbe>
    203e:	80 81       	ld	r24, Z
    2040:	91 81       	ldd	r25, Z+1	; 0x01
    2042:	84 0f       	add	r24, r20
    2044:	95 1f       	adc	r25, r21
    2046:	02 96       	adiw	r24, 0x02	; 2
    2048:	e9 01       	movw	r28, r18
    204a:	99 83       	std	Y+1, r25	; 0x01
    204c:	88 83       	st	Y, r24
    204e:	82 81       	ldd	r24, Z+2	; 0x02
    2050:	93 81       	ldd	r25, Z+3	; 0x03
    2052:	9b 83       	std	Y+3, r25	; 0x03
    2054:	8a 83       	std	Y+2, r24	; 0x02
    2056:	e0 e0       	ldi	r30, 0x00	; 0
    2058:	f0 e0       	ldi	r31, 0x00	; 0
    205a:	12 96       	adiw	r26, 0x02	; 2
    205c:	8d 91       	ld	r24, X+
    205e:	9c 91       	ld	r25, X
    2060:	13 97       	sbiw	r26, 0x03	; 3
    2062:	00 97       	sbiw	r24, 0x00	; 0
    2064:	19 f0       	breq	.+6      	; 0x206c <free+0xd4>
    2066:	fd 01       	movw	r30, r26
    2068:	dc 01       	movw	r26, r24
    206a:	f7 cf       	rjmp	.-18     	; 0x205a <free+0xc2>
    206c:	8d 91       	ld	r24, X+
    206e:	9c 91       	ld	r25, X
    2070:	11 97       	sbiw	r26, 0x01	; 1
    2072:	9d 01       	movw	r18, r26
    2074:	2e 5f       	subi	r18, 0xFE	; 254
    2076:	3f 4f       	sbci	r19, 0xFF	; 255
    2078:	82 0f       	add	r24, r18
    207a:	93 1f       	adc	r25, r19
    207c:	20 91 ff 03 	lds	r18, 0x03FF	; 0x8003ff <__brkval>
    2080:	30 91 00 04 	lds	r19, 0x0400	; 0x800400 <__brkval+0x1>
    2084:	28 17       	cp	r18, r24
    2086:	39 07       	cpc	r19, r25
    2088:	69 f4       	brne	.+26     	; 0x20a4 <free+0x10c>
    208a:	30 97       	sbiw	r30, 0x00	; 0
    208c:	29 f4       	brne	.+10     	; 0x2098 <free+0x100>
    208e:	10 92 02 04 	sts	0x0402, r1	; 0x800402 <__flp+0x1>
    2092:	10 92 01 04 	sts	0x0401, r1	; 0x800401 <__flp>
    2096:	02 c0       	rjmp	.+4      	; 0x209c <free+0x104>
    2098:	13 82       	std	Z+3, r1	; 0x03
    209a:	12 82       	std	Z+2, r1	; 0x02
    209c:	b0 93 00 04 	sts	0x0400, r27	; 0x800400 <__brkval+0x1>
    20a0:	a0 93 ff 03 	sts	0x03FF, r26	; 0x8003ff <__brkval>
    20a4:	df 91       	pop	r29
    20a6:	cf 91       	pop	r28
    20a8:	08 95       	ret

000020aa <strnlen_P>:
    20aa:	fc 01       	movw	r30, r24
    20ac:	05 90       	lpm	r0, Z+
    20ae:	61 50       	subi	r22, 0x01	; 1
    20b0:	70 40       	sbci	r23, 0x00	; 0
    20b2:	01 10       	cpse	r0, r1
    20b4:	d8 f7       	brcc	.-10     	; 0x20ac <strnlen_P+0x2>
    20b6:	80 95       	com	r24
    20b8:	90 95       	com	r25
    20ba:	8e 0f       	add	r24, r30
    20bc:	9f 1f       	adc	r25, r31
    20be:	08 95       	ret

000020c0 <memset>:
    20c0:	dc 01       	movw	r26, r24
    20c2:	01 c0       	rjmp	.+2      	; 0x20c6 <memset+0x6>
    20c4:	6d 93       	st	X+, r22
    20c6:	41 50       	subi	r20, 0x01	; 1
    20c8:	50 40       	sbci	r21, 0x00	; 0
    20ca:	e0 f7       	brcc	.-8      	; 0x20c4 <memset+0x4>
    20cc:	08 95       	ret

000020ce <strnlen>:
    20ce:	fc 01       	movw	r30, r24
    20d0:	61 50       	subi	r22, 0x01	; 1
    20d2:	70 40       	sbci	r23, 0x00	; 0
    20d4:	01 90       	ld	r0, Z+
    20d6:	01 10       	cpse	r0, r1
    20d8:	d8 f7       	brcc	.-10     	; 0x20d0 <strnlen+0x2>
    20da:	80 95       	com	r24
    20dc:	90 95       	com	r25
    20de:	8e 0f       	add	r24, r30
    20e0:	9f 1f       	adc	r25, r31
    20e2:	08 95       	ret

000020e4 <fputc>:
    20e4:	0f 93       	push	r16
    20e6:	1f 93       	push	r17
    20e8:	cf 93       	push	r28
    20ea:	df 93       	push	r29
    20ec:	fb 01       	movw	r30, r22
    20ee:	23 81       	ldd	r18, Z+3	; 0x03
    20f0:	21 fd       	sbrc	r18, 1
    20f2:	03 c0       	rjmp	.+6      	; 0x20fa <fputc+0x16>
    20f4:	8f ef       	ldi	r24, 0xFF	; 255
    20f6:	9f ef       	ldi	r25, 0xFF	; 255
    20f8:	2c c0       	rjmp	.+88     	; 0x2152 <fputc+0x6e>
    20fa:	22 ff       	sbrs	r18, 2
    20fc:	16 c0       	rjmp	.+44     	; 0x212a <fputc+0x46>
    20fe:	46 81       	ldd	r20, Z+6	; 0x06
    2100:	57 81       	ldd	r21, Z+7	; 0x07
    2102:	24 81       	ldd	r18, Z+4	; 0x04
    2104:	35 81       	ldd	r19, Z+5	; 0x05
    2106:	42 17       	cp	r20, r18
    2108:	53 07       	cpc	r21, r19
    210a:	44 f4       	brge	.+16     	; 0x211c <fputc+0x38>
    210c:	a0 81       	ld	r26, Z
    210e:	b1 81       	ldd	r27, Z+1	; 0x01
    2110:	9d 01       	movw	r18, r26
    2112:	2f 5f       	subi	r18, 0xFF	; 255
    2114:	3f 4f       	sbci	r19, 0xFF	; 255
    2116:	31 83       	std	Z+1, r19	; 0x01
    2118:	20 83       	st	Z, r18
    211a:	8c 93       	st	X, r24
    211c:	26 81       	ldd	r18, Z+6	; 0x06
    211e:	37 81       	ldd	r19, Z+7	; 0x07
    2120:	2f 5f       	subi	r18, 0xFF	; 255
    2122:	3f 4f       	sbci	r19, 0xFF	; 255
    2124:	37 83       	std	Z+7, r19	; 0x07
    2126:	26 83       	std	Z+6, r18	; 0x06
    2128:	14 c0       	rjmp	.+40     	; 0x2152 <fputc+0x6e>
    212a:	8b 01       	movw	r16, r22
    212c:	ec 01       	movw	r28, r24
    212e:	fb 01       	movw	r30, r22
    2130:	00 84       	ldd	r0, Z+8	; 0x08
    2132:	f1 85       	ldd	r31, Z+9	; 0x09
    2134:	e0 2d       	mov	r30, r0
    2136:	09 95       	icall
    2138:	89 2b       	or	r24, r25
    213a:	e1 f6       	brne	.-72     	; 0x20f4 <fputc+0x10>
    213c:	d8 01       	movw	r26, r16
    213e:	16 96       	adiw	r26, 0x06	; 6
    2140:	8d 91       	ld	r24, X+
    2142:	9c 91       	ld	r25, X
    2144:	17 97       	sbiw	r26, 0x07	; 7
    2146:	01 96       	adiw	r24, 0x01	; 1
    2148:	17 96       	adiw	r26, 0x07	; 7
    214a:	9c 93       	st	X, r25
    214c:	8e 93       	st	-X, r24
    214e:	16 97       	sbiw	r26, 0x06	; 6
    2150:	ce 01       	movw	r24, r28
    2152:	df 91       	pop	r29
    2154:	cf 91       	pop	r28
    2156:	1f 91       	pop	r17
    2158:	0f 91       	pop	r16
    215a:	08 95       	ret

0000215c <__ultoa_invert>:
    215c:	fa 01       	movw	r30, r20
    215e:	aa 27       	eor	r26, r26
    2160:	28 30       	cpi	r18, 0x08	; 8
    2162:	51 f1       	breq	.+84     	; 0x21b8 <__ultoa_invert+0x5c>
    2164:	20 31       	cpi	r18, 0x10	; 16
    2166:	81 f1       	breq	.+96     	; 0x21c8 <__ultoa_invert+0x6c>
    2168:	e8 94       	clt
    216a:	6f 93       	push	r22
    216c:	6e 7f       	andi	r22, 0xFE	; 254
    216e:	6e 5f       	subi	r22, 0xFE	; 254
    2170:	7f 4f       	sbci	r23, 0xFF	; 255
    2172:	8f 4f       	sbci	r24, 0xFF	; 255
    2174:	9f 4f       	sbci	r25, 0xFF	; 255
    2176:	af 4f       	sbci	r26, 0xFF	; 255
    2178:	b1 e0       	ldi	r27, 0x01	; 1
    217a:	3e d0       	rcall	.+124    	; 0x21f8 <__ultoa_invert+0x9c>
    217c:	b4 e0       	ldi	r27, 0x04	; 4
    217e:	3c d0       	rcall	.+120    	; 0x21f8 <__ultoa_invert+0x9c>
    2180:	67 0f       	add	r22, r23
    2182:	78 1f       	adc	r23, r24
    2184:	89 1f       	adc	r24, r25
    2186:	9a 1f       	adc	r25, r26
    2188:	a1 1d       	adc	r26, r1
    218a:	68 0f       	add	r22, r24
    218c:	79 1f       	adc	r23, r25
    218e:	8a 1f       	adc	r24, r26
    2190:	91 1d       	adc	r25, r1
    2192:	a1 1d       	adc	r26, r1
    2194:	6a 0f       	add	r22, r26
    2196:	71 1d       	adc	r23, r1
    2198:	81 1d       	adc	r24, r1
    219a:	91 1d       	adc	r25, r1
    219c:	a1 1d       	adc	r26, r1
    219e:	20 d0       	rcall	.+64     	; 0x21e0 <__ultoa_invert+0x84>
    21a0:	09 f4       	brne	.+2      	; 0x21a4 <__ultoa_invert+0x48>
    21a2:	68 94       	set
    21a4:	3f 91       	pop	r19
    21a6:	2a e0       	ldi	r18, 0x0A	; 10
    21a8:	26 9f       	mul	r18, r22
    21aa:	11 24       	eor	r1, r1
    21ac:	30 19       	sub	r19, r0
    21ae:	30 5d       	subi	r19, 0xD0	; 208
    21b0:	31 93       	st	Z+, r19
    21b2:	de f6       	brtc	.-74     	; 0x216a <__ultoa_invert+0xe>
    21b4:	cf 01       	movw	r24, r30
    21b6:	08 95       	ret
    21b8:	46 2f       	mov	r20, r22
    21ba:	47 70       	andi	r20, 0x07	; 7
    21bc:	40 5d       	subi	r20, 0xD0	; 208
    21be:	41 93       	st	Z+, r20
    21c0:	b3 e0       	ldi	r27, 0x03	; 3
    21c2:	0f d0       	rcall	.+30     	; 0x21e2 <__ultoa_invert+0x86>
    21c4:	c9 f7       	brne	.-14     	; 0x21b8 <__ultoa_invert+0x5c>
    21c6:	f6 cf       	rjmp	.-20     	; 0x21b4 <__ultoa_invert+0x58>
    21c8:	46 2f       	mov	r20, r22
    21ca:	4f 70       	andi	r20, 0x0F	; 15
    21cc:	40 5d       	subi	r20, 0xD0	; 208
    21ce:	4a 33       	cpi	r20, 0x3A	; 58
    21d0:	18 f0       	brcs	.+6      	; 0x21d8 <__ultoa_invert+0x7c>
    21d2:	49 5d       	subi	r20, 0xD9	; 217
    21d4:	31 fd       	sbrc	r19, 1
    21d6:	40 52       	subi	r20, 0x20	; 32
    21d8:	41 93       	st	Z+, r20
    21da:	02 d0       	rcall	.+4      	; 0x21e0 <__ultoa_invert+0x84>
    21dc:	a9 f7       	brne	.-22     	; 0x21c8 <__ultoa_invert+0x6c>
    21de:	ea cf       	rjmp	.-44     	; 0x21b4 <__ultoa_invert+0x58>
    21e0:	b4 e0       	ldi	r27, 0x04	; 4
    21e2:	a6 95       	lsr	r26
    21e4:	97 95       	ror	r25
    21e6:	87 95       	ror	r24
    21e8:	77 95       	ror	r23
    21ea:	67 95       	ror	r22
    21ec:	ba 95       	dec	r27
    21ee:	c9 f7       	brne	.-14     	; 0x21e2 <__ultoa_invert+0x86>
    21f0:	00 97       	sbiw	r24, 0x00	; 0
    21f2:	61 05       	cpc	r22, r1
    21f4:	71 05       	cpc	r23, r1
    21f6:	08 95       	ret
    21f8:	9b 01       	movw	r18, r22
    21fa:	ac 01       	movw	r20, r24
    21fc:	0a 2e       	mov	r0, r26
    21fe:	06 94       	lsr	r0
    2200:	57 95       	ror	r21
    2202:	47 95       	ror	r20
    2204:	37 95       	ror	r19
    2206:	27 95       	ror	r18
    2208:	ba 95       	dec	r27
    220a:	c9 f7       	brne	.-14     	; 0x21fe <__ultoa_invert+0xa2>
    220c:	62 0f       	add	r22, r18
    220e:	73 1f       	adc	r23, r19
    2210:	84 1f       	adc	r24, r20
    2212:	95 1f       	adc	r25, r21
    2214:	a0 1d       	adc	r26, r0
    2216:	08 95       	ret

00002218 <__prologue_saves__>:
    2218:	2f 92       	push	r2
    221a:	3f 92       	push	r3
    221c:	4f 92       	push	r4
    221e:	5f 92       	push	r5
    2220:	6f 92       	push	r6
    2222:	7f 92       	push	r7
    2224:	8f 92       	push	r8
    2226:	9f 92       	push	r9
    2228:	af 92       	push	r10
    222a:	bf 92       	push	r11
    222c:	cf 92       	push	r12
    222e:	df 92       	push	r13
    2230:	ef 92       	push	r14
    2232:	ff 92       	push	r15
    2234:	0f 93       	push	r16
    2236:	1f 93       	push	r17
    2238:	cf 93       	push	r28
    223a:	df 93       	push	r29
    223c:	cd b7       	in	r28, 0x3d	; 61
    223e:	de b7       	in	r29, 0x3e	; 62
    2240:	ca 1b       	sub	r28, r26
    2242:	db 0b       	sbc	r29, r27
    2244:	0f b6       	in	r0, 0x3f	; 63
    2246:	f8 94       	cli
    2248:	de bf       	out	0x3e, r29	; 62
    224a:	0f be       	out	0x3f, r0	; 63
    224c:	cd bf       	out	0x3d, r28	; 61
    224e:	09 94       	ijmp

00002250 <__epilogue_restores__>:
    2250:	2a 88       	ldd	r2, Y+18	; 0x12
    2252:	39 88       	ldd	r3, Y+17	; 0x11
    2254:	48 88       	ldd	r4, Y+16	; 0x10
    2256:	5f 84       	ldd	r5, Y+15	; 0x0f
    2258:	6e 84       	ldd	r6, Y+14	; 0x0e
    225a:	7d 84       	ldd	r7, Y+13	; 0x0d
    225c:	8c 84       	ldd	r8, Y+12	; 0x0c
    225e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2260:	aa 84       	ldd	r10, Y+10	; 0x0a
    2262:	b9 84       	ldd	r11, Y+9	; 0x09
    2264:	c8 84       	ldd	r12, Y+8	; 0x08
    2266:	df 80       	ldd	r13, Y+7	; 0x07
    2268:	ee 80       	ldd	r14, Y+6	; 0x06
    226a:	fd 80       	ldd	r15, Y+5	; 0x05
    226c:	0c 81       	ldd	r16, Y+4	; 0x04
    226e:	1b 81       	ldd	r17, Y+3	; 0x03
    2270:	aa 81       	ldd	r26, Y+2	; 0x02
    2272:	b9 81       	ldd	r27, Y+1	; 0x01
    2274:	ce 0f       	add	r28, r30
    2276:	d1 1d       	adc	r29, r1
    2278:	0f b6       	in	r0, 0x3f	; 63
    227a:	f8 94       	cli
    227c:	de bf       	out	0x3e, r29	; 62
    227e:	0f be       	out	0x3f, r0	; 63
    2280:	cd bf       	out	0x3d, r28	; 61
    2282:	ed 01       	movw	r28, r26
    2284:	08 95       	ret

00002286 <_exit>:
    2286:	f8 94       	cli

00002288 <__stop_program>:
    2288:	ff cf       	rjmp	.-2      	; 0x2288 <__stop_program>
