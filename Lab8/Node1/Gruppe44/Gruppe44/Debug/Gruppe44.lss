
Gruppe44.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000017c  00800100  000020a0  00002134  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000020a0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000013f  0080027c  0080027c  000022b0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000022b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000230c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002c0  00000000  00000000  00002348  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003966  00000000  00000000  00002608  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000125a  00000000  00000000  00005f6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001d10  00000000  00000000  000071c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000654  00000000  00000000  00008ed8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000bba  00000000  00000000  0000952c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010f7  00000000  00000000  0000a0e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  0000b1dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 fd 04 	jmp	0x9fa	; 0x9fa <__vector_1>
       8:	0c 94 0c 05 	jmp	0xa18	; 0xa18 <__vector_2>
       c:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <__vector_3>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <__vector_3+0x9e>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	12 e0       	ldi	r17, 0x02	; 2
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e0 ea       	ldi	r30, 0xA0	; 160
     37c:	f0 e2       	ldi	r31, 0x20	; 32
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	ac 37       	cpi	r26, 0x7C	; 124
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	23 e0       	ldi	r18, 0x03	; 3
     38c:	ac e7       	ldi	r26, 0x7C	; 124
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	ab 3b       	cpi	r26, 0xBB	; 187
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 dd 05 	call	0xbba	; 0xbba <main>
     39e:	0c 94 4e 10 	jmp	0x209c	; 0x209c <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <adc_init>:
     3a6:	81 b3       	in	r24, 0x11	; 17
     3a8:	80 62       	ori	r24, 0x20	; 32
     3aa:	81 bb       	out	0x11, r24	; 17
     3ac:	8f b5       	in	r24, 0x2f	; 47
     3ae:	80 65       	ori	r24, 0x50	; 80
     3b0:	8f bd       	out	0x2f, r24	; 47
     3b2:	8e b5       	in	r24, 0x2e	; 46
     3b4:	89 60       	ori	r24, 0x09	; 9
     3b6:	8e bd       	out	0x2e, r24	; 46
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	9b bd       	out	0x2b, r25	; 43
     3be:	8a bd       	out	0x2a, r24	; 42
     3c0:	08 95       	ret

000003c2 <adc_read>:
     3c2:	8f ef       	ldi	r24, 0xFF	; 255
     3c4:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <__bss_end+0x1045>
     3c8:	84 e1       	ldi	r24, 0x14	; 20
     3ca:	8a 95       	dec	r24
     3cc:	f1 f7       	brne	.-4      	; 0x3ca <adc_read+0x8>
     3ce:	80 e0       	ldi	r24, 0x00	; 0
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	0b c0       	rjmp	.+22     	; 0x3ea <adc_read+0x28>
     3d4:	20 91 00 14 	lds	r18, 0x1400	; 0x801400 <__bss_end+0x1045>
     3d8:	fc 01       	movw	r30, r24
     3da:	ee 0f       	add	r30, r30
     3dc:	ff 1f       	adc	r31, r31
     3de:	ed 55       	subi	r30, 0x5D	; 93
     3e0:	fd 4f       	sbci	r31, 0xFD	; 253
     3e2:	30 e0       	ldi	r19, 0x00	; 0
     3e4:	31 83       	std	Z+1, r19	; 0x01
     3e6:	20 83       	st	Z, r18
     3e8:	01 96       	adiw	r24, 0x01	; 1
     3ea:	84 30       	cpi	r24, 0x04	; 4
     3ec:	91 05       	cpc	r25, r1
     3ee:	94 f3       	brlt	.-28     	; 0x3d4 <adc_read+0x12>
     3f0:	08 95       	ret

000003f2 <adc_calibrate>:
     3f2:	87 ea       	ldi	r24, 0xA7	; 167
     3f4:	91 e6       	ldi	r25, 0x61	; 97
     3f6:	01 97       	sbiw	r24, 0x01	; 1
     3f8:	f1 f7       	brne	.-4      	; 0x3f6 <adc_calibrate+0x4>
     3fa:	00 c0       	rjmp	.+0      	; 0x3fc <adc_calibrate+0xa>
     3fc:	00 00       	nop
     3fe:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <adc_read>
     402:	e3 ea       	ldi	r30, 0xA3	; 163
     404:	f2 e0       	ldi	r31, 0x02	; 2
     406:	20 81       	ld	r18, Z
     408:	31 81       	ldd	r19, Z+1	; 0x01
     40a:	30 93 90 02 	sts	0x0290, r19	; 0x800290 <X_neutral+0x1>
     40e:	20 93 8f 02 	sts	0x028F, r18	; 0x80028f <X_neutral>
     412:	82 81       	ldd	r24, Z+2	; 0x02
     414:	93 81       	ldd	r25, Z+3	; 0x03
     416:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <Y_neutral+0x1>
     41a:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <Y_neutral>
     41e:	30 93 8c 02 	sts	0x028C, r19	; 0x80028c <previous_x+0x1>
     422:	20 93 8b 02 	sts	0x028B, r18	; 0x80028b <previous_x>
     426:	90 93 a2 02 	sts	0x02A2, r25	; 0x8002a2 <previous_y+0x1>
     42a:	80 93 a1 02 	sts	0x02A1, r24	; 0x8002a1 <previous_y>
     42e:	84 81       	ldd	r24, Z+4	; 0x04
     430:	95 81       	ldd	r25, Z+5	; 0x05
     432:	90 93 8e 02 	sts	0x028E, r25	; 0x80028e <previous_right+0x1>
     436:	80 93 8d 02 	sts	0x028D, r24	; 0x80028d <previous_right>
     43a:	86 81       	ldd	r24, Z+6	; 0x06
     43c:	97 81       	ldd	r25, Z+7	; 0x07
     43e:	90 93 8a 02 	sts	0x028A, r25	; 0x80028a <previous_left+0x1>
     442:	80 93 89 02 	sts	0x0289, r24	; 0x800289 <previous_left>
     446:	08 95       	ret

00000448 <get_stick_state>:
     448:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <adc_read>
     44c:	e3 ea       	ldi	r30, 0xA3	; 163
     44e:	f2 e0       	ldi	r31, 0x02	; 2
     450:	80 81       	ld	r24, Z
     452:	91 81       	ldd	r25, Z+1	; 0x01
     454:	22 81       	ldd	r18, Z+2	; 0x02
     456:	33 81       	ldd	r19, Z+3	; 0x03
     458:	99 27       	eor	r25, r25
     45a:	60 91 8f 02 	lds	r22, 0x028F	; 0x80028f <X_neutral>
     45e:	70 91 90 02 	lds	r23, 0x0290	; 0x800290 <X_neutral+0x1>
     462:	68 17       	cp	r22, r24
     464:	79 07       	cpc	r23, r25
     466:	b4 f4       	brge	.+44     	; 0x494 <get_stick_state+0x4c>
     468:	ac 01       	movw	r20, r24
     46a:	46 1b       	sub	r20, r22
     46c:	57 0b       	sbc	r21, r23
     46e:	e4 e6       	ldi	r30, 0x64	; 100
     470:	e4 9f       	mul	r30, r20
     472:	c0 01       	movw	r24, r0
     474:	e5 9f       	mul	r30, r21
     476:	90 0d       	add	r25, r0
     478:	11 24       	eor	r1, r1
     47a:	4f ef       	ldi	r20, 0xFF	; 255
     47c:	50 e0       	ldi	r21, 0x00	; 0
     47e:	fa 01       	movw	r30, r20
     480:	e6 1b       	sub	r30, r22
     482:	f7 0b       	sbc	r31, r23
     484:	bf 01       	movw	r22, r30
     486:	0e 94 89 0b 	call	0x1712	; 0x1712 <__divmodhi4>
     48a:	70 93 9a 02 	sts	0x029A, r23	; 0x80029a <stick_state+0x1>
     48e:	60 93 99 02 	sts	0x0299, r22	; 0x800299 <stick_state>
     492:	0f c0       	rjmp	.+30     	; 0x4b2 <get_stick_state+0x6a>
     494:	ac 01       	movw	r20, r24
     496:	46 1b       	sub	r20, r22
     498:	57 0b       	sbc	r21, r23
     49a:	e4 e6       	ldi	r30, 0x64	; 100
     49c:	e4 9f       	mul	r30, r20
     49e:	c0 01       	movw	r24, r0
     4a0:	e5 9f       	mul	r30, r21
     4a2:	90 0d       	add	r25, r0
     4a4:	11 24       	eor	r1, r1
     4a6:	0e 94 89 0b 	call	0x1712	; 0x1712 <__divmodhi4>
     4aa:	70 93 9a 02 	sts	0x029A, r23	; 0x80029a <stick_state+0x1>
     4ae:	60 93 99 02 	sts	0x0299, r22	; 0x800299 <stick_state>
     4b2:	c9 01       	movw	r24, r18
     4b4:	99 27       	eor	r25, r25
     4b6:	60 91 7f 02 	lds	r22, 0x027F	; 0x80027f <Y_neutral>
     4ba:	70 91 80 02 	lds	r23, 0x0280	; 0x800280 <Y_neutral+0x1>
     4be:	68 17       	cp	r22, r24
     4c0:	79 07       	cpc	r23, r25
     4c2:	b4 f4       	brge	.+44     	; 0x4f0 <get_stick_state+0xa8>
     4c4:	9c 01       	movw	r18, r24
     4c6:	26 1b       	sub	r18, r22
     4c8:	37 0b       	sbc	r19, r23
     4ca:	44 e6       	ldi	r20, 0x64	; 100
     4cc:	42 9f       	mul	r20, r18
     4ce:	c0 01       	movw	r24, r0
     4d0:	43 9f       	mul	r20, r19
     4d2:	90 0d       	add	r25, r0
     4d4:	11 24       	eor	r1, r1
     4d6:	2f ef       	ldi	r18, 0xFF	; 255
     4d8:	30 e0       	ldi	r19, 0x00	; 0
     4da:	a9 01       	movw	r20, r18
     4dc:	46 1b       	sub	r20, r22
     4de:	57 0b       	sbc	r21, r23
     4e0:	ba 01       	movw	r22, r20
     4e2:	0e 94 89 0b 	call	0x1712	; 0x1712 <__divmodhi4>
     4e6:	70 93 9c 02 	sts	0x029C, r23	; 0x80029c <stick_state+0x3>
     4ea:	60 93 9b 02 	sts	0x029B, r22	; 0x80029b <stick_state+0x2>
     4ee:	08 95       	ret
     4f0:	9c 01       	movw	r18, r24
     4f2:	26 1b       	sub	r18, r22
     4f4:	37 0b       	sbc	r19, r23
     4f6:	44 e6       	ldi	r20, 0x64	; 100
     4f8:	42 9f       	mul	r20, r18
     4fa:	c0 01       	movw	r24, r0
     4fc:	43 9f       	mul	r20, r19
     4fe:	90 0d       	add	r25, r0
     500:	11 24       	eor	r1, r1
     502:	0e 94 89 0b 	call	0x1712	; 0x1712 <__divmodhi4>
     506:	70 93 9c 02 	sts	0x029C, r23	; 0x80029c <stick_state+0x3>
     50a:	60 93 9b 02 	sts	0x029B, r22	; 0x80029b <stick_state+0x2>
     50e:	08 95       	ret

00000510 <get_stick_direction>:
     510:	0e 94 24 02 	call	0x448	; 0x448 <get_stick_state>
     514:	e9 e9       	ldi	r30, 0x99	; 153
     516:	f2 e0       	ldi	r31, 0x02	; 2
     518:	20 81       	ld	r18, Z
     51a:	31 81       	ldd	r19, Z+1	; 0x01
     51c:	82 81       	ldd	r24, Z+2	; 0x02
     51e:	93 81       	ldd	r25, Z+3	; 0x03
     520:	23 33       	cpi	r18, 0x33	; 51
     522:	31 05       	cpc	r19, r1
     524:	3c f0       	brlt	.+14     	; 0x534 <get_stick_direction+0x24>
     526:	23 e0       	ldi	r18, 0x03	; 3
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	30 93 9e 02 	sts	0x029E, r19	; 0x80029e <stick_state+0x5>
     52e:	20 93 9d 02 	sts	0x029D, r18	; 0x80029d <stick_state+0x4>
     532:	0e c0       	rjmp	.+28     	; 0x550 <get_stick_direction+0x40>
     534:	2e 3c       	cpi	r18, 0xCE	; 206
     536:	3f 4f       	sbci	r19, 0xFF	; 255
     538:	3c f4       	brge	.+14     	; 0x548 <get_stick_direction+0x38>
     53a:	22 e0       	ldi	r18, 0x02	; 2
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	30 93 9e 02 	sts	0x029E, r19	; 0x80029e <stick_state+0x5>
     542:	20 93 9d 02 	sts	0x029D, r18	; 0x80029d <stick_state+0x4>
     546:	04 c0       	rjmp	.+8      	; 0x550 <get_stick_direction+0x40>
     548:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <stick_state+0x5>
     54c:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <stick_state+0x4>
     550:	83 33       	cpi	r24, 0x33	; 51
     552:	91 05       	cpc	r25, r1
     554:	3c f0       	brlt	.+14     	; 0x564 <get_stick_direction+0x54>
     556:	81 e0       	ldi	r24, 0x01	; 1
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	90 93 a0 02 	sts	0x02A0, r25	; 0x8002a0 <stick_state+0x7>
     55e:	80 93 9f 02 	sts	0x029F, r24	; 0x80029f <stick_state+0x6>
     562:	08 95       	ret
     564:	8e 3c       	cpi	r24, 0xCE	; 206
     566:	9f 4f       	sbci	r25, 0xFF	; 255
     568:	3c f4       	brge	.+14     	; 0x578 <get_stick_direction+0x68>
     56a:	84 e0       	ldi	r24, 0x04	; 4
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	90 93 a0 02 	sts	0x02A0, r25	; 0x8002a0 <stick_state+0x7>
     572:	80 93 9f 02 	sts	0x029F, r24	; 0x80029f <stick_state+0x6>
     576:	08 95       	ret
     578:	10 92 a0 02 	sts	0x02A0, r1	; 0x8002a0 <stick_state+0x7>
     57c:	10 92 9f 02 	sts	0x029F, r1	; 0x80029f <stick_state+0x6>
     580:	08 95       	ret

00000582 <poll_new_readings>:
     582:	0f 93       	push	r16
     584:	1f 93       	push	r17
     586:	cf 93       	push	r28
     588:	df 93       	push	r29
     58a:	cd b7       	in	r28, 0x3d	; 61
     58c:	de b7       	in	r29, 0x3e	; 62
     58e:	2a 97       	sbiw	r28, 0x0a	; 10
     590:	0f b6       	in	r0, 0x3f	; 63
     592:	f8 94       	cli
     594:	de bf       	out	0x3e, r29	; 62
     596:	0f be       	out	0x3f, r0	; 63
     598:	cd bf       	out	0x3d, r28	; 61
     59a:	0e 94 24 02 	call	0x448	; 0x448 <get_stick_state>
     59e:	20 91 99 02 	lds	r18, 0x0299	; 0x800299 <stick_state>
     5a2:	30 91 9a 02 	lds	r19, 0x029A	; 0x80029a <stick_state+0x1>
     5a6:	80 91 8b 02 	lds	r24, 0x028B	; 0x80028b <previous_x>
     5aa:	90 91 8c 02 	lds	r25, 0x028C	; 0x80028c <previous_x+0x1>
     5ae:	28 17       	cp	r18, r24
     5b0:	39 07       	cpc	r19, r25
     5b2:	09 f5       	brne	.+66     	; 0x5f6 <poll_new_readings+0x74>
     5b4:	40 91 9b 02 	lds	r20, 0x029B	; 0x80029b <stick_state+0x2>
     5b8:	50 91 9c 02 	lds	r21, 0x029C	; 0x80029c <stick_state+0x3>
     5bc:	80 91 a1 02 	lds	r24, 0x02A1	; 0x8002a1 <previous_y>
     5c0:	90 91 a2 02 	lds	r25, 0x02A2	; 0x8002a2 <previous_y+0x1>
     5c4:	48 17       	cp	r20, r24
     5c6:	59 07       	cpc	r21, r25
     5c8:	b1 f4       	brne	.+44     	; 0x5f6 <poll_new_readings+0x74>
     5ca:	40 91 a7 02 	lds	r20, 0x02A7	; 0x8002a7 <ADC_states+0x4>
     5ce:	50 91 a8 02 	lds	r21, 0x02A8	; 0x8002a8 <ADC_states+0x5>
     5d2:	80 91 8d 02 	lds	r24, 0x028D	; 0x80028d <previous_right>
     5d6:	90 91 8e 02 	lds	r25, 0x028E	; 0x80028e <previous_right+0x1>
     5da:	48 17       	cp	r20, r24
     5dc:	59 07       	cpc	r21, r25
     5de:	59 f4       	brne	.+22     	; 0x5f6 <poll_new_readings+0x74>
     5e0:	40 91 a9 02 	lds	r20, 0x02A9	; 0x8002a9 <ADC_states+0x6>
     5e4:	50 91 aa 02 	lds	r21, 0x02AA	; 0x8002aa <ADC_states+0x7>
     5e8:	80 91 89 02 	lds	r24, 0x0289	; 0x800289 <previous_left>
     5ec:	90 91 8a 02 	lds	r25, 0x028A	; 0x80028a <previous_left+0x1>
     5f0:	48 17       	cp	r20, r24
     5f2:	59 07       	cpc	r21, r25
     5f4:	f1 f0       	breq	.+60     	; 0x632 <poll_new_readings+0xb0>
     5f6:	81 e0       	ldi	r24, 0x01	; 1
     5f8:	89 83       	std	Y+1, r24	; 0x01
     5fa:	84 e0       	ldi	r24, 0x04	; 4
     5fc:	8a 83       	std	Y+2, r24	; 0x02
     5fe:	2c 59       	subi	r18, 0x9C	; 156
     600:	2b 83       	std	Y+3, r18	; 0x03
     602:	30 91 9b 02 	lds	r19, 0x029B	; 0x80029b <stick_state+0x2>
     606:	3c 59       	subi	r19, 0x9C	; 156
     608:	3c 83       	std	Y+4, r19	; 0x04
     60a:	e3 ea       	ldi	r30, 0xA3	; 163
     60c:	f2 e0       	ldi	r31, 0x02	; 2
     60e:	44 81       	ldd	r20, Z+4	; 0x04
     610:	4d 83       	std	Y+5, r20	; 0x05
     612:	56 81       	ldd	r21, Z+6	; 0x06
     614:	5e 83       	std	Y+6, r21	; 0x06
     616:	01 e0       	ldi	r16, 0x01	; 1
     618:	14 e0       	ldi	r17, 0x04	; 4
     61a:	6f 81       	ldd	r22, Y+7	; 0x07
     61c:	78 85       	ldd	r23, Y+8	; 0x08
     61e:	89 85       	ldd	r24, Y+9	; 0x09
     620:	9a 85       	ldd	r25, Y+10	; 0x0a
     622:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <CAN_write_message>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     626:	87 ea       	ldi	r24, 0xA7	; 167
     628:	91 e6       	ldi	r25, 0x61	; 97
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <poll_new_readings+0xa8>
     62e:	00 c0       	rjmp	.+0      	; 0x630 <poll_new_readings+0xae>
     630:	00 00       	nop
     632:	e9 e9       	ldi	r30, 0x99	; 153
     634:	f2 e0       	ldi	r31, 0x02	; 2
     636:	80 81       	ld	r24, Z
     638:	91 81       	ldd	r25, Z+1	; 0x01
     63a:	90 93 8c 02 	sts	0x028C, r25	; 0x80028c <previous_x+0x1>
     63e:	80 93 8b 02 	sts	0x028B, r24	; 0x80028b <previous_x>
     642:	82 81       	ldd	r24, Z+2	; 0x02
     644:	93 81       	ldd	r25, Z+3	; 0x03
     646:	90 93 a2 02 	sts	0x02A2, r25	; 0x8002a2 <previous_y+0x1>
     64a:	80 93 a1 02 	sts	0x02A1, r24	; 0x8002a1 <previous_y>
     64e:	e3 ea       	ldi	r30, 0xA3	; 163
     650:	f2 e0       	ldi	r31, 0x02	; 2
     652:	84 81       	ldd	r24, Z+4	; 0x04
     654:	95 81       	ldd	r25, Z+5	; 0x05
     656:	90 93 8e 02 	sts	0x028E, r25	; 0x80028e <previous_right+0x1>
     65a:	80 93 8d 02 	sts	0x028D, r24	; 0x80028d <previous_right>
     65e:	86 81       	ldd	r24, Z+6	; 0x06
     660:	97 81       	ldd	r25, Z+7	; 0x07
     662:	90 93 8a 02 	sts	0x028A, r25	; 0x80028a <previous_left+0x1>
     666:	80 93 89 02 	sts	0x0289, r24	; 0x800289 <previous_left>
     66a:	2a 96       	adiw	r28, 0x0a	; 10
     66c:	0f b6       	in	r0, 0x3f	; 63
     66e:	f8 94       	cli
     670:	de bf       	out	0x3e, r29	; 62
     672:	0f be       	out	0x3f, r0	; 63
     674:	cd bf       	out	0x3d, r28	; 61
     676:	df 91       	pop	r29
     678:	cf 91       	pop	r28
     67a:	1f 91       	pop	r17
     67c:	0f 91       	pop	r16
     67e:	08 95       	ret

00000680 <CAN_read>:
	PORTB &= ~(1 << CAN_CS ); // Select CAN - controller
	SPI_transmit( MCP_CANSTAT ); // Read status
	received = SPI_transmit(0xff);
	PORTB |= (1 << CAN_CS ); // Deselect CAN - controller
	return received;
}
     680:	cf 93       	push	r28
     682:	c8 2f       	mov	r28, r24
     684:	88 b3       	in	r24, 0x18	; 24
     686:	8f 7e       	andi	r24, 0xEF	; 239
     688:	88 bb       	out	0x18, r24	; 24
     68a:	83 e0       	ldi	r24, 0x03	; 3
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <SPI_write>
     692:	8c 2f       	mov	r24, r28
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <SPI_write>
     69a:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <SPI_read>
     69e:	98 b3       	in	r25, 0x18	; 24
     6a0:	90 61       	ori	r25, 0x10	; 16
     6a2:	98 bb       	out	0x18, r25	; 24
     6a4:	cf 91       	pop	r28
     6a6:	08 95       	ret

000006a8 <CAN_write>:
     6a8:	cf 93       	push	r28
     6aa:	df 93       	push	r29
     6ac:	d8 2f       	mov	r29, r24
     6ae:	c6 2f       	mov	r28, r22
     6b0:	88 b3       	in	r24, 0x18	; 24
     6b2:	8f 7e       	andi	r24, 0xEF	; 239
     6b4:	88 bb       	out	0x18, r24	; 24
     6b6:	82 e0       	ldi	r24, 0x02	; 2
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <SPI_write>
     6be:	8d 2f       	mov	r24, r29
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <SPI_write>
     6c6:	8c 2f       	mov	r24, r28
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <SPI_write>
     6ce:	88 b3       	in	r24, 0x18	; 24
     6d0:	80 61       	ori	r24, 0x10	; 16
     6d2:	88 bb       	out	0x18, r24	; 24
     6d4:	df 91       	pop	r29
     6d6:	cf 91       	pop	r28
     6d8:	08 95       	ret

000006da <CAN_request_to_send>:
     6da:	87 70       	andi	r24, 0x07	; 7
     6dc:	98 b3       	in	r25, 0x18	; 24
     6de:	9f 7e       	andi	r25, 0xEF	; 239
     6e0:	98 bb       	out	0x18, r25	; 24
     6e2:	80 68       	ori	r24, 0x80	; 128
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <SPI_write>
     6ea:	88 b3       	in	r24, 0x18	; 24
     6ec:	80 61       	ori	r24, 0x10	; 16
     6ee:	88 bb       	out	0x18, r24	; 24
     6f0:	08 95       	ret

000006f2 <CAN_bit_modify>:
     6f2:	1f 93       	push	r17
     6f4:	cf 93       	push	r28
     6f6:	df 93       	push	r29
     6f8:	18 2f       	mov	r17, r24
     6fa:	d6 2f       	mov	r29, r22
     6fc:	c4 2f       	mov	r28, r20
     6fe:	88 b3       	in	r24, 0x18	; 24
     700:	8f 7e       	andi	r24, 0xEF	; 239
     702:	88 bb       	out	0x18, r24	; 24
     704:	85 e0       	ldi	r24, 0x05	; 5
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <SPI_write>
     70c:	81 2f       	mov	r24, r17
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <SPI_write>
     714:	8d 2f       	mov	r24, r29
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <SPI_write>
     71c:	8c 2f       	mov	r24, r28
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <SPI_write>
     724:	88 b3       	in	r24, 0x18	; 24
     726:	80 61       	ori	r24, 0x10	; 16
     728:	88 bb       	out	0x18, r24	; 24
     72a:	df 91       	pop	r29
     72c:	cf 91       	pop	r28
     72e:	1f 91       	pop	r17
     730:	08 95       	ret

00000732 <CAN_reset>:
     732:	88 b3       	in	r24, 0x18	; 24
     734:	8f 7e       	andi	r24, 0xEF	; 239
     736:	88 bb       	out	0x18, r24	; 24
     738:	80 ec       	ldi	r24, 0xC0	; 192
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <SPI_write>
     740:	88 b3       	in	r24, 0x18	; 24
     742:	80 61       	ori	r24, 0x10	; 16
     744:	88 bb       	out	0x18, r24	; 24
     746:	08 95       	ret

00000748 <CAN_init>:
     748:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <SPI_init>
     74c:	0e 94 99 03 	call	0x732	; 0x732 <CAN_reset>
     750:	8e e0       	ldi	r24, 0x0E	; 14
     752:	0e 94 40 03 	call	0x680	; 0x680 <CAN_read>
     756:	80 7e       	andi	r24, 0xE0	; 224
     758:	80 38       	cpi	r24, 0x80	; 128
     75a:	31 f0       	breq	.+12     	; 0x768 <CAN_init+0x20>
     75c:	86 e0       	ldi	r24, 0x06	; 6
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	0e 94 12 0c 	call	0x1824	; 0x1824 <puts>
     764:	81 e0       	ldi	r24, 0x01	; 1
     766:	08 95       	ret
     768:	43 e8       	ldi	r20, 0x83	; 131
     76a:	6f ef       	ldi	r22, 0xFF	; 255
     76c:	8a e2       	ldi	r24, 0x2A	; 42
     76e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     772:	49 ef       	ldi	r20, 0xF9	; 249
     774:	6f ef       	ldi	r22, 0xFF	; 255
     776:	89 e2       	ldi	r24, 0x29	; 41
     778:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     77c:	47 e0       	ldi	r20, 0x07	; 7
     77e:	67 ec       	ldi	r22, 0xC7	; 199
     780:	88 e2       	ldi	r24, 0x28	; 40
     782:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     786:	40 e2       	ldi	r20, 0x20	; 32
     788:	60 e6       	ldi	r22, 0x60	; 96
     78a:	80 e6       	ldi	r24, 0x60	; 96
     78c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     790:	41 e0       	ldi	r20, 0x01	; 1
     792:	61 e0       	ldi	r22, 0x01	; 1
     794:	8b e2       	ldi	r24, 0x2B	; 43
     796:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     79a:	40 e0       	ldi	r20, 0x00	; 0
     79c:	60 ee       	ldi	r22, 0xE0	; 224
     79e:	8f e0       	ldi	r24, 0x0F	; 15
     7a0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>
     7a4:	80 e0       	ldi	r24, 0x00	; 0
     7a6:	08 95       	ret

000007a8 <CAN_write_message>:

CAN_write_message(struct Can_Message message){
     7a8:	ff 92       	push	r15
     7aa:	0f 93       	push	r16
     7ac:	1f 93       	push	r17
     7ae:	cf 93       	push	r28
     7b0:	df 93       	push	r29
     7b2:	cd b7       	in	r28, 0x3d	; 61
     7b4:	de b7       	in	r29, 0x3e	; 62
     7b6:	2a 97       	sbiw	r28, 0x0a	; 10
     7b8:	0f b6       	in	r0, 0x3f	; 63
     7ba:	f8 94       	cli
     7bc:	de bf       	out	0x3e, r29	; 62
     7be:	0f be       	out	0x3f, r0	; 63
     7c0:	cd bf       	out	0x3d, r28	; 61
     7c2:	09 83       	std	Y+1, r16	; 0x01
     7c4:	1a 83       	std	Y+2, r17	; 0x02
     7c6:	2b 83       	std	Y+3, r18	; 0x03
     7c8:	3c 83       	std	Y+4, r19	; 0x04
     7ca:	4d 83       	std	Y+5, r20	; 0x05
     7cc:	5e 83       	std	Y+6, r21	; 0x06
     7ce:	6f 83       	std	Y+7, r22	; 0x07
     7d0:	78 87       	std	Y+8, r23	; 0x08
     7d2:	89 87       	std	Y+9, r24	; 0x09
     7d4:	9a 87       	std	Y+10, r25	; 0x0a
	
	while ((CAN_read(MCP_TXB0CTRL) & (1<<3))){}
     7d6:	80 e3       	ldi	r24, 0x30	; 48
     7d8:	0e 94 40 03 	call	0x680	; 0x680 <CAN_read>
     7dc:	83 fd       	sbrc	r24, 3
     7de:	fb cf       	rjmp	.-10     	; 0x7d6 <CAN_write_message+0x2e>
	//TODO: Send id to two register, len to one, then data, then request to send.
	CAN_write(MCP_TXB0_ID_LOW, (message.id & 0x07) << 5);
     7e0:	19 81       	ldd	r17, Y+1	; 0x01
     7e2:	80 e2       	ldi	r24, 0x20	; 32
     7e4:	18 9f       	mul	r17, r24
     7e6:	b0 01       	movw	r22, r0
     7e8:	11 24       	eor	r1, r1
     7ea:	82 e3       	ldi	r24, 0x32	; 50
     7ec:	0e 94 54 03 	call	0x6a8	; 0x6a8 <CAN_write>
	
	CAN_write(MCP_TXB0_ID_HIGH, (message.id >> 3) & 0xFF );
     7f0:	61 2f       	mov	r22, r17
     7f2:	66 95       	lsr	r22
     7f4:	66 95       	lsr	r22
     7f6:	66 95       	lsr	r22
     7f8:	81 e3       	ldi	r24, 0x31	; 49
     7fa:	0e 94 54 03 	call	0x6a8	; 0x6a8 <CAN_write>
	
	
	//printf("%hd \r \n", (message.id << 5) & 0xFF);
	//printf("%hd \r \n", message.id >> 3);
	//printf("message length: %i \r \n", message.length);
	CAN_write(MCP_TXB0_LEN, message.length);
     7fe:	fa 80       	ldd	r15, Y+2	; 0x02
     800:	6f 2d       	mov	r22, r15
     802:	85 e3       	ldi	r24, 0x35	; 53
     804:	0e 94 54 03 	call	0x6a8	; 0x6a8 <CAN_write>
	
	for (int i = 0; i<message.length; i++){
     808:	00 e0       	ldi	r16, 0x00	; 0
     80a:	10 e0       	ldi	r17, 0x00	; 0
     80c:	13 c0       	rjmp	.+38     	; 0x834 <CAN_write_message+0x8c>
		CAN_write(MCP_TXB0_DATA + i, message.data[i]);
     80e:	e3 e0       	ldi	r30, 0x03	; 3
     810:	f0 e0       	ldi	r31, 0x00	; 0
     812:	ec 0f       	add	r30, r28
     814:	fd 1f       	adc	r31, r29
     816:	e0 0f       	add	r30, r16
     818:	f1 1f       	adc	r31, r17
     81a:	60 81       	ld	r22, Z
     81c:	86 e3       	ldi	r24, 0x36	; 54
     81e:	80 0f       	add	r24, r16
     820:	0e 94 54 03 	call	0x6a8	; 0x6a8 <CAN_write>
     824:	83 ec       	ldi	r24, 0xC3	; 195
     826:	99 e0       	ldi	r25, 0x09	; 9
     828:	01 97       	sbiw	r24, 0x01	; 1
     82a:	f1 f7       	brne	.-4      	; 0x828 <CAN_write_message+0x80>
     82c:	00 c0       	rjmp	.+0      	; 0x82e <CAN_write_message+0x86>
     82e:	00 00       	nop
	//printf("%hd \r \n", (message.id << 5) & 0xFF);
	//printf("%hd \r \n", message.id >> 3);
	//printf("message length: %i \r \n", message.length);
	CAN_write(MCP_TXB0_LEN, message.length);
	
	for (int i = 0; i<message.length; i++){
     830:	0f 5f       	subi	r16, 0xFF	; 255
     832:	1f 4f       	sbci	r17, 0xFF	; 255
     834:	8f 2d       	mov	r24, r15
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	08 17       	cp	r16, r24
     83a:	19 07       	cpc	r17, r25
     83c:	44 f3       	brlt	.-48     	; 0x80e <CAN_write_message+0x66>
		CAN_write(MCP_TXB0_DATA + i, message.data[i]);
		_delay_ms(10);
	}
	CAN_request_to_send(0x1);
     83e:	81 e0       	ldi	r24, 0x01	; 1
     840:	0e 94 6d 03 	call	0x6da	; 0x6da <CAN_request_to_send>
	
}
     844:	2a 96       	adiw	r28, 0x0a	; 10
     846:	0f b6       	in	r0, 0x3f	; 63
     848:	f8 94       	cli
     84a:	de bf       	out	0x3e, r29	; 62
     84c:	0f be       	out	0x3f, r0	; 63
     84e:	cd bf       	out	0x3d, r28	; 61
     850:	df 91       	pop	r29
     852:	cf 91       	pop	r28
     854:	1f 91       	pop	r17
     856:	0f 91       	pop	r16
     858:	ff 90       	pop	r15
     85a:	08 95       	ret

0000085c <CAN_read_message>:

struct Can_Message CAN_read_message(){
     85c:	ff 92       	push	r15
     85e:	0f 93       	push	r16
     860:	1f 93       	push	r17
     862:	cf 93       	push	r28
     864:	df 93       	push	r29
     866:	8c 01       	movw	r16, r24
     868:	83 ec       	ldi	r24, 0xC3	; 195
     86a:	99 e0       	ldi	r25, 0x09	; 9
     86c:	01 97       	sbiw	r24, 0x01	; 1
     86e:	f1 f7       	brne	.-4      	; 0x86c <CAN_read_message+0x10>
     870:	00 c0       	rjmp	.+0      	; 0x872 <CAN_read_message+0x16>
     872:	00 00       	nop
	
	
	struct Can_Message recieved_message;
	
	_delay_ms(10);
	recieved_message.length = CAN_read(MCP_RXB0_LEN) & 0x0F ;
     874:	85 e6       	ldi	r24, 0x65	; 101
     876:	0e 94 40 03 	call	0x680	; 0x680 <CAN_read>
     87a:	8f 70       	andi	r24, 0x0F	; 15
     87c:	f8 2e       	mov	r15, r24
     87e:	f8 01       	movw	r30, r16
     880:	81 83       	std	Z+1, r24	; 0x01
     882:	83 ec       	ldi	r24, 0xC3	; 195
     884:	99 e0       	ldi	r25, 0x09	; 9
     886:	01 97       	sbiw	r24, 0x01	; 1
     888:	f1 f7       	brne	.-4      	; 0x886 <CAN_read_message+0x2a>
     88a:	00 c0       	rjmp	.+0      	; 0x88c <CAN_read_message+0x30>
     88c:	00 00       	nop
	//recieved_message.length = CAN_read(MCP_RXB0_LEN) & 0x0F;
	
	_delay_ms(10);
	recieved_message.id = ((CAN_read(MCP_RXB0_ID_HIGH) << 3) | (CAN_read(MCP_RXB0_ID_LOW) >> 5)) & 0xFF;
     88e:	81 e6       	ldi	r24, 0x61	; 97
     890:	0e 94 40 03 	call	0x680	; 0x680 <CAN_read>
     894:	c8 2f       	mov	r28, r24
     896:	d0 e0       	ldi	r29, 0x00	; 0
     898:	cc 0f       	add	r28, r28
     89a:	dd 1f       	adc	r29, r29
     89c:	cc 0f       	add	r28, r28
     89e:	dd 1f       	adc	r29, r29
     8a0:	cc 0f       	add	r28, r28
     8a2:	dd 1f       	adc	r29, r29
     8a4:	82 e6       	ldi	r24, 0x62	; 98
     8a6:	0e 94 40 03 	call	0x680	; 0x680 <CAN_read>
     8aa:	82 95       	swap	r24
     8ac:	86 95       	lsr	r24
     8ae:	87 70       	andi	r24, 0x07	; 7
     8b0:	c8 2b       	or	r28, r24
     8b2:	f8 01       	movw	r30, r16
     8b4:	c0 83       	st	Z, r28
	//printf("received length: %x \n", recieved_message.length);
	
	for (int i = 0; i<recieved_message.length; i++){
     8b6:	c0 e0       	ldi	r28, 0x00	; 0
     8b8:	d0 e0       	ldi	r29, 0x00	; 0
     8ba:	0f c0       	rjmp	.+30     	; 0x8da <CAN_read_message+0x7e>
		recieved_message.data[i] = CAN_read(MCP_RXB0_DATA + i);
     8bc:	8c 2f       	mov	r24, r28
     8be:	8a 59       	subi	r24, 0x9A	; 154
     8c0:	0e 94 40 03 	call	0x680	; 0x680 <CAN_read>
     8c4:	f8 01       	movw	r30, r16
     8c6:	ec 0f       	add	r30, r28
     8c8:	fd 1f       	adc	r31, r29
     8ca:	82 83       	std	Z+2, r24	; 0x02
     8cc:	83 ec       	ldi	r24, 0xC3	; 195
     8ce:	99 e0       	ldi	r25, 0x09	; 9
     8d0:	01 97       	sbiw	r24, 0x01	; 1
     8d2:	f1 f7       	brne	.-4      	; 0x8d0 <CAN_read_message+0x74>
     8d4:	00 c0       	rjmp	.+0      	; 0x8d6 <CAN_read_message+0x7a>
     8d6:	00 00       	nop
	
	_delay_ms(10);
	recieved_message.id = ((CAN_read(MCP_RXB0_ID_HIGH) << 3) | (CAN_read(MCP_RXB0_ID_LOW) >> 5)) & 0xFF;
	//printf("received length: %x \n", recieved_message.length);
	
	for (int i = 0; i<recieved_message.length; i++){
     8d8:	21 96       	adiw	r28, 0x01	; 1
     8da:	8f 2d       	mov	r24, r15
     8dc:	90 e0       	ldi	r25, 0x00	; 0
     8de:	c8 17       	cp	r28, r24
     8e0:	d9 07       	cpc	r29, r25
     8e2:	64 f3       	brlt	.-40     	; 0x8bc <CAN_read_message+0x60>
		recieved_message.data[i] = CAN_read(MCP_RXB0_DATA + i);
		_delay_ms(10);
	}
	
	CAN_bit_modify(MCP_CANINTF, 0x01, 0x00);
     8e4:	40 e0       	ldi	r20, 0x00	; 0
     8e6:	61 e0       	ldi	r22, 0x01	; 1
     8e8:	8c e2       	ldi	r24, 0x2C	; 44
     8ea:	0e 94 79 03 	call	0x6f2	; 0x6f2 <CAN_bit_modify>

	
	return recieved_message;
     8ee:	c8 01       	movw	r24, r16
     8f0:	df 91       	pop	r29
     8f2:	cf 91       	pop	r28
     8f4:	1f 91       	pop	r17
     8f6:	0f 91       	pop	r16
     8f8:	ff 90       	pop	r15
     8fa:	08 95       	ret

000008fc <USART_Init>:
// Functions taken from ATmega datasheet, page 172-174

void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR1H = (unsigned char)(ubrr>>8);
     8fc:	9c bf       	out	0x3c, r25	; 60
	UBRR1L = (unsigned char)ubrr;
     8fe:	80 b9       	out	0x00, r24	; 0
	/* Enable receiver and transmitter */
	UCSR1B = (1<<RXEN1)|(1<<TXEN1);
     900:	88 e1       	ldi	r24, 0x18	; 24
     902:	81 b9       	out	0x01, r24	; 1
	/* Set frame format: 8data, 2stop bit */
	UCSR1C = (1<<URSEL1)|(1<<USBS1)|(3<<UCSZ10);
     904:	8e e8       	ldi	r24, 0x8E	; 142
     906:	8c bf       	out	0x3c, r24	; 60
     908:	08 95       	ret

0000090a <USART_Transmit>:
}

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR1A & (1<<UDRE1)) )
     90a:	15 9b       	sbis	0x02, 5	; 2
     90c:	fe cf       	rjmp	.-4      	; 0x90a <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR1 = data;
     90e:	83 b9       	out	0x03, r24	; 3
     910:	08 95       	ret

00000912 <USART_Receive>:
}

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR1A & (1<<RXC1)) )
     912:	17 9b       	sbis	0x02, 7	; 2
     914:	fe cf       	rjmp	.-4      	; 0x912 <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR1;
     916:	83 b1       	in	r24, 0x03	; 3
}
     918:	08 95       	ret

0000091a <update_game_time>:
		//TODO: UPDATE SCREEN
	}
}

void update_game_time(){
	Game_status.game_time = timer_read();
     91a:	0e 94 86 0b 	call	0x170c	; 0x170c <timer_read>
     91e:	e6 e2       	ldi	r30, 0x26	; 38
     920:	f3 e0       	ldi	r31, 0x03	; 3
     922:	82 83       	std	Z+2, r24	; 0x02
	if (Game_status.game_time > Game_status.max_time){
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	26 81       	ldd	r18, Z+6	; 0x06
     928:	37 81       	ldd	r19, Z+7	; 0x07
     92a:	28 17       	cp	r18, r24
     92c:	39 07       	cpc	r19, r25
     92e:	10 f4       	brcc	.+4      	; 0x934 <update_game_time+0x1a>
		game_loss();
     930:	0e 94 9b 04 	call	0x936	; 0x936 <game_loss>
     934:	08 95       	ret

00000936 <game_loss>:
	CAN_write_message(Game_start_message);
	
}


void game_loss(){
     936:	0f 93       	push	r16
     938:	1f 93       	push	r17
     93a:	cf 93       	push	r28
     93c:	df 93       	push	r29
     93e:	cd b7       	in	r28, 0x3d	; 61
     940:	de b7       	in	r29, 0x3e	; 62
     942:	2a 97       	sbiw	r28, 0x0a	; 10
     944:	0f b6       	in	r0, 0x3f	; 63
     946:	f8 94       	cli
     948:	de bf       	out	0x3e, r29	; 62
     94a:	0f be       	out	0x3f, r0	; 63
     94c:	cd bf       	out	0x3d, r28	; 61
	update_game_time();
     94e:	0e 94 8d 04 	call	0x91a	; 0x91a <update_game_time>
	Game_status.in_game = false;
     952:	10 92 26 03 	sts	0x0326, r1	; 0x800326 <Game_status>
	struct Can_Message Game_stop_message;
	Game_stop_message.id = 4;
	Game_stop_message.length = 1;
	Game_stop_message.data[0] = 0;
	CAN_write_message(Game_stop_message);
     956:	04 e0       	ldi	r16, 0x04	; 4
     958:	11 e0       	ldi	r17, 0x01	; 1
     95a:	20 e0       	ldi	r18, 0x00	; 0
     95c:	3c 81       	ldd	r19, Y+4	; 0x04
     95e:	4d 81       	ldd	r20, Y+5	; 0x05
     960:	5e 81       	ldd	r21, Y+6	; 0x06
     962:	6f 81       	ldd	r22, Y+7	; 0x07
     964:	78 85       	ldd	r23, Y+8	; 0x08
     966:	89 85       	ldd	r24, Y+9	; 0x09
     968:	9a 85       	ldd	r25, Y+10	; 0x0a
     96a:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <CAN_write_message>
	
	//TODO: Set Menu screen to lose screen, show stats.
	
}
     96e:	2a 96       	adiw	r28, 0x0a	; 10
     970:	0f b6       	in	r0, 0x3f	; 63
     972:	f8 94       	cli
     974:	de bf       	out	0x3e, r29	; 62
     976:	0f be       	out	0x3f, r0	; 63
     978:	cd bf       	out	0x3d, r28	; 61
     97a:	df 91       	pop	r29
     97c:	cf 91       	pop	r28
     97e:	1f 91       	pop	r17
     980:	0f 91       	pop	r16
     982:	08 95       	ret

00000984 <update_game_score>:

void update_game_score(int score){
	
	if (Game_status.game_mode == ARCADE) {
     984:	80 91 29 03 	lds	r24, 0x0329	; 0x800329 <Game_status+0x3>
     988:	81 11       	cpse	r24, r1
     98a:	02 c0       	rjmp	.+4      	; 0x990 <update_game_score+0xc>
		
		game_loss();
     98c:	0e 94 9b 04 	call	0x936	; 0x936 <game_loss>
	}
	if (Game_status.game_mode == STANDARD) {
     990:	80 91 29 03 	lds	r24, 0x0329	; 0x800329 <Game_status+0x3>
     994:	81 30       	cpi	r24, 0x01	; 1
     996:	29 f4       	brne	.+10     	; 0x9a2 <update_game_score+0x1e>
		
		Game_status.score ++;
     998:	e6 e2       	ldi	r30, 0x26	; 38
     99a:	f3 e0       	ldi	r31, 0x03	; 3
     99c:	81 81       	ldd	r24, Z+1	; 0x01
     99e:	8f 5f       	subi	r24, 0xFF	; 255
     9a0:	81 83       	std	Z+1, r24	; 0x01
     9a2:	08 95       	ret

000009a4 <interrupt_init>:
     9a4:	f8 94       	cli
     9a6:	20 b3       	in	r18, 0x10	; 16
     9a8:	81 e0       	ldi	r24, 0x01	; 1
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	ac 01       	movw	r20, r24
     9ae:	02 c0       	rjmp	.+4      	; 0x9b4 <interrupt_init+0x10>
     9b0:	44 0f       	add	r20, r20
     9b2:	55 1f       	adc	r21, r21
     9b4:	2a 95       	dec	r18
     9b6:	e2 f7       	brpl	.-8      	; 0x9b0 <interrupt_init+0xc>
     9b8:	9a 01       	movw	r18, r20
     9ba:	20 95       	com	r18
     9bc:	30 95       	com	r19
     9be:	40 b3       	in	r20, 0x10	; 16
     9c0:	02 c0       	rjmp	.+4      	; 0x9c6 <interrupt_init+0x22>
     9c2:	88 0f       	add	r24, r24
     9c4:	99 1f       	adc	r25, r25
     9c6:	4a 95       	dec	r20
     9c8:	e2 f7       	brpl	.-8      	; 0x9c2 <interrupt_init+0x1e>
     9ca:	82 2b       	or	r24, r18
     9cc:	93 2b       	or	r25, r19
     9ce:	91 b3       	in	r25, 0x11	; 17
     9d0:	89 23       	and	r24, r25
     9d2:	81 bb       	out	0x11, r24	; 17
     9d4:	86 b1       	in	r24, 0x06	; 6
     9d6:	8e 7f       	andi	r24, 0xFE	; 254
     9d8:	86 b9       	out	0x06, r24	; 6
     9da:	87 b1       	in	r24, 0x07	; 7
     9dc:	81 60       	ori	r24, 0x01	; 1
     9de:	87 b9       	out	0x07, r24	; 7
     9e0:	85 b7       	in	r24, 0x35	; 53
     9e2:	80 68       	ori	r24, 0x80	; 128
     9e4:	85 bf       	out	0x35, r24	; 53
     9e6:	85 b7       	in	r24, 0x35	; 53
     9e8:	8f 60       	ori	r24, 0x0F	; 15
     9ea:	85 bf       	out	0x35, r24	; 53
     9ec:	86 b7       	in	r24, 0x36	; 54
     9ee:	86 bf       	out	0x36, r24	; 54
     9f0:	8b b7       	in	r24, 0x3b	; 59
     9f2:	80 6e       	ori	r24, 0xE0	; 224
     9f4:	8b bf       	out	0x3b, r24	; 59
     9f6:	78 94       	sei
     9f8:	08 95       	ret

000009fa <__vector_1>:
bool neutral_check = false;
// #define different id values

struct Can_Message can_message_buttons;

ISR(INT0_vect){
     9fa:	1f 92       	push	r1
     9fc:	0f 92       	push	r0
     9fe:	0f b6       	in	r0, 0x3f	; 63
     a00:	0f 92       	push	r0
     a02:	11 24       	eor	r1, r1
     a04:	8f 93       	push	r24
	//printf("\r\nRight button\r\n");

	right_button = true;
     a06:	81 e0       	ldi	r24, 0x01	; 1
     a08:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <right_button>
	
	//Change_page();
	//OLED_reset();
	//Game_Modes_Menu();
	//_delay_ms(100);
}
     a0c:	8f 91       	pop	r24
     a0e:	0f 90       	pop	r0
     a10:	0f be       	out	0x3f, r0	; 63
     a12:	0f 90       	pop	r0
     a14:	1f 90       	pop	r1
     a16:	18 95       	reti

00000a18 <__vector_2>:
ISR(INT1_vect){
     a18:	1f 92       	push	r1
     a1a:	0f 92       	push	r0
     a1c:	0f b6       	in	r0, 0x3f	; 63
     a1e:	0f 92       	push	r0
     a20:	11 24       	eor	r1, r1
     a22:	0f 93       	push	r16
     a24:	1f 93       	push	r17
     a26:	2f 93       	push	r18
     a28:	3f 93       	push	r19
     a2a:	4f 93       	push	r20
     a2c:	5f 93       	push	r21
     a2e:	6f 93       	push	r22
     a30:	7f 93       	push	r23
     a32:	8f 93       	push	r24
     a34:	9f 93       	push	r25
     a36:	af 93       	push	r26
     a38:	bf 93       	push	r27
     a3a:	ef 93       	push	r30
     a3c:	ff 93       	push	r31
	//printf("\r\nLeft button\r\n");
	if(Game_status.in_game){
     a3e:	80 91 26 03 	lds	r24, 0x0326	; 0x800326 <Game_status>
     a42:	88 23       	and	r24, r24
     a44:	c9 f0       	breq	.+50     	; 0xa78 <__vector_2+0x60>
		can_message_buttons.data[0] = 1;
     a46:	81 e0       	ldi	r24, 0x01	; 1
     a48:	28 2f       	mov	r18, r24
     a4a:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <can_message_buttons+0x2>
		CAN_write_message(can_message_buttons);
     a4e:	00 91 a7 03 	lds	r16, 0x03A7	; 0x8003a7 <can_message_buttons>
     a52:	10 91 a8 03 	lds	r17, 0x03A8	; 0x8003a8 <can_message_buttons+0x1>
     a56:	30 91 aa 03 	lds	r19, 0x03AA	; 0x8003aa <can_message_buttons+0x3>
     a5a:	40 91 ab 03 	lds	r20, 0x03AB	; 0x8003ab <can_message_buttons+0x4>
     a5e:	50 91 ac 03 	lds	r21, 0x03AC	; 0x8003ac <can_message_buttons+0x5>
     a62:	60 91 ad 03 	lds	r22, 0x03AD	; 0x8003ad <can_message_buttons+0x6>
     a66:	70 91 ae 03 	lds	r23, 0x03AE	; 0x8003ae <can_message_buttons+0x7>
     a6a:	80 91 af 03 	lds	r24, 0x03AF	; 0x8003af <can_message_buttons+0x8>
     a6e:	90 91 b0 03 	lds	r25, 0x03B0	; 0x8003b0 <can_message_buttons+0x9>
     a72:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <CAN_write_message>
     a76:	03 c0       	rjmp	.+6      	; 0xa7e <__vector_2+0x66>
	}
	else{
		left_button = true;
     a78:	81 e0       	ldi	r24, 0x01	; 1
     a7a:	80 93 7d 02 	sts	0x027D, r24	; 0x80027d <left_button>
	}
}
     a7e:	ff 91       	pop	r31
     a80:	ef 91       	pop	r30
     a82:	bf 91       	pop	r27
     a84:	af 91       	pop	r26
     a86:	9f 91       	pop	r25
     a88:	8f 91       	pop	r24
     a8a:	7f 91       	pop	r23
     a8c:	6f 91       	pop	r22
     a8e:	5f 91       	pop	r21
     a90:	4f 91       	pop	r20
     a92:	3f 91       	pop	r19
     a94:	2f 91       	pop	r18
     a96:	1f 91       	pop	r17
     a98:	0f 91       	pop	r16
     a9a:	0f 90       	pop	r0
     a9c:	0f be       	out	0x3f, r0	; 63
     a9e:	0f 90       	pop	r0
     aa0:	1f 90       	pop	r1
     aa2:	18 95       	reti

00000aa4 <__vector_3>:
ISR(INT2_vect){
     aa4:	1f 92       	push	r1
     aa6:	0f 92       	push	r0
     aa8:	0f b6       	in	r0, 0x3f	; 63
     aaa:	0f 92       	push	r0
     aac:	11 24       	eor	r1, r1
     aae:	cf 92       	push	r12
     ab0:	df 92       	push	r13
     ab2:	ff 92       	push	r15
     ab4:	0f 93       	push	r16
     ab6:	1f 93       	push	r17
     ab8:	2f 93       	push	r18
     aba:	3f 93       	push	r19
     abc:	4f 93       	push	r20
     abe:	5f 93       	push	r21
     ac0:	6f 93       	push	r22
     ac2:	7f 93       	push	r23
     ac4:	8f 93       	push	r24
     ac6:	9f 93       	push	r25
     ac8:	af 93       	push	r26
     aca:	bf 93       	push	r27
     acc:	ef 93       	push	r30
     ace:	ff 93       	push	r31
     ad0:	cf 93       	push	r28
     ad2:	df 93       	push	r29
     ad4:	cd b7       	in	r28, 0x3d	; 61
     ad6:	de b7       	in	r29, 0x3e	; 62
     ad8:	2a 97       	sbiw	r28, 0x0a	; 10
     ada:	de bf       	out	0x3e, r29	; 62
     adc:	cd bf       	out	0x3d, r28	; 61
     ade:	87 ea       	ldi	r24, 0xA7	; 167
     ae0:	91 e6       	ldi	r25, 0x61	; 97
     ae2:	01 97       	sbiw	r24, 0x01	; 1
     ae4:	f1 f7       	brne	.-4      	; 0xae2 <__vector_3+0x3e>
     ae6:	00 c0       	rjmp	.+0      	; 0xae8 <__vector_3+0x44>
     ae8:	00 00       	nop
	//printf("\r\n Element %u", OLED_contents.menu_index);
	
	_delay_ms(100);
	struct Can_Message rec_message = CAN_read_message();
     aea:	ce 01       	movw	r24, r28
     aec:	01 96       	adiw	r24, 0x01	; 1
     aee:	0e 94 2e 04 	call	0x85c	; 0x85c <CAN_read_message>
	if(rec_message.id != 0 & rec_message.id < 31){
     af2:	f9 80       	ldd	r15, Y+1	; 0x01
     af4:	8f ef       	ldi	r24, 0xFF	; 255
     af6:	8f 0d       	add	r24, r15
     af8:	8e 31       	cpi	r24, 0x1E	; 30
     afa:	a0 f5       	brcc	.+104    	; 0xb64 <__vector_3+0xc0>
		//printf("len: %i, id: %i, data: %i \r \n", rec_message.length, rec_message.id, rec_message.data[4]);
		printf("len: %i, id: %i \r \n", rec_message.length, rec_message.id);
     afc:	8a 81       	ldd	r24, Y+2	; 0x02
     afe:	c8 2e       	mov	r12, r24
     b00:	d1 2c       	mov	r13, r1
     b02:	1f 92       	push	r1
     b04:	ff 92       	push	r15
     b06:	1f 92       	push	r1
     b08:	8f 93       	push	r24
     b0a:	8a e3       	ldi	r24, 0x3A	; 58
     b0c:	91 e0       	ldi	r25, 0x01	; 1
     b0e:	9f 93       	push	r25
     b10:	8f 93       	push	r24
     b12:	0e 94 fc 0b 	call	0x17f8	; 0x17f8 <printf>
		for (int i = 0; i < rec_message.length; i++){
     b16:	0f 90       	pop	r0
     b18:	0f 90       	pop	r0
     b1a:	0f 90       	pop	r0
     b1c:	0f 90       	pop	r0
     b1e:	0f 90       	pop	r0
     b20:	0f 90       	pop	r0
     b22:	00 e0       	ldi	r16, 0x00	; 0
     b24:	10 e0       	ldi	r17, 0x00	; 0
     b26:	1b c0       	rjmp	.+54     	; 0xb5e <__vector_3+0xba>
			printf("DATA: %i \r \n", rec_message.data[i]);
     b28:	e3 e0       	ldi	r30, 0x03	; 3
     b2a:	f0 e0       	ldi	r31, 0x00	; 0
     b2c:	ec 0f       	add	r30, r28
     b2e:	fd 1f       	adc	r31, r29
     b30:	e0 0f       	add	r30, r16
     b32:	f1 1f       	adc	r31, r17
     b34:	80 81       	ld	r24, Z
     b36:	1f 92       	push	r1
     b38:	8f 93       	push	r24
     b3a:	8e e4       	ldi	r24, 0x4E	; 78
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	9f 93       	push	r25
     b40:	8f 93       	push	r24
     b42:	0e 94 fc 0b 	call	0x17f8	; 0x17f8 <printf>
     b46:	83 ec       	ldi	r24, 0xC3	; 195
     b48:	99 e0       	ldi	r25, 0x09	; 9
     b4a:	01 97       	sbiw	r24, 0x01	; 1
     b4c:	f1 f7       	brne	.-4      	; 0xb4a <__vector_3+0xa6>
     b4e:	00 c0       	rjmp	.+0      	; 0xb50 <__vector_3+0xac>
     b50:	00 00       	nop
	_delay_ms(100);
	struct Can_Message rec_message = CAN_read_message();
	if(rec_message.id != 0 & rec_message.id < 31){
		//printf("len: %i, id: %i, data: %i \r \n", rec_message.length, rec_message.id, rec_message.data[4]);
		printf("len: %i, id: %i \r \n", rec_message.length, rec_message.id);
		for (int i = 0; i < rec_message.length; i++){
     b52:	0f 5f       	subi	r16, 0xFF	; 255
     b54:	1f 4f       	sbci	r17, 0xFF	; 255
     b56:	0f 90       	pop	r0
     b58:	0f 90       	pop	r0
     b5a:	0f 90       	pop	r0
     b5c:	0f 90       	pop	r0
     b5e:	0c 15       	cp	r16, r12
     b60:	1d 05       	cpc	r17, r13
     b62:	14 f3       	brlt	.-60     	; 0xb28 <__vector_3+0x84>
			printf("DATA: %i \r \n", rec_message.data[i]);
			_delay_ms(10);
		}
	}
	
	if (rec_message.id == 4){
     b64:	94 e0       	ldi	r25, 0x04	; 4
     b66:	f9 12       	cpse	r15, r25
     b68:	03 c0       	rjmp	.+6      	; 0xb70 <__vector_3+0xcc>
		Game_status.in_game = true;
     b6a:	81 e0       	ldi	r24, 0x01	; 1
     b6c:	80 93 26 03 	sts	0x0326, r24	; 0x800326 <Game_status>
	}
	if (rec_message.id == 5){
     b70:	85 e0       	ldi	r24, 0x05	; 5
     b72:	f8 12       	cpse	r15, r24
     b74:	04 c0       	rjmp	.+8      	; 0xb7e <__vector_3+0xda>
		update_game_score(rec_message.data[0]);
     b76:	8b 81       	ldd	r24, Y+3	; 0x03
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	0e 94 c2 04 	call	0x984	; 0x984 <update_game_score>
	}
	
}
     b7e:	2a 96       	adiw	r28, 0x0a	; 10
     b80:	0f b6       	in	r0, 0x3f	; 63
     b82:	f8 94       	cli
     b84:	de bf       	out	0x3e, r29	; 62
     b86:	0f be       	out	0x3f, r0	; 63
     b88:	cd bf       	out	0x3d, r28	; 61
     b8a:	df 91       	pop	r29
     b8c:	cf 91       	pop	r28
     b8e:	ff 91       	pop	r31
     b90:	ef 91       	pop	r30
     b92:	bf 91       	pop	r27
     b94:	af 91       	pop	r26
     b96:	9f 91       	pop	r25
     b98:	8f 91       	pop	r24
     b9a:	7f 91       	pop	r23
     b9c:	6f 91       	pop	r22
     b9e:	5f 91       	pop	r21
     ba0:	4f 91       	pop	r20
     ba2:	3f 91       	pop	r19
     ba4:	2f 91       	pop	r18
     ba6:	1f 91       	pop	r17
     ba8:	0f 91       	pop	r16
     baa:	ff 90       	pop	r15
     bac:	df 90       	pop	r13
     bae:	cf 90       	pop	r12
     bb0:	0f 90       	pop	r0
     bb2:	0f be       	out	0x3f, r0	; 63
     bb4:	0f 90       	pop	r0
     bb6:	1f 90       	pop	r1
     bb8:	18 95       	reti

00000bba <main>:


int main(void)
{

	USART_Init(31);
     bba:	8f e1       	ldi	r24, 0x1F	; 31
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	0e 94 7e 04 	call	0x8fc	; 0x8fc <USART_Init>
	fdevopen(USART_Transmit, USART_Receive);
     bc2:	69 e8       	ldi	r22, 0x89	; 137
     bc4:	74 e0       	ldi	r23, 0x04	; 4
     bc6:	85 e8       	ldi	r24, 0x85	; 133
     bc8:	94 e0       	ldi	r25, 0x04	; 4
     bca:	0e 94 b1 0b 	call	0x1762	; 0x1762 <fdevopen>
	adc_init();
     bce:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <adc_init>
	interrupt_init();
     bd2:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <interrupt_init>
	
	SFIOR |= (1 << XMM0 ); // mask unused bits for DATABUS
     bd6:	80 b7       	in	r24, 0x30	; 48
     bd8:	88 60       	ori	r24, 0x08	; 8
     bda:	80 bf       	out	0x30, r24	; 48
	
	adc_calibrate();
     bdc:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <adc_calibrate>
	OLED_init();
     be0:	0e 94 76 0a 	call	0x14ec	; 0x14ec <OLED_init>
	OLED_reset();
     be4:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
	
	CAN_init();
     be8:	0e 94 a4 03 	call	0x748	; 0x748 <CAN_init>
	
	flag_init();
     bec:	0e 94 29 06 	call	0xc52	; 0xc52 <flag_init>
	
	timer_init();
     bf0:	0e 94 82 0b 	call	0x1704	; 0x1704 <timer_init>
	
	Main_menu();
     bf4:	0e 94 9e 08 	call	0x113c	; 0x113c <Main_menu>

	Game_status.in_game = false;
     bf8:	10 92 26 03 	sts	0x0326, r1	; 0x800326 <Game_status>
	struct Can_Message can_message; //DEBUG TEST MESSAGE
	can_message.id = id_joystick_slider;
	can_message.length = lenght_joystick_slider;
	
	can_message_buttons.id = id_buttons;
     bfc:	e7 ea       	ldi	r30, 0xA7	; 167
     bfe:	f3 e0       	ldi	r31, 0x03	; 3
     c00:	82 e0       	ldi	r24, 0x02	; 2
     c02:	80 83       	st	Z, r24
	can_message_buttons.length = length_buttons;
     c04:	81 e0       	ldi	r24, 0x01	; 1
     c06:	81 83       	std	Z+1, r24	; 0x01
	
	while (1)
	{
		
		
		if (Game_status.in_game){ //TODO: Check if this works or if it needs to be in_game = 1;
     c08:	80 91 26 03 	lds	r24, 0x0326	; 0x800326 <Game_status>
     c0c:	88 23       	and	r24, r24
     c0e:	19 f0       	breq	.+6      	; 0xc16 <main+0x5c>
			poll_new_readings();
     c10:	0e 94 c1 02 	call	0x582	; 0x582 <poll_new_readings>
     c14:	f9 cf       	rjmp	.-14     	; 0xc08 <main+0x4e>
			// Update OLED while in game
		}
		else {
			
			get_stick_direction();
     c16:	0e 94 88 02 	call	0x510	; 0x510 <get_stick_direction>
			if (right_button){
     c1a:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <right_button>
     c1e:	88 23       	and	r24, r24
     c20:	21 f0       	breq	.+8      	; 0xc2a <main+0x70>
				Change_page();
     c22:	0e 94 95 09 	call	0x132a	; 0x132a <Change_page>
				right_button = false;
     c26:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <right_button>
			}
			
			if (stick_state.Y_direction == NEUTRAL){
     c2a:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     c2e:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     c32:	00 97       	sbiw	r24, 0x00	; 0
     c34:	19 f4       	brne	.+6      	; 0xc3c <main+0x82>
				neutral_check = true;
     c36:	21 e0       	ldi	r18, 0x01	; 1
     c38:	20 93 7c 02 	sts	0x027C, r18	; 0x80027c <__data_end>
			}
			
			if (neutral_check){
     c3c:	20 91 7c 02 	lds	r18, 0x027C	; 0x80027c <__data_end>
     c40:	22 23       	and	r18, r18
     c42:	11 f3       	breq	.-60     	; 0xc08 <main+0x4e>
				if (stick_state.Y_direction != NEUTRAL){
     c44:	89 2b       	or	r24, r25
     c46:	01 f3       	breq	.-64     	; 0xc08 <main+0x4e>
					Arrow_refresh();
     c48:	0e 94 60 06 	call	0xcc0	; 0xcc0 <Arrow_refresh>
					neutral_check = false;
     c4c:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <__data_end>
     c50:	db cf       	rjmp	.-74     	; 0xc08 <main+0x4e>

00000c52 <flag_init>:
	strcpy(Menu_contents.linedata[5], " ");
	strcpy(Menu_contents.linedata[6], " ");
	strcpy(Menu_contents.linedata[7], " ");
	strcpy(Menu_contents.linedata[8], "Back");
	Menu_contents.menu_index = 2;
	Menu_print();
     c52:	10 92 25 03 	sts	0x0325, r1	; 0x800325 <current_menu+0x1>
     c56:	10 92 24 03 	sts	0x0324, r1	; 0x800324 <current_menu>
     c5a:	08 95       	ret

00000c5c <Menu_print_arrow>:
     c5c:	80 e0       	ldi	r24, 0x00	; 0
     c5e:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     c62:	88 e1       	ldi	r24, 0x18	; 24
     c64:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     c68:	88 e1       	ldi	r24, 0x18	; 24
     c6a:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     c6e:	88 e1       	ldi	r24, 0x18	; 24
     c70:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     c74:	8e e7       	ldi	r24, 0x7E	; 126
     c76:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     c7a:	8c e3       	ldi	r24, 0x3C	; 60
     c7c:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     c80:	88 e1       	ldi	r24, 0x18	; 24
     c82:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     c86:	80 e0       	ldi	r24, 0x00	; 0
     c88:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     c8c:	08 95       	ret

00000c8e <Menu_no_arrow>:
     c8e:	80 e0       	ldi	r24, 0x00	; 0
     c90:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     c94:	80 e0       	ldi	r24, 0x00	; 0
     c96:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     c9a:	80 e0       	ldi	r24, 0x00	; 0
     c9c:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     ca0:	80 e0       	ldi	r24, 0x00	; 0
     ca2:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     ca6:	80 e0       	ldi	r24, 0x00	; 0
     ca8:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     cb2:	80 e0       	ldi	r24, 0x00	; 0
     cb4:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     cb8:	80 e0       	ldi	r24, 0x00	; 0
     cba:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
     cbe:	08 95       	ret

00000cc0 <Arrow_refresh>:
     cc0:	1f 93       	push	r17
     cc2:	cf 93       	push	r28
     cc4:	df 93       	push	r29
     cc6:	0e 94 88 02 	call	0x510	; 0x510 <get_stick_direction>
     cca:	10 91 ab 02 	lds	r17, 0x02AB	; 0x8002ab <Menu_contents>
     cce:	c1 2f       	mov	r28, r17
     cd0:	d0 e0       	ldi	r29, 0x00	; 0
     cd2:	80 91 24 03 	lds	r24, 0x0324	; 0x800324 <current_menu>
     cd6:	90 91 25 03 	lds	r25, 0x0325	; 0x800325 <current_menu+0x1>
     cda:	89 2b       	or	r24, r25
     cdc:	a1 f5       	brne	.+104    	; 0xd46 <Arrow_refresh+0x86>
     cde:	c2 30       	cpi	r28, 0x02	; 2
     ce0:	d1 05       	cpc	r29, r1
     ce2:	b9 f4       	brne	.+46     	; 0xd12 <Arrow_refresh+0x52>
     ce4:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     ce8:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     cec:	81 30       	cpi	r24, 0x01	; 1
     cee:	91 05       	cpc	r25, r1
     cf0:	11 f0       	breq	.+4      	; 0xcf6 <Arrow_refresh+0x36>
     cf2:	04 97       	sbiw	r24, 0x04	; 4
     cf4:	71 f4       	brne	.+28     	; 0xd12 <Arrow_refresh+0x52>
     cf6:	87 e0       	ldi	r24, 0x07	; 7
     cf8:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
     cfc:	60 e0       	ldi	r22, 0x00	; 0
     cfe:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     d02:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     d06:	60 e0       	ldi	r22, 0x00	; 0
     d08:	81 2f       	mov	r24, r17
     d0a:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     d0e:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     d12:	c7 30       	cpi	r28, 0x07	; 7
     d14:	d1 05       	cpc	r29, r1
     d16:	b9 f4       	brne	.+46     	; 0xd46 <Arrow_refresh+0x86>
     d18:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     d1c:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     d20:	81 30       	cpi	r24, 0x01	; 1
     d22:	91 05       	cpc	r25, r1
     d24:	11 f0       	breq	.+4      	; 0xd2a <Arrow_refresh+0x6a>
     d26:	04 97       	sbiw	r24, 0x04	; 4
     d28:	71 f4       	brne	.+28     	; 0xd46 <Arrow_refresh+0x86>
     d2a:	82 e0       	ldi	r24, 0x02	; 2
     d2c:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
     d30:	60 e0       	ldi	r22, 0x00	; 0
     d32:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     d36:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     d3a:	60 e0       	ldi	r22, 0x00	; 0
     d3c:	81 2f       	mov	r24, r17
     d3e:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     d42:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     d46:	80 91 24 03 	lds	r24, 0x0324	; 0x800324 <current_menu>
     d4a:	90 91 25 03 	lds	r25, 0x0325	; 0x800325 <current_menu+0x1>
     d4e:	01 97       	sbiw	r24, 0x01	; 1
     d50:	09 f0       	breq	.+2      	; 0xd54 <Arrow_refresh+0x94>
     d52:	85 c0       	rjmp	.+266    	; 0xe5e <Arrow_refresh+0x19e>
     d54:	c2 30       	cpi	r28, 0x02	; 2
     d56:	d1 05       	cpc	r29, r1
     d58:	51 f5       	brne	.+84     	; 0xdae <Arrow_refresh+0xee>
     d5a:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     d5e:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     d62:	04 97       	sbiw	r24, 0x04	; 4
     d64:	81 f4       	brne	.+32     	; 0xd86 <Arrow_refresh+0xc6>
     d66:	eb ea       	ldi	r30, 0xAB	; 171
     d68:	f2 e0       	ldi	r31, 0x02	; 2
     d6a:	80 81       	ld	r24, Z
     d6c:	8f 5f       	subi	r24, 0xFF	; 255
     d6e:	80 83       	st	Z, r24
     d70:	60 e0       	ldi	r22, 0x00	; 0
     d72:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     d76:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     d7a:	60 e0       	ldi	r22, 0x00	; 0
     d7c:	81 2f       	mov	r24, r17
     d7e:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     d82:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     d86:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     d8a:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     d8e:	01 97       	sbiw	r24, 0x01	; 1
     d90:	71 f4       	brne	.+28     	; 0xdae <Arrow_refresh+0xee>
     d92:	87 e0       	ldi	r24, 0x07	; 7
     d94:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
     d98:	60 e0       	ldi	r22, 0x00	; 0
     d9a:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     d9e:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     da2:	60 e0       	ldi	r22, 0x00	; 0
     da4:	81 2f       	mov	r24, r17
     da6:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     daa:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     dae:	c3 30       	cpi	r28, 0x03	; 3
     db0:	d1 05       	cpc	r29, r1
     db2:	51 f5       	brne	.+84     	; 0xe08 <Arrow_refresh+0x148>
     db4:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     db8:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     dbc:	01 97       	sbiw	r24, 0x01	; 1
     dbe:	81 f4       	brne	.+32     	; 0xde0 <Arrow_refresh+0x120>
     dc0:	eb ea       	ldi	r30, 0xAB	; 171
     dc2:	f2 e0       	ldi	r31, 0x02	; 2
     dc4:	80 81       	ld	r24, Z
     dc6:	81 50       	subi	r24, 0x01	; 1
     dc8:	80 83       	st	Z, r24
     dca:	60 e0       	ldi	r22, 0x00	; 0
     dcc:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     dd0:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     dd4:	60 e0       	ldi	r22, 0x00	; 0
     dd6:	81 2f       	mov	r24, r17
     dd8:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     ddc:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     de0:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     de4:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     de8:	04 97       	sbiw	r24, 0x04	; 4
     dea:	71 f4       	brne	.+28     	; 0xe08 <Arrow_refresh+0x148>
     dec:	87 e0       	ldi	r24, 0x07	; 7
     dee:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
     df2:	60 e0       	ldi	r22, 0x00	; 0
     df4:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     df8:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     dfc:	60 e0       	ldi	r22, 0x00	; 0
     dfe:	81 2f       	mov	r24, r17
     e00:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     e04:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     e08:	c7 30       	cpi	r28, 0x07	; 7
     e0a:	d1 05       	cpc	r29, r1
     e0c:	41 f5       	brne	.+80     	; 0xe5e <Arrow_refresh+0x19e>
     e0e:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     e12:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     e16:	01 97       	sbiw	r24, 0x01	; 1
     e18:	71 f4       	brne	.+28     	; 0xe36 <Arrow_refresh+0x176>
     e1a:	83 e0       	ldi	r24, 0x03	; 3
     e1c:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
     e20:	60 e0       	ldi	r22, 0x00	; 0
     e22:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     e26:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     e2a:	60 e0       	ldi	r22, 0x00	; 0
     e2c:	81 2f       	mov	r24, r17
     e2e:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     e32:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     e36:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     e3a:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     e3e:	04 97       	sbiw	r24, 0x04	; 4
     e40:	71 f4       	brne	.+28     	; 0xe5e <Arrow_refresh+0x19e>
     e42:	82 e0       	ldi	r24, 0x02	; 2
     e44:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
     e48:	60 e0       	ldi	r22, 0x00	; 0
     e4a:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     e4e:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     e52:	60 e0       	ldi	r22, 0x00	; 0
     e54:	81 2f       	mov	r24, r17
     e56:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     e5a:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     e5e:	80 91 24 03 	lds	r24, 0x0324	; 0x800324 <current_menu>
     e62:	90 91 25 03 	lds	r25, 0x0325	; 0x800325 <current_menu+0x1>
     e66:	02 97       	sbiw	r24, 0x02	; 2
     e68:	09 f0       	breq	.+2      	; 0xe6c <Arrow_refresh+0x1ac>
     e6a:	85 c0       	rjmp	.+266    	; 0xf76 <Arrow_refresh+0x2b6>
     e6c:	c2 30       	cpi	r28, 0x02	; 2
     e6e:	d1 05       	cpc	r29, r1
     e70:	51 f5       	brne	.+84     	; 0xec6 <Arrow_refresh+0x206>
     e72:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     e76:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     e7a:	04 97       	sbiw	r24, 0x04	; 4
     e7c:	81 f4       	brne	.+32     	; 0xe9e <Arrow_refresh+0x1de>
     e7e:	eb ea       	ldi	r30, 0xAB	; 171
     e80:	f2 e0       	ldi	r31, 0x02	; 2
     e82:	80 81       	ld	r24, Z
     e84:	8f 5f       	subi	r24, 0xFF	; 255
     e86:	80 83       	st	Z, r24
     e88:	60 e0       	ldi	r22, 0x00	; 0
     e8a:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     e8e:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     e92:	60 e0       	ldi	r22, 0x00	; 0
     e94:	81 2f       	mov	r24, r17
     e96:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     e9a:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     e9e:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     ea2:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     ea6:	01 97       	sbiw	r24, 0x01	; 1
     ea8:	71 f4       	brne	.+28     	; 0xec6 <Arrow_refresh+0x206>
     eaa:	87 e0       	ldi	r24, 0x07	; 7
     eac:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
     eb0:	60 e0       	ldi	r22, 0x00	; 0
     eb2:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     eb6:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     eba:	60 e0       	ldi	r22, 0x00	; 0
     ebc:	81 2f       	mov	r24, r17
     ebe:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     ec2:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     ec6:	c3 30       	cpi	r28, 0x03	; 3
     ec8:	d1 05       	cpc	r29, r1
     eca:	51 f5       	brne	.+84     	; 0xf20 <Arrow_refresh+0x260>
     ecc:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     ed0:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     ed4:	01 97       	sbiw	r24, 0x01	; 1
     ed6:	81 f4       	brne	.+32     	; 0xef8 <Arrow_refresh+0x238>
     ed8:	eb ea       	ldi	r30, 0xAB	; 171
     eda:	f2 e0       	ldi	r31, 0x02	; 2
     edc:	80 81       	ld	r24, Z
     ede:	81 50       	subi	r24, 0x01	; 1
     ee0:	80 83       	st	Z, r24
     ee2:	60 e0       	ldi	r22, 0x00	; 0
     ee4:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     ee8:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     eec:	60 e0       	ldi	r22, 0x00	; 0
     eee:	81 2f       	mov	r24, r17
     ef0:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     ef4:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     ef8:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     efc:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     f00:	04 97       	sbiw	r24, 0x04	; 4
     f02:	71 f4       	brne	.+28     	; 0xf20 <Arrow_refresh+0x260>
     f04:	87 e0       	ldi	r24, 0x07	; 7
     f06:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
     f0a:	60 e0       	ldi	r22, 0x00	; 0
     f0c:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     f10:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     f14:	60 e0       	ldi	r22, 0x00	; 0
     f16:	81 2f       	mov	r24, r17
     f18:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     f1c:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     f20:	c7 30       	cpi	r28, 0x07	; 7
     f22:	d1 05       	cpc	r29, r1
     f24:	41 f5       	brne	.+80     	; 0xf76 <Arrow_refresh+0x2b6>
     f26:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     f2a:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     f2e:	01 97       	sbiw	r24, 0x01	; 1
     f30:	71 f4       	brne	.+28     	; 0xf4e <Arrow_refresh+0x28e>
     f32:	83 e0       	ldi	r24, 0x03	; 3
     f34:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
     f38:	60 e0       	ldi	r22, 0x00	; 0
     f3a:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     f3e:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     f42:	60 e0       	ldi	r22, 0x00	; 0
     f44:	81 2f       	mov	r24, r17
     f46:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     f4a:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     f4e:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     f52:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     f56:	04 97       	sbiw	r24, 0x04	; 4
     f58:	71 f4       	brne	.+28     	; 0xf76 <Arrow_refresh+0x2b6>
     f5a:	82 e0       	ldi	r24, 0x02	; 2
     f5c:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
     f60:	60 e0       	ldi	r22, 0x00	; 0
     f62:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     f66:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     f6a:	60 e0       	ldi	r22, 0x00	; 0
     f6c:	81 2f       	mov	r24, r17
     f6e:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     f72:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     f76:	80 91 24 03 	lds	r24, 0x0324	; 0x800324 <current_menu>
     f7a:	90 91 25 03 	lds	r25, 0x0325	; 0x800325 <current_menu+0x1>
     f7e:	03 97       	sbiw	r24, 0x03	; 3
     f80:	09 f0       	breq	.+2      	; 0xf84 <Arrow_refresh+0x2c4>
     f82:	b1 c0       	rjmp	.+354    	; 0x10e6 <Arrow_refresh+0x426>
     f84:	c2 30       	cpi	r28, 0x02	; 2
     f86:	d1 05       	cpc	r29, r1
     f88:	51 f5       	brne	.+84     	; 0xfde <Arrow_refresh+0x31e>
     f8a:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     f8e:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     f92:	01 97       	sbiw	r24, 0x01	; 1
     f94:	71 f4       	brne	.+28     	; 0xfb2 <Arrow_refresh+0x2f2>
     f96:	87 e0       	ldi	r24, 0x07	; 7
     f98:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
     f9c:	60 e0       	ldi	r22, 0x00	; 0
     f9e:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     fa2:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     fa6:	60 e0       	ldi	r22, 0x00	; 0
     fa8:	81 2f       	mov	r24, r17
     faa:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     fae:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     fb2:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     fb6:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     fba:	04 97       	sbiw	r24, 0x04	; 4
     fbc:	81 f4       	brne	.+32     	; 0xfde <Arrow_refresh+0x31e>
     fbe:	eb ea       	ldi	r30, 0xAB	; 171
     fc0:	f2 e0       	ldi	r31, 0x02	; 2
     fc2:	80 81       	ld	r24, Z
     fc4:	8f 5f       	subi	r24, 0xFF	; 255
     fc6:	80 83       	st	Z, r24
     fc8:	60 e0       	ldi	r22, 0x00	; 0
     fca:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     fce:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
     fd2:	60 e0       	ldi	r22, 0x00	; 0
     fd4:	81 2f       	mov	r24, r17
     fd6:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
     fda:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
     fde:	c3 30       	cpi	r28, 0x03	; 3
     fe0:	d1 05       	cpc	r29, r1
     fe2:	61 f5       	brne	.+88     	; 0x103c <Arrow_refresh+0x37c>
     fe4:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
     fe8:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
     fec:	04 97       	sbiw	r24, 0x04	; 4
     fee:	81 f4       	brne	.+32     	; 0x1010 <Arrow_refresh+0x350>
     ff0:	eb ea       	ldi	r30, 0xAB	; 171
     ff2:	f2 e0       	ldi	r31, 0x02	; 2
     ff4:	80 81       	ld	r24, Z
     ff6:	8f 5f       	subi	r24, 0xFF	; 255
     ff8:	80 83       	st	Z, r24
     ffa:	60 e0       	ldi	r22, 0x00	; 0
     ffc:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    1000:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
    1004:	60 e0       	ldi	r22, 0x00	; 0
    1006:	81 2f       	mov	r24, r17
    1008:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    100c:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
    1010:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
    1014:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
    1018:	01 97       	sbiw	r24, 0x01	; 1
    101a:	81 f4       	brne	.+32     	; 0x103c <Arrow_refresh+0x37c>
    101c:	eb ea       	ldi	r30, 0xAB	; 171
    101e:	f2 e0       	ldi	r31, 0x02	; 2
    1020:	80 81       	ld	r24, Z
    1022:	81 50       	subi	r24, 0x01	; 1
    1024:	80 83       	st	Z, r24
    1026:	60 e0       	ldi	r22, 0x00	; 0
    1028:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    102c:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
    1030:	60 e0       	ldi	r22, 0x00	; 0
    1032:	81 2f       	mov	r24, r17
    1034:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    1038:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
    103c:	c4 30       	cpi	r28, 0x04	; 4
    103e:	d1 05       	cpc	r29, r1
    1040:	41 f5       	brne	.+80     	; 0x1092 <Arrow_refresh+0x3d2>
    1042:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
    1046:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
    104a:	01 97       	sbiw	r24, 0x01	; 1
    104c:	71 f4       	brne	.+28     	; 0x106a <Arrow_refresh+0x3aa>
    104e:	83 e0       	ldi	r24, 0x03	; 3
    1050:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
    1054:	60 e0       	ldi	r22, 0x00	; 0
    1056:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    105a:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
    105e:	60 e0       	ldi	r22, 0x00	; 0
    1060:	81 2f       	mov	r24, r17
    1062:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    1066:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
    106a:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
    106e:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
    1072:	04 97       	sbiw	r24, 0x04	; 4
    1074:	71 f4       	brne	.+28     	; 0x1092 <Arrow_refresh+0x3d2>
    1076:	87 e0       	ldi	r24, 0x07	; 7
    1078:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
    107c:	60 e0       	ldi	r22, 0x00	; 0
    107e:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    1082:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
    1086:	60 e0       	ldi	r22, 0x00	; 0
    1088:	81 2f       	mov	r24, r17
    108a:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    108e:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
    1092:	27 97       	sbiw	r28, 0x07	; 7
    1094:	41 f5       	brne	.+80     	; 0x10e6 <Arrow_refresh+0x426>
    1096:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
    109a:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
    109e:	01 97       	sbiw	r24, 0x01	; 1
    10a0:	71 f4       	brne	.+28     	; 0x10be <Arrow_refresh+0x3fe>
    10a2:	84 e0       	ldi	r24, 0x04	; 4
    10a4:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
    10a8:	60 e0       	ldi	r22, 0x00	; 0
    10aa:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    10ae:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
    10b2:	60 e0       	ldi	r22, 0x00	; 0
    10b4:	81 2f       	mov	r24, r17
    10b6:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    10ba:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
    10be:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <stick_state+0x6>
    10c2:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <stick_state+0x7>
    10c6:	04 97       	sbiw	r24, 0x04	; 4
    10c8:	71 f4       	brne	.+28     	; 0x10e6 <Arrow_refresh+0x426>
    10ca:	82 e0       	ldi	r24, 0x02	; 2
    10cc:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
    10d0:	60 e0       	ldi	r22, 0x00	; 0
    10d2:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    10d6:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
    10da:	60 e0       	ldi	r22, 0x00	; 0
    10dc:	81 2f       	mov	r24, r17
    10de:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    10e2:	0e 94 47 06 	call	0xc8e	; 0xc8e <Menu_no_arrow>
    10e6:	df 91       	pop	r29
    10e8:	cf 91       	pop	r28
    10ea:	1f 91       	pop	r17
    10ec:	08 95       	ret

000010ee <Menu_print>:
    10ee:	cf 93       	push	r28
    10f0:	df 93       	push	r29
    10f2:	0e 94 d6 0a 	call	0x15ac	; 0x15ac <OLED_home>
    10f6:	8b eb       	ldi	r24, 0xBB	; 187
    10f8:	92 e0       	ldi	r25, 0x02	; 2
    10fa:	0e 94 f6 0a 	call	0x15ec	; 0x15ec <OLED_printf>
    10fe:	c1 e0       	ldi	r28, 0x01	; 1
    1100:	d0 e0       	ldi	r29, 0x00	; 0
    1102:	0f c0       	rjmp	.+30     	; 0x1122 <Menu_print+0x34>
    1104:	6a e0       	ldi	r22, 0x0A	; 10
    1106:	8c 2f       	mov	r24, r28
    1108:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    110c:	21 96       	adiw	r28, 0x01	; 1
    110e:	2f e0       	ldi	r18, 0x0F	; 15
    1110:	2c 9f       	mul	r18, r28
    1112:	c0 01       	movw	r24, r0
    1114:	2d 9f       	mul	r18, r29
    1116:	90 0d       	add	r25, r0
    1118:	11 24       	eor	r1, r1
    111a:	84 55       	subi	r24, 0x54	; 84
    111c:	9d 4f       	sbci	r25, 0xFD	; 253
    111e:	0e 94 f6 0a 	call	0x15ec	; 0x15ec <OLED_printf>
    1122:	c8 30       	cpi	r28, 0x08	; 8
    1124:	d1 05       	cpc	r29, r1
    1126:	74 f3       	brlt	.-36     	; 0x1104 <Menu_print+0x16>
    1128:	60 e0       	ldi	r22, 0x00	; 0
    112a:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <Menu_contents>
    112e:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    1132:	0e 94 2e 06 	call	0xc5c	; 0xc5c <Menu_print_arrow>
    1136:	df 91       	pop	r29
    1138:	cf 91       	pop	r28
    113a:	08 95       	ret

0000113c <Main_menu>:
    113c:	8f e0       	ldi	r24, 0x0F	; 15
    113e:	e1 ec       	ldi	r30, 0xC1	; 193
    1140:	f1 e0       	ldi	r31, 0x01	; 1
    1142:	ab eb       	ldi	r26, 0xBB	; 187
    1144:	b2 e0       	ldi	r27, 0x02	; 2
    1146:	01 90       	ld	r0, Z+
    1148:	0d 92       	st	X+, r0
    114a:	8a 95       	dec	r24
    114c:	e1 f7       	brne	.-8      	; 0x1146 <Main_menu+0xa>
    114e:	80 e2       	ldi	r24, 0x20	; 32
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	90 93 cb 02 	sts	0x02CB, r25	; 0x8002cb <Menu_contents+0x20>
    1156:	80 93 ca 02 	sts	0x02CA, r24	; 0x8002ca <Menu_contents+0x1f>
    115a:	25 e0       	ldi	r18, 0x05	; 5
    115c:	e0 eb       	ldi	r30, 0xB0	; 176
    115e:	f1 e0       	ldi	r31, 0x01	; 1
    1160:	a9 ed       	ldi	r26, 0xD9	; 217
    1162:	b2 e0       	ldi	r27, 0x02	; 2
    1164:	01 90       	ld	r0, Z+
    1166:	0d 92       	st	X+, r0
    1168:	2a 95       	dec	r18
    116a:	e1 f7       	brne	.-8      	; 0x1164 <Main_menu+0x28>
    116c:	90 93 e9 02 	sts	0x02E9, r25	; 0x8002e9 <Menu_contents+0x3e>
    1170:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <Menu_contents+0x3d>
    1174:	90 93 f8 02 	sts	0x02F8, r25	; 0x8002f8 <Menu_contents+0x4d>
    1178:	80 93 f7 02 	sts	0x02F7, r24	; 0x8002f7 <Menu_contents+0x4c>
    117c:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <Menu_contents+0x5c>
    1180:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <Menu_contents+0x5b>
    1184:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <Menu_contents+0x6b>
    1188:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <Menu_contents+0x6a>
    118c:	8c e0       	ldi	r24, 0x0C	; 12
    118e:	e5 eb       	ldi	r30, 0xB5	; 181
    1190:	f1 e0       	ldi	r31, 0x01	; 1
    1192:	a4 e2       	ldi	r26, 0x24	; 36
    1194:	b3 e0       	ldi	r27, 0x03	; 3
    1196:	01 90       	ld	r0, Z+
    1198:	0d 92       	st	X+, r0
    119a:	8a 95       	dec	r24
    119c:	e1 f7       	brne	.-8      	; 0x1196 <Main_menu+0x5a>
    119e:	82 e0       	ldi	r24, 0x02	; 2
    11a0:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
    11a4:	0e 94 77 08 	call	0x10ee	; 0x10ee <Menu_print>
    11a8:	08 95       	ret

000011aa <Game_Modes_Menu>:
    11aa:	81 e1       	ldi	r24, 0x11	; 17
    11ac:	e0 ed       	ldi	r30, 0xD0	; 208
    11ae:	f1 e0       	ldi	r31, 0x01	; 1
    11b0:	ab eb       	ldi	r26, 0xBB	; 187
    11b2:	b2 e0       	ldi	r27, 0x02	; 2
    11b4:	01 90       	ld	r0, Z+
    11b6:	0d 92       	st	X+, r0
    11b8:	8a 95       	dec	r24
    11ba:	e1 f7       	brne	.-8      	; 0x11b4 <Game_Modes_Menu+0xa>
    11bc:	80 e2       	ldi	r24, 0x20	; 32
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	90 93 cb 02 	sts	0x02CB, r25	; 0x8002cb <Menu_contents+0x20>
    11c4:	80 93 ca 02 	sts	0x02CA, r24	; 0x8002ca <Menu_contents+0x1f>
    11c8:	2c e0       	ldi	r18, 0x0C	; 12
    11ca:	e1 ee       	ldi	r30, 0xE1	; 225
    11cc:	f1 e0       	ldi	r31, 0x01	; 1
    11ce:	a9 ed       	ldi	r26, 0xD9	; 217
    11d0:	b2 e0       	ldi	r27, 0x02	; 2
    11d2:	01 90       	ld	r0, Z+
    11d4:	0d 92       	st	X+, r0
    11d6:	2a 95       	dec	r18
    11d8:	e1 f7       	brne	.-8      	; 0x11d2 <Game_Modes_Menu+0x28>
    11da:	2c e0       	ldi	r18, 0x0C	; 12
    11dc:	ed ee       	ldi	r30, 0xED	; 237
    11de:	f1 e0       	ldi	r31, 0x01	; 1
    11e0:	a8 ee       	ldi	r26, 0xE8	; 232
    11e2:	b2 e0       	ldi	r27, 0x02	; 2
    11e4:	01 90       	ld	r0, Z+
    11e6:	0d 92       	st	X+, r0
    11e8:	2a 95       	dec	r18
    11ea:	e1 f7       	brne	.-8      	; 0x11e4 <Game_Modes_Menu+0x3a>
    11ec:	90 93 f8 02 	sts	0x02F8, r25	; 0x8002f8 <Menu_contents+0x4d>
    11f0:	80 93 f7 02 	sts	0x02F7, r24	; 0x8002f7 <Menu_contents+0x4c>
    11f4:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <Menu_contents+0x5c>
    11f8:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <Menu_contents+0x5b>
    11fc:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <Menu_contents+0x6b>
    1200:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <Menu_contents+0x6a>
    1204:	85 e0       	ldi	r24, 0x05	; 5
    1206:	e9 ef       	ldi	r30, 0xF9	; 249
    1208:	f1 e0       	ldi	r31, 0x01	; 1
    120a:	a4 e2       	ldi	r26, 0x24	; 36
    120c:	b3 e0       	ldi	r27, 0x03	; 3
    120e:	01 90       	ld	r0, Z+
    1210:	0d 92       	st	X+, r0
    1212:	8a 95       	dec	r24
    1214:	e1 f7       	brne	.-8      	; 0x120e <Game_Modes_Menu+0x64>
    1216:	82 e0       	ldi	r24, 0x02	; 2
    1218:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
    121c:	0e 94 77 08 	call	0x10ee	; 0x10ee <Menu_print>
    1220:	08 95       	ret

00001222 <Difficulty_Menu>:
}

void Difficulty_Menu(){
    1222:	cf 93       	push	r28
    1224:	df 93       	push	r29
	strcpy(Menu_contents.linedata[1], " - DIFFICULTY - ");
    1226:	81 e1       	ldi	r24, 0x11	; 17
    1228:	e0 e2       	ldi	r30, 0x20	; 32
    122a:	f2 e0       	ldi	r31, 0x02	; 2
    122c:	ab eb       	ldi	r26, 0xBB	; 187
    122e:	b2 e0       	ldi	r27, 0x02	; 2
    1230:	01 90       	ld	r0, Z+
    1232:	0d 92       	st	X+, r0
    1234:	8a 95       	dec	r24
    1236:	e1 f7       	brne	.-8      	; 0x1230 <Difficulty_Menu+0xe>
	strcpy(Menu_contents.linedata[2], "");
    1238:	cb ea       	ldi	r28, 0xAB	; 171
    123a:	d2 e0       	ldi	r29, 0x02	; 2
    123c:	1f 8e       	std	Y+31, r1	; 0x1f
	strcpy(Menu_contents.linedata[3], "Easy");
    123e:	85 e0       	ldi	r24, 0x05	; 5
    1240:	e1 e3       	ldi	r30, 0x31	; 49
    1242:	f2 e0       	ldi	r31, 0x02	; 2
    1244:	a9 ed       	ldi	r26, 0xD9	; 217
    1246:	b2 e0       	ldi	r27, 0x02	; 2
    1248:	01 90       	ld	r0, Z+
    124a:	0d 92       	st	X+, r0
    124c:	8a 95       	dec	r24
    124e:	e1 f7       	brne	.-8      	; 0x1248 <Difficulty_Menu+0x26>
	strcpy(Menu_contents.linedata[4], "Normal");
    1250:	87 e0       	ldi	r24, 0x07	; 7
    1252:	e6 e3       	ldi	r30, 0x36	; 54
    1254:	f2 e0       	ldi	r31, 0x02	; 2
    1256:	a8 ee       	ldi	r26, 0xE8	; 232
    1258:	b2 e0       	ldi	r27, 0x02	; 2
    125a:	01 90       	ld	r0, Z+
    125c:	0d 92       	st	X+, r0
    125e:	8a 95       	dec	r24
    1260:	e1 f7       	brne	.-8      	; 0x125a <Difficulty_Menu+0x38>
	strcpy(Menu_contents.linedata[5], "Hard");
    1262:	85 e0       	ldi	r24, 0x05	; 5
    1264:	ed e3       	ldi	r30, 0x3D	; 61
    1266:	f2 e0       	ldi	r31, 0x02	; 2
    1268:	a7 ef       	ldi	r26, 0xF7	; 247
    126a:	b2 e0       	ldi	r27, 0x02	; 2
    126c:	01 90       	ld	r0, Z+
    126e:	0d 92       	st	X+, r0
    1270:	8a 95       	dec	r24
    1272:	e1 f7       	brne	.-8      	; 0x126c <Difficulty_Menu+0x4a>
	strcpy(Menu_contents.linedata[6], "");
    1274:	10 92 06 03 	sts	0x0306, r1	; 0x800306 <Menu_contents+0x5b>
	strcpy(Menu_contents.linedata[7], "");
    1278:	10 92 15 03 	sts	0x0315, r1	; 0x800315 <Menu_contents+0x6a>
	strcpy(Menu_contents.linedata[8], "Back");
    127c:	85 e0       	ldi	r24, 0x05	; 5
    127e:	e9 ef       	ldi	r30, 0xF9	; 249
    1280:	f1 e0       	ldi	r31, 0x01	; 1
    1282:	a4 e2       	ldi	r26, 0x24	; 36
    1284:	b3 e0       	ldi	r27, 0x03	; 3
    1286:	01 90       	ld	r0, Z+
    1288:	0d 92       	st	X+, r0
    128a:	8a 95       	dec	r24
    128c:	e1 f7       	brne	.-8      	; 0x1286 <Difficulty_Menu+0x64>
	Menu_contents.menu_index = 2;
    128e:	82 e0       	ldi	r24, 0x02	; 2
    1290:	88 83       	st	Y, r24
	Menu_print();
    1292:	0e 94 77 08 	call	0x10ee	; 0x10ee <Menu_print>
}
    1296:	df 91       	pop	r29
    1298:	cf 91       	pop	r28
    129a:	08 95       	ret

0000129c <Game_Over_Menu>:

void Game_Over_Menu(){
	strcpy(Menu_contents.linedata[1], " - GAME OVER -");
    129c:	8f e0       	ldi	r24, 0x0F	; 15
    129e:	ec e6       	ldi	r30, 0x6C	; 108
    12a0:	f2 e0       	ldi	r31, 0x02	; 2
    12a2:	ab eb       	ldi	r26, 0xBB	; 187
    12a4:	b2 e0       	ldi	r27, 0x02	; 2
    12a6:	01 90       	ld	r0, Z+
    12a8:	0d 92       	st	X+, r0
    12aa:	8a 95       	dec	r24
    12ac:	e1 f7       	brne	.-8      	; 0x12a6 <Game_Over_Menu+0xa>
	strcpy(Menu_contents.linedata[2], "Your Time:");
    12ae:	8b e0       	ldi	r24, 0x0B	; 11
    12b0:	e2 e4       	ldi	r30, 0x42	; 66
    12b2:	f2 e0       	ldi	r31, 0x02	; 2
    12b4:	aa ec       	ldi	r26, 0xCA	; 202
    12b6:	b2 e0       	ldi	r27, 0x02	; 2
    12b8:	01 90       	ld	r0, Z+
    12ba:	0d 92       	st	X+, r0
    12bc:	8a 95       	dec	r24
    12be:	e1 f7       	brne	.-8      	; 0x12b8 <Game_Over_Menu+0x1c>
	strcpy(Menu_contents.linedata[3], "1:45");
    12c0:	85 e0       	ldi	r24, 0x05	; 5
    12c2:	ed e4       	ldi	r30, 0x4D	; 77
    12c4:	f2 e0       	ldi	r31, 0x02	; 2
    12c6:	a9 ed       	ldi	r26, 0xD9	; 217
    12c8:	b2 e0       	ldi	r27, 0x02	; 2
    12ca:	01 90       	ld	r0, Z+
    12cc:	0d 92       	st	X+, r0
    12ce:	8a 95       	dec	r24
    12d0:	e1 f7       	brne	.-8      	; 0x12ca <Game_Over_Menu+0x2e>
	strcpy(Menu_contents.linedata[4], " ");
    12d2:	80 e2       	ldi	r24, 0x20	; 32
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	90 93 e9 02 	sts	0x02E9, r25	; 0x8002e9 <Menu_contents+0x3e>
    12da:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <Menu_contents+0x3d>
	strcpy(Menu_contents.linedata[5], "Leaderboard:");
    12de:	2d e0       	ldi	r18, 0x0D	; 13
    12e0:	e2 e5       	ldi	r30, 0x52	; 82
    12e2:	f2 e0       	ldi	r31, 0x02	; 2
    12e4:	a7 ef       	ldi	r26, 0xF7	; 247
    12e6:	b2 e0       	ldi	r27, 0x02	; 2
    12e8:	01 90       	ld	r0, Z+
    12ea:	0d 92       	st	X+, r0
    12ec:	2a 95       	dec	r18
    12ee:	e1 f7       	brne	.-8      	; 0x12e8 <Game_Over_Menu+0x4c>
	strcpy(Menu_contents.linedata[6], "1st");
    12f0:	e6 e0       	ldi	r30, 0x06	; 6
    12f2:	f3 e0       	ldi	r31, 0x03	; 3
    12f4:	21 e3       	ldi	r18, 0x31	; 49
    12f6:	33 e7       	ldi	r19, 0x73	; 115
    12f8:	31 83       	std	Z+1, r19	; 0x01
    12fa:	20 83       	st	Z, r18
    12fc:	24 e7       	ldi	r18, 0x74	; 116
    12fe:	30 e0       	ldi	r19, 0x00	; 0
    1300:	33 83       	std	Z+3, r19	; 0x03
    1302:	22 83       	std	Z+2, r18	; 0x02
	strcpy(Menu_contents.linedata[7], " ");
    1304:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <Menu_contents+0x6b>
    1308:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <Menu_contents+0x6a>
	strcpy(Menu_contents.linedata[8], "Exit to menu");
    130c:	8d e0       	ldi	r24, 0x0D	; 13
    130e:	ef e5       	ldi	r30, 0x5F	; 95
    1310:	f2 e0       	ldi	r31, 0x02	; 2
    1312:	a4 e2       	ldi	r26, 0x24	; 36
    1314:	b3 e0       	ldi	r27, 0x03	; 3
    1316:	01 90       	ld	r0, Z+
    1318:	0d 92       	st	X+, r0
    131a:	8a 95       	dec	r24
    131c:	e1 f7       	brne	.-8      	; 0x1316 <Game_Over_Menu+0x7a>
	Menu_contents.menu_index = 7;
    131e:	87 e0       	ldi	r24, 0x07	; 7
    1320:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <Menu_contents>
	Menu_print();
    1324:	0e 94 77 08 	call	0x10ee	; 0x10ee <Menu_print>
    1328:	08 95       	ret

0000132a <Change_page>:
	OLED_go_to_pos(Menu_contents.menu_index, 0);
	Menu_print_arrow();
}

void Change_page(){
	int current_index = Menu_contents.menu_index;
    132a:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <Menu_contents>
    132e:	90 e0       	ldi	r25, 0x00	; 0
	
	if (current_menu == MAIN_MENU){
    1330:	20 91 24 03 	lds	r18, 0x0324	; 0x800324 <current_menu>
    1334:	30 91 25 03 	lds	r19, 0x0325	; 0x800325 <current_menu+0x1>
    1338:	21 15       	cp	r18, r1
    133a:	31 05       	cpc	r19, r1
    133c:	81 f4       	brne	.+32     	; 0x135e <Change_page+0x34>
		if (current_index == 2){
    133e:	82 30       	cpi	r24, 0x02	; 2
    1340:	91 05       	cpc	r25, r1
    1342:	69 f4       	brne	.+26     	; 0x135e <Change_page+0x34>
			OLED_reset();
    1344:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
			Game_Modes_Menu();
    1348:	0e 94 d5 08 	call	0x11aa	; 0x11aa <Game_Modes_Menu>
			Game_Modes_Menu();
    134c:	0e 94 d5 08 	call	0x11aa	; 0x11aa <Game_Modes_Menu>
			current_menu = GAME_MODES_MENU;
    1350:	81 e0       	ldi	r24, 0x01	; 1
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <current_menu+0x1>
    1358:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <current_menu>
			return;
    135c:	08 95       	ret
		}
	}
	
	if (current_menu == GAME_MODES_MENU){
    135e:	21 30       	cpi	r18, 0x01	; 1
    1360:	31 05       	cpc	r19, r1
    1362:	99 f5       	brne	.+102    	; 0x13ca <Change_page+0xa0>
		if (current_index == 2){ // Normal mode
    1364:	82 30       	cpi	r24, 0x02	; 2
    1366:	91 05       	cpc	r25, r1
    1368:	81 f4       	brne	.+32     	; 0x138a <Change_page+0x60>
			OLED_reset();
    136a:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
			Difficulty_Menu();
    136e:	0e 94 11 09 	call	0x1222	; 0x1222 <Difficulty_Menu>
			Difficulty_Menu();
    1372:	0e 94 11 09 	call	0x1222	; 0x1222 <Difficulty_Menu>
			Game_status.game_mode = STANDARD;
    1376:	81 e0       	ldi	r24, 0x01	; 1
    1378:	80 93 29 03 	sts	0x0329, r24	; 0x800329 <Game_status+0x3>
			current_menu = CONTROLLER_MENU;
    137c:	82 e0       	ldi	r24, 0x02	; 2
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <current_menu+0x1>
    1384:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <current_menu>
			return;
    1388:	08 95       	ret
		}
		
		if (current_index == 3){ // Arcade mode
    138a:	83 30       	cpi	r24, 0x03	; 3
    138c:	91 05       	cpc	r25, r1
    138e:	79 f4       	brne	.+30     	; 0x13ae <Change_page+0x84>
			OLED_reset();
    1390:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
			Difficulty_Menu();
    1394:	0e 94 11 09 	call	0x1222	; 0x1222 <Difficulty_Menu>
			Difficulty_Menu();
    1398:	0e 94 11 09 	call	0x1222	; 0x1222 <Difficulty_Menu>
			Game_status.game_mode = ARCADE;
    139c:	10 92 29 03 	sts	0x0329, r1	; 0x800329 <Game_status+0x3>
			current_menu = CONTROLLER_MENU;
    13a0:	82 e0       	ldi	r24, 0x02	; 2
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <current_menu+0x1>
    13a8:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <current_menu>
			return;
    13ac:	08 95       	ret
		}
		
		if (current_index == 7){
    13ae:	87 30       	cpi	r24, 0x07	; 7
    13b0:	91 05       	cpc	r25, r1
    13b2:	59 f4       	brne	.+22     	; 0x13ca <Change_page+0xa0>
			OLED_reset();
    13b4:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
			Main_menu();
    13b8:	0e 94 9e 08 	call	0x113c	; 0x113c <Main_menu>
			Main_menu();
    13bc:	0e 94 9e 08 	call	0x113c	; 0x113c <Main_menu>
			current_menu = MAIN_MENU;
    13c0:	10 92 25 03 	sts	0x0325, r1	; 0x800325 <current_menu+0x1>
    13c4:	10 92 24 03 	sts	0x0324, r1	; 0x800324 <current_menu>
			return;
    13c8:	08 95       	ret
		}
	}
	
	if (current_menu == CONTROLLER_MENU){
    13ca:	22 30       	cpi	r18, 0x02	; 2
    13cc:	31 05       	cpc	r19, r1
    13ce:	a9 f5       	brne	.+106    	; 0x143a <Change_page+0x110>
		if (current_index == 2){ // Joystick
    13d0:	82 30       	cpi	r24, 0x02	; 2
    13d2:	91 05       	cpc	r25, r1
    13d4:	79 f4       	brne	.+30     	; 0x13f4 <Change_page+0xca>
			OLED_reset();
    13d6:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
			Difficulty_Menu();
    13da:	0e 94 11 09 	call	0x1222	; 0x1222 <Difficulty_Menu>
			Difficulty_Menu();
    13de:	0e 94 11 09 	call	0x1222	; 0x1222 <Difficulty_Menu>
			Game_status.controller_setting = JOYSTICK;
    13e2:	10 92 2a 03 	sts	0x032A, r1	; 0x80032a <Game_status+0x4>
			current_menu = DIFFICULTY_MENU;
    13e6:	83 e0       	ldi	r24, 0x03	; 3
    13e8:	90 e0       	ldi	r25, 0x00	; 0
    13ea:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <current_menu+0x1>
    13ee:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <current_menu>
			return;
    13f2:	08 95       	ret
		}
		
		if (current_index == 3){ // Arcade mode
    13f4:	83 30       	cpi	r24, 0x03	; 3
    13f6:	91 05       	cpc	r25, r1
    13f8:	81 f4       	brne	.+32     	; 0x141a <Change_page+0xf0>
			OLED_reset();
    13fa:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
			Difficulty_Menu();
    13fe:	0e 94 11 09 	call	0x1222	; 0x1222 <Difficulty_Menu>
			Difficulty_Menu();
    1402:	0e 94 11 09 	call	0x1222	; 0x1222 <Difficulty_Menu>
			Game_status.controller_setting = SLIDER;
    1406:	81 e0       	ldi	r24, 0x01	; 1
    1408:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <Game_status+0x4>
			current_menu = DIFFICULTY_MENU;
    140c:	83 e0       	ldi	r24, 0x03	; 3
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <current_menu+0x1>
    1414:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <current_menu>
			return;
    1418:	08 95       	ret
		}
		
		if (current_index == 7){
    141a:	87 30       	cpi	r24, 0x07	; 7
    141c:	91 05       	cpc	r25, r1
    141e:	69 f4       	brne	.+26     	; 0x143a <Change_page+0x110>
			OLED_reset();
    1420:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
			Main_menu();
    1424:	0e 94 9e 08 	call	0x113c	; 0x113c <Main_menu>
			Main_menu();
    1428:	0e 94 9e 08 	call	0x113c	; 0x113c <Main_menu>
			current_menu = GAME_MODES_MENU;
    142c:	81 e0       	ldi	r24, 0x01	; 1
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <current_menu+0x1>
    1434:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <current_menu>
			return;
    1438:	08 95       	ret
		}
	}
	
	if (current_menu == DIFFICULTY_MENU){ //CHANGE FROM GAME
    143a:	23 30       	cpi	r18, 0x03	; 3
    143c:	31 05       	cpc	r19, r1
    143e:	09 f0       	breq	.+2      	; 0x1442 <Change_page+0x118>
    1440:	42 c0       	rjmp	.+132    	; 0x14c6 <Change_page+0x19c>
		if (current_index == 2){ // EASY
    1442:	82 30       	cpi	r24, 0x02	; 2
    1444:	91 05       	cpc	r25, r1
    1446:	69 f4       	brne	.+26     	; 0x1462 <Change_page+0x138>
			OLED_reset();
    1448:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
			Game_Over_Menu(); 
    144c:	0e 94 4e 09 	call	0x129c	; 0x129c <Game_Over_Menu>
			Game_status.difficulty = EASY;
    1450:	10 92 2b 03 	sts	0x032B, r1	; 0x80032b <Game_status+0x5>
			current_menu = GAME_OVER_MENU;
    1454:	84 e0       	ldi	r24, 0x04	; 4
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <current_menu+0x1>
    145c:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <current_menu>
			return;
    1460:	08 95       	ret
		}
		
		if (current_index == 3){ // MEDIUM
    1462:	83 30       	cpi	r24, 0x03	; 3
    1464:	91 05       	cpc	r25, r1
    1466:	71 f4       	brne	.+28     	; 0x1484 <Change_page+0x15a>
			OLED_reset();
    1468:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
			Game_Over_Menu();
    146c:	0e 94 4e 09 	call	0x129c	; 0x129c <Game_Over_Menu>
			Game_status.difficulty = MEDIUM;
    1470:	81 e0       	ldi	r24, 0x01	; 1
    1472:	80 93 2b 03 	sts	0x032B, r24	; 0x80032b <Game_status+0x5>
			current_menu = GAME_OVER_MENU;
    1476:	84 e0       	ldi	r24, 0x04	; 4
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <current_menu+0x1>
    147e:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <current_menu>
			return;
    1482:	08 95       	ret
		}
		
		if (current_index == 4){ // HARD
    1484:	84 30       	cpi	r24, 0x04	; 4
    1486:	91 05       	cpc	r25, r1
    1488:	71 f4       	brne	.+28     	; 0x14a6 <Change_page+0x17c>
			OLED_reset();
    148a:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
			Game_Over_Menu();
    148e:	0e 94 4e 09 	call	0x129c	; 0x129c <Game_Over_Menu>
			Game_status.difficulty = HARD;
    1492:	82 e0       	ldi	r24, 0x02	; 2
    1494:	80 93 2b 03 	sts	0x032B, r24	; 0x80032b <Game_status+0x5>
			current_menu = GAME_OVER_MENU;
    1498:	84 e0       	ldi	r24, 0x04	; 4
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <current_menu+0x1>
    14a0:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <current_menu>
			return;
    14a4:	08 95       	ret
		}
		
		if (current_index == 7){
    14a6:	87 30       	cpi	r24, 0x07	; 7
    14a8:	91 05       	cpc	r25, r1
    14aa:	69 f4       	brne	.+26     	; 0x14c6 <Change_page+0x19c>
			OLED_reset();
    14ac:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
			Game_Modes_Menu();
    14b0:	0e 94 d5 08 	call	0x11aa	; 0x11aa <Game_Modes_Menu>
			Game_Modes_Menu();
    14b4:	0e 94 d5 08 	call	0x11aa	; 0x11aa <Game_Modes_Menu>
			current_menu = CONTROLLER_MENU;
    14b8:	82 e0       	ldi	r24, 0x02	; 2
    14ba:	90 e0       	ldi	r25, 0x00	; 0
    14bc:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <current_menu+0x1>
    14c0:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <current_menu>
			return;
    14c4:	08 95       	ret
		}
	}
	
	if (current_menu == GAME_OVER_MENU){
    14c6:	24 30       	cpi	r18, 0x04	; 4
    14c8:	31 05       	cpc	r19, r1
    14ca:	61 f4       	brne	.+24     	; 0x14e4 <Change_page+0x1ba>
		if (current_index == 7){
    14cc:	07 97       	sbiw	r24, 0x07	; 7
    14ce:	51 f4       	brne	.+20     	; 0x14e4 <Change_page+0x1ba>
			OLED_reset();
    14d0:	0e 94 13 0b 	call	0x1626	; 0x1626 <OLED_reset>
			Main_menu();
    14d4:	0e 94 9e 08 	call	0x113c	; 0x113c <Main_menu>
			Main_menu();
    14d8:	0e 94 9e 08 	call	0x113c	; 0x113c <Main_menu>
			current_menu = MAIN_MENU;
    14dc:	10 92 25 03 	sts	0x0325, r1	; 0x800325 <current_menu+0x1>
    14e0:	10 92 24 03 	sts	0x0324, r1	; 0x800324 <current_menu>
    14e4:	08 95       	ret

000014e6 <OLED_write_c>:
	 OLED_write_c(0xaf); // display on
 }

void OLED_write_c(uint8_t command){
	volatile char * oled = ( char *) 0x1000 ;
	oled [0]= command ;
    14e6:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xc45>
    14ea:	08 95       	ret

000014ec <OLED_init>:
#include <string.h>
#include "OLED.h"

void OLED_init() // Init function is taken from OLED LY190-128064.pdf, from blackboard
 {
	 OLED_write_c(0xae); // display off
    14ec:	8e ea       	ldi	r24, 0xAE	; 174
    14ee:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0xa1); //segment remap
    14f2:	81 ea       	ldi	r24, 0xA1	; 161
    14f4:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0xda); //common pads hardware: alternative
    14f8:	8a ed       	ldi	r24, 0xDA	; 218
    14fa:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0x12);
    14fe:	82 e1       	ldi	r24, 0x12	; 18
    1500:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0xc8); //common output scan direction:com63~com0
    1504:	88 ec       	ldi	r24, 0xC8	; 200
    1506:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0xa8); //multiplex ration mode:63
    150a:	88 ea       	ldi	r24, 0xA8	; 168
    150c:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0x3f);
    1510:	8f e3       	ldi	r24, 0x3F	; 63
    1512:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0xd5); //display divide ratio/osc. freq. mode
    1516:	85 ed       	ldi	r24, 0xD5	; 213
    1518:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0x80);
    151c:	80 e8       	ldi	r24, 0x80	; 128
    151e:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0x81); //contrast control
    1522:	81 e8       	ldi	r24, 0x81	; 129
    1524:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0x50);
    1528:	80 e5       	ldi	r24, 0x50	; 80
    152a:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0xd9); //set pre-charge period
    152e:	89 ed       	ldi	r24, 0xD9	; 217
    1530:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0x21);
    1534:	81 e2       	ldi	r24, 0x21	; 33
    1536:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0x20); //Set Memory Addressing Mode
    153a:	80 e2       	ldi	r24, 0x20	; 32
    153c:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0x02);
    1540:	82 e0       	ldi	r24, 0x02	; 2
    1542:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0xdb); //VCOM deselect level mode
    1546:	8b ed       	ldi	r24, 0xDB	; 219
    1548:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0x30);
    154c:	80 e3       	ldi	r24, 0x30	; 48
    154e:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0xad); //master configuration
    1552:	8d ea       	ldi	r24, 0xAD	; 173
    1554:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0x00);
    1558:	80 e0       	ldi	r24, 0x00	; 0
    155a:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0xa4); //out follows RAM content
    155e:	84 ea       	ldi	r24, 0xA4	; 164
    1560:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0xa6); //set normal display
    1564:	86 ea       	ldi	r24, 0xA6	; 166
    1566:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	 OLED_write_c(0xaf); // display on
    156a:	8f ea       	ldi	r24, 0xAF	; 175
    156c:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
    1570:	08 95       	ret

00001572 <OLED_write_d>:
	oled [0]= command ;
}

void OLED_write_d(uint8_t data){
	volatile char * oled = ( char *) 0x1200 ;
	oled [0]= data ;
    1572:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xe45>
    1576:	08 95       	ret

00001578 <OLED_go_to_line>:
}

void OLED_go_to_line(uint8_t line){
	uint8_t data = line | 0xB0;
	OLED_write_c(data);
    1578:	80 6b       	ori	r24, 0xB0	; 176
    157a:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
    157e:	08 95       	ret

00001580 <OLED_go_to_column>:
}

void OLED_go_to_column(uint8_t column){
    1580:	cf 93       	push	r28
	uint8_t lower = column & 0xF;
    1582:	c8 2f       	mov	r28, r24
    1584:	cf 70       	andi	r28, 0x0F	; 15
	uint8_t upper = (column >> 4) | 0x10;
    1586:	82 95       	swap	r24
    1588:	8f 70       	andi	r24, 0x0F	; 15
	OLED_write_c(upper);
    158a:	80 61       	ori	r24, 0x10	; 16
    158c:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	OLED_write_c(lower);
    1590:	8c 2f       	mov	r24, r28
    1592:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
}
    1596:	cf 91       	pop	r28
    1598:	08 95       	ret

0000159a <OLED_go_to_pos>:

void OLED_go_to_pos(uint8_t line, uint8_t column){
    159a:	cf 93       	push	r28
    159c:	c6 2f       	mov	r28, r22
	OLED_go_to_line(line);
    159e:	0e 94 bc 0a 	call	0x1578	; 0x1578 <OLED_go_to_line>
	OLED_go_to_column(column);
    15a2:	8c 2f       	mov	r24, r28
    15a4:	0e 94 c0 0a 	call	0x1580	; 0x1580 <OLED_go_to_column>
}
    15a8:	cf 91       	pop	r28
    15aa:	08 95       	ret

000015ac <OLED_home>:

void OLED_home(){
	OLED_go_to_pos(0,0);
    15ac:	60 e0       	ldi	r22, 0x00	; 0
    15ae:	80 e0       	ldi	r24, 0x00	; 0
    15b0:	0e 94 cd 0a 	call	0x159a	; 0x159a <OLED_go_to_pos>
    15b4:	08 95       	ret

000015b6 <OLED_print_c>:
}

void OLED_print_c(uint8_t letter){
    15b6:	cf 93       	push	r28
    15b8:	df 93       	push	r29
    15ba:	d8 2f       	mov	r29, r24
	for (uint8_t i = 0; i < 8; i++){
    15bc:	c0 e0       	ldi	r28, 0x00	; 0
    15be:	11 c0       	rjmp	.+34     	; 0x15e2 <OLED_print_c+0x2c>
		uint8_t address = pgm_read_byte(&(font8[(letter - 0x20)][i]));
    15c0:	ed 2f       	mov	r30, r29
    15c2:	f0 e0       	ldi	r31, 0x00	; 0
    15c4:	b0 97       	sbiw	r30, 0x20	; 32
    15c6:	ee 0f       	add	r30, r30
    15c8:	ff 1f       	adc	r31, r31
    15ca:	ee 0f       	add	r30, r30
    15cc:	ff 1f       	adc	r31, r31
    15ce:	ee 0f       	add	r30, r30
    15d0:	ff 1f       	adc	r31, r31
    15d2:	ec 0f       	add	r30, r28
    15d4:	f1 1d       	adc	r31, r1
    15d6:	e0 59       	subi	r30, 0x90	; 144
    15d8:	ff 4f       	sbci	r31, 0xFF	; 255
    15da:	84 91       	lpm	r24, Z
		OLED_write_d(address);
    15dc:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
void OLED_home(){
	OLED_go_to_pos(0,0);
}

void OLED_print_c(uint8_t letter){
	for (uint8_t i = 0; i < 8; i++){
    15e0:	cf 5f       	subi	r28, 0xFF	; 255
    15e2:	c8 30       	cpi	r28, 0x08	; 8
    15e4:	68 f3       	brcs	.-38     	; 0x15c0 <OLED_print_c+0xa>
		uint8_t address = pgm_read_byte(&(font8[(letter - 0x20)][i]));
		OLED_write_d(address);
		}
}
    15e6:	df 91       	pop	r29
    15e8:	cf 91       	pop	r28
    15ea:	08 95       	ret

000015ec <OLED_printf>:

void OLED_printf(char text[]){
    15ec:	1f 93       	push	r17
    15ee:	cf 93       	push	r28
    15f0:	df 93       	push	r29
    15f2:	ec 01       	movw	r28, r24
	for (uint8_t i = 0; i < strlen(text); i++){
    15f4:	10 e0       	ldi	r17, 0x00	; 0
    15f6:	07 c0       	rjmp	.+14     	; 0x1606 <OLED_printf+0x1a>
		OLED_print_c(text[i]);
    15f8:	fe 01       	movw	r30, r28
    15fa:	e8 0f       	add	r30, r24
    15fc:	f9 1f       	adc	r31, r25
    15fe:	80 81       	ld	r24, Z
    1600:	0e 94 db 0a 	call	0x15b6	; 0x15b6 <OLED_print_c>
		OLED_write_d(address);
		}
}

void OLED_printf(char text[]){
	for (uint8_t i = 0; i < strlen(text); i++){
    1604:	1f 5f       	subi	r17, 0xFF	; 255
    1606:	81 2f       	mov	r24, r17
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	fe 01       	movw	r30, r28
    160c:	01 90       	ld	r0, Z+
    160e:	00 20       	and	r0, r0
    1610:	e9 f7       	brne	.-6      	; 0x160c <OLED_printf+0x20>
    1612:	31 97       	sbiw	r30, 0x01	; 1
    1614:	ec 1b       	sub	r30, r28
    1616:	fd 0b       	sbc	r31, r29
    1618:	8e 17       	cp	r24, r30
    161a:	9f 07       	cpc	r25, r31
    161c:	68 f3       	brcs	.-38     	; 0x15f8 <OLED_printf+0xc>
		OLED_print_c(text[i]);
	}	
}
    161e:	df 91       	pop	r29
    1620:	cf 91       	pop	r28
    1622:	1f 91       	pop	r17
    1624:	08 95       	ret

00001626 <OLED_reset>:




void OLED_reset(){
    1626:	cf 93       	push	r28
	OLED_write_c(0b10110000);
    1628:	80 eb       	ldi	r24, 0xB0	; 176
    162a:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    162e:	c0 e0       	ldi	r28, 0x00	; 0
    1630:	04 c0       	rjmp	.+8      	; 0x163a <OLED_reset+0x14>
		OLED_write_d(0x00);
    1632:	80 e0       	ldi	r24, 0x00	; 0
    1634:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>



void OLED_reset(){
	OLED_write_c(0b10110000);
	for (uint8_t i = 0; i < 128; i++){
    1638:	cf 5f       	subi	r28, 0xFF	; 255
    163a:	cc 23       	and	r28, r28
    163c:	d4 f7       	brge	.-12     	; 0x1632 <OLED_reset+0xc>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110001);
    163e:	81 eb       	ldi	r24, 0xB1	; 177
    1640:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    1644:	c0 e0       	ldi	r28, 0x00	; 0
    1646:	04 c0       	rjmp	.+8      	; 0x1650 <OLED_reset+0x2a>
		OLED_write_d(0x00);
    1648:	80 e0       	ldi	r24, 0x00	; 0
    164a:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
	OLED_write_c(0b10110000);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110001);
	for (uint8_t i = 0; i < 128; i++){
    164e:	cf 5f       	subi	r28, 0xFF	; 255
    1650:	cc 23       	and	r28, r28
    1652:	d4 f7       	brge	.-12     	; 0x1648 <OLED_reset+0x22>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110010);
    1654:	82 eb       	ldi	r24, 0xB2	; 178
    1656:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    165a:	c0 e0       	ldi	r28, 0x00	; 0
    165c:	04 c0       	rjmp	.+8      	; 0x1666 <OLED_reset+0x40>
		OLED_write_d(0x00);
    165e:	80 e0       	ldi	r24, 0x00	; 0
    1660:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
	OLED_write_c(0b10110001);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110010);
	for (uint8_t i = 0; i < 128; i++){
    1664:	cf 5f       	subi	r28, 0xFF	; 255
    1666:	cc 23       	and	r28, r28
    1668:	d4 f7       	brge	.-12     	; 0x165e <OLED_reset+0x38>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110011);
    166a:	83 eb       	ldi	r24, 0xB3	; 179
    166c:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    1670:	c0 e0       	ldi	r28, 0x00	; 0
    1672:	04 c0       	rjmp	.+8      	; 0x167c <OLED_reset+0x56>
		OLED_write_d(0x00);
    1674:	80 e0       	ldi	r24, 0x00	; 0
    1676:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
	OLED_write_c(0b10110010);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110011);
	for (uint8_t i = 0; i < 128; i++){
    167a:	cf 5f       	subi	r28, 0xFF	; 255
    167c:	cc 23       	and	r28, r28
    167e:	d4 f7       	brge	.-12     	; 0x1674 <OLED_reset+0x4e>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110100);
    1680:	84 eb       	ldi	r24, 0xB4	; 180
    1682:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    1686:	c0 e0       	ldi	r28, 0x00	; 0
    1688:	04 c0       	rjmp	.+8      	; 0x1692 <OLED_reset+0x6c>
		OLED_write_d(0x00);
    168a:	80 e0       	ldi	r24, 0x00	; 0
    168c:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
	OLED_write_c(0b10110011);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110100);
	for (uint8_t i = 0; i < 128; i++){
    1690:	cf 5f       	subi	r28, 0xFF	; 255
    1692:	cc 23       	and	r28, r28
    1694:	d4 f7       	brge	.-12     	; 0x168a <OLED_reset+0x64>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110101);
    1696:	85 eb       	ldi	r24, 0xB5	; 181
    1698:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    169c:	c0 e0       	ldi	r28, 0x00	; 0
    169e:	04 c0       	rjmp	.+8      	; 0x16a8 <OLED_reset+0x82>
		OLED_write_d(0x00);
    16a0:	80 e0       	ldi	r24, 0x00	; 0
    16a2:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
	OLED_write_c(0b10110100);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110101);
	for (uint8_t i = 0; i < 128; i++){
    16a6:	cf 5f       	subi	r28, 0xFF	; 255
    16a8:	cc 23       	and	r28, r28
    16aa:	d4 f7       	brge	.-12     	; 0x16a0 <OLED_reset+0x7a>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110110);
    16ac:	86 eb       	ldi	r24, 0xB6	; 182
    16ae:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    16b2:	c0 e0       	ldi	r28, 0x00	; 0
    16b4:	04 c0       	rjmp	.+8      	; 0x16be <OLED_reset+0x98>
		OLED_write_d(0x00);
    16b6:	80 e0       	ldi	r24, 0x00	; 0
    16b8:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
	OLED_write_c(0b10110101);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110110);
	for (uint8_t i = 0; i < 128; i++){
    16bc:	cf 5f       	subi	r28, 0xFF	; 255
    16be:	cc 23       	and	r28, r28
    16c0:	d4 f7       	brge	.-12     	; 0x16b6 <OLED_reset+0x90>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110111);
    16c2:	87 eb       	ldi	r24, 0xB7	; 183
    16c4:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    16c8:	c0 e0       	ldi	r28, 0x00	; 0
    16ca:	04 c0       	rjmp	.+8      	; 0x16d4 <OLED_reset+0xae>
		OLED_write_d(0x00);
    16cc:	80 e0       	ldi	r24, 0x00	; 0
    16ce:	0e 94 b9 0a 	call	0x1572	; 0x1572 <OLED_write_d>
	OLED_write_c(0b10110110);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110111);
	for (uint8_t i = 0; i < 128; i++){
    16d2:	cf 5f       	subi	r28, 0xFF	; 255
    16d4:	cc 23       	and	r28, r28
    16d6:	d4 f7       	brge	.-12     	; 0x16cc <OLED_reset+0xa6>
		OLED_write_d(0x00);
	}
}
    16d8:	cf 91       	pop	r28
    16da:	08 95       	ret

000016dc <SPI_init>:
	SPDR = cData;
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
	result = SPDR;
	return result;
}
    16dc:	87 b3       	in	r24, 0x17	; 23
    16de:	80 6b       	ori	r24, 0xB0	; 176
    16e0:	87 bb       	out	0x17, r24	; 23
    16e2:	8d b1       	in	r24, 0x0d	; 13
    16e4:	81 65       	ori	r24, 0x51	; 81
    16e6:	8d b9       	out	0x0d, r24	; 13
    16e8:	88 b3       	in	r24, 0x18	; 24
    16ea:	80 61       	ori	r24, 0x10	; 16
    16ec:	88 bb       	out	0x18, r24	; 24
    16ee:	08 95       	ret

000016f0 <SPI_write>:



SPI_write(uint8_t cData){
	SPDR = cData;
    16f0:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
    16f2:	77 9b       	sbis	0x0e, 7	; 14
    16f4:	fe cf       	rjmp	.-4      	; 0x16f2 <SPI_write+0x2>
}
    16f6:	08 95       	ret

000016f8 <SPI_read>:

uint8_t SPI_read(){
	uint8_t result;
	SPDR = 0xFF;
    16f8:	8f ef       	ldi	r24, 0xFF	; 255
    16fa:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
    16fc:	77 9b       	sbis	0x0e, 7	; 14
    16fe:	fe cf       	rjmp	.-4      	; 0x16fc <SPI_read+0x4>
	result = SPDR;
    1700:	8f b1       	in	r24, 0x0f	; 15
	return result;
    1702:	08 95       	ret

00001704 <timer_init>:
	TCCR1B |= 0x7; // Sets the clock scaling to CLK i/o = 1024 
}

timer_reset(){
	TCNT1 = 0x00;	
}
    1704:	8e b5       	in	r24, 0x2e	; 46
    1706:	87 60       	ori	r24, 0x07	; 7
    1708:	8e bd       	out	0x2e, r24	; 46
    170a:	08 95       	ret

0000170c <timer_read>:

int timer_read(){ //TODO: Check if this actually works.
	
	int timer = TCNT1;
    170c:	8c b5       	in	r24, 0x2c	; 44
    170e:	9d b5       	in	r25, 0x2d	; 45
	return timer;
    1710:	08 95       	ret

00001712 <__divmodhi4>:
    1712:	97 fb       	bst	r25, 7
    1714:	07 2e       	mov	r0, r23
    1716:	16 f4       	brtc	.+4      	; 0x171c <__divmodhi4+0xa>
    1718:	00 94       	com	r0
    171a:	07 d0       	rcall	.+14     	; 0x172a <__divmodhi4_neg1>
    171c:	77 fd       	sbrc	r23, 7
    171e:	09 d0       	rcall	.+18     	; 0x1732 <__divmodhi4_neg2>
    1720:	0e 94 9d 0b 	call	0x173a	; 0x173a <__udivmodhi4>
    1724:	07 fc       	sbrc	r0, 7
    1726:	05 d0       	rcall	.+10     	; 0x1732 <__divmodhi4_neg2>
    1728:	3e f4       	brtc	.+14     	; 0x1738 <__divmodhi4_exit>

0000172a <__divmodhi4_neg1>:
    172a:	90 95       	com	r25
    172c:	81 95       	neg	r24
    172e:	9f 4f       	sbci	r25, 0xFF	; 255
    1730:	08 95       	ret

00001732 <__divmodhi4_neg2>:
    1732:	70 95       	com	r23
    1734:	61 95       	neg	r22
    1736:	7f 4f       	sbci	r23, 0xFF	; 255

00001738 <__divmodhi4_exit>:
    1738:	08 95       	ret

0000173a <__udivmodhi4>:
    173a:	aa 1b       	sub	r26, r26
    173c:	bb 1b       	sub	r27, r27
    173e:	51 e1       	ldi	r21, 0x11	; 17
    1740:	07 c0       	rjmp	.+14     	; 0x1750 <__udivmodhi4_ep>

00001742 <__udivmodhi4_loop>:
    1742:	aa 1f       	adc	r26, r26
    1744:	bb 1f       	adc	r27, r27
    1746:	a6 17       	cp	r26, r22
    1748:	b7 07       	cpc	r27, r23
    174a:	10 f0       	brcs	.+4      	; 0x1750 <__udivmodhi4_ep>
    174c:	a6 1b       	sub	r26, r22
    174e:	b7 0b       	sbc	r27, r23

00001750 <__udivmodhi4_ep>:
    1750:	88 1f       	adc	r24, r24
    1752:	99 1f       	adc	r25, r25
    1754:	5a 95       	dec	r21
    1756:	a9 f7       	brne	.-22     	; 0x1742 <__udivmodhi4_loop>
    1758:	80 95       	com	r24
    175a:	90 95       	com	r25
    175c:	bc 01       	movw	r22, r24
    175e:	cd 01       	movw	r24, r26
    1760:	08 95       	ret

00001762 <fdevopen>:
    1762:	0f 93       	push	r16
    1764:	1f 93       	push	r17
    1766:	cf 93       	push	r28
    1768:	df 93       	push	r29
    176a:	00 97       	sbiw	r24, 0x00	; 0
    176c:	31 f4       	brne	.+12     	; 0x177a <fdevopen+0x18>
    176e:	61 15       	cp	r22, r1
    1770:	71 05       	cpc	r23, r1
    1772:	19 f4       	brne	.+6      	; 0x177a <fdevopen+0x18>
    1774:	80 e0       	ldi	r24, 0x00	; 0
    1776:	90 e0       	ldi	r25, 0x00	; 0
    1778:	3a c0       	rjmp	.+116    	; 0x17ee <fdevopen+0x8c>
    177a:	8b 01       	movw	r16, r22
    177c:	ec 01       	movw	r28, r24
    177e:	6e e0       	ldi	r22, 0x0E	; 14
    1780:	70 e0       	ldi	r23, 0x00	; 0
    1782:	81 e0       	ldi	r24, 0x01	; 1
    1784:	90 e0       	ldi	r25, 0x00	; 0
    1786:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <calloc>
    178a:	fc 01       	movw	r30, r24
    178c:	89 2b       	or	r24, r25
    178e:	91 f3       	breq	.-28     	; 0x1774 <fdevopen+0x12>
    1790:	80 e8       	ldi	r24, 0x80	; 128
    1792:	83 83       	std	Z+3, r24	; 0x03
    1794:	01 15       	cp	r16, r1
    1796:	11 05       	cpc	r17, r1
    1798:	71 f0       	breq	.+28     	; 0x17b6 <fdevopen+0x54>
    179a:	13 87       	std	Z+11, r17	; 0x0b
    179c:	02 87       	std	Z+10, r16	; 0x0a
    179e:	81 e8       	ldi	r24, 0x81	; 129
    17a0:	83 83       	std	Z+3, r24	; 0x03
    17a2:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <__iob>
    17a6:	90 91 b2 03 	lds	r25, 0x03B2	; 0x8003b2 <__iob+0x1>
    17aa:	89 2b       	or	r24, r25
    17ac:	21 f4       	brne	.+8      	; 0x17b6 <fdevopen+0x54>
    17ae:	f0 93 b2 03 	sts	0x03B2, r31	; 0x8003b2 <__iob+0x1>
    17b2:	e0 93 b1 03 	sts	0x03B1, r30	; 0x8003b1 <__iob>
    17b6:	20 97       	sbiw	r28, 0x00	; 0
    17b8:	c9 f0       	breq	.+50     	; 0x17ec <fdevopen+0x8a>
    17ba:	d1 87       	std	Z+9, r29	; 0x09
    17bc:	c0 87       	std	Z+8, r28	; 0x08
    17be:	83 81       	ldd	r24, Z+3	; 0x03
    17c0:	82 60       	ori	r24, 0x02	; 2
    17c2:	83 83       	std	Z+3, r24	; 0x03
    17c4:	80 91 b3 03 	lds	r24, 0x03B3	; 0x8003b3 <__iob+0x2>
    17c8:	90 91 b4 03 	lds	r25, 0x03B4	; 0x8003b4 <__iob+0x3>
    17cc:	89 2b       	or	r24, r25
    17ce:	71 f4       	brne	.+28     	; 0x17ec <fdevopen+0x8a>
    17d0:	f0 93 b4 03 	sts	0x03B4, r31	; 0x8003b4 <__iob+0x3>
    17d4:	e0 93 b3 03 	sts	0x03B3, r30	; 0x8003b3 <__iob+0x2>
    17d8:	80 91 b5 03 	lds	r24, 0x03B5	; 0x8003b5 <__iob+0x4>
    17dc:	90 91 b6 03 	lds	r25, 0x03B6	; 0x8003b6 <__iob+0x5>
    17e0:	89 2b       	or	r24, r25
    17e2:	21 f4       	brne	.+8      	; 0x17ec <fdevopen+0x8a>
    17e4:	f0 93 b6 03 	sts	0x03B6, r31	; 0x8003b6 <__iob+0x5>
    17e8:	e0 93 b5 03 	sts	0x03B5, r30	; 0x8003b5 <__iob+0x4>
    17ec:	cf 01       	movw	r24, r30
    17ee:	df 91       	pop	r29
    17f0:	cf 91       	pop	r28
    17f2:	1f 91       	pop	r17
    17f4:	0f 91       	pop	r16
    17f6:	08 95       	ret

000017f8 <printf>:
    17f8:	a0 e0       	ldi	r26, 0x00	; 0
    17fa:	b0 e0       	ldi	r27, 0x00	; 0
    17fc:	e2 e0       	ldi	r30, 0x02	; 2
    17fe:	fc e0       	ldi	r31, 0x0C	; 12
    1800:	0c 94 27 10 	jmp	0x204e	; 0x204e <__prologue_saves__+0x20>
    1804:	ae 01       	movw	r20, r28
    1806:	4b 5f       	subi	r20, 0xFB	; 251
    1808:	5f 4f       	sbci	r21, 0xFF	; 255
    180a:	fa 01       	movw	r30, r20
    180c:	61 91       	ld	r22, Z+
    180e:	71 91       	ld	r23, Z+
    1810:	af 01       	movw	r20, r30
    1812:	80 91 b3 03 	lds	r24, 0x03B3	; 0x8003b3 <__iob+0x2>
    1816:	90 91 b4 03 	lds	r25, 0x03B4	; 0x8003b4 <__iob+0x3>
    181a:	0e 94 42 0c 	call	0x1884	; 0x1884 <vfprintf>
    181e:	e2 e0       	ldi	r30, 0x02	; 2
    1820:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__epilogue_restores__+0x20>

00001824 <puts>:
    1824:	0f 93       	push	r16
    1826:	1f 93       	push	r17
    1828:	cf 93       	push	r28
    182a:	df 93       	push	r29
    182c:	e0 91 b3 03 	lds	r30, 0x03B3	; 0x8003b3 <__iob+0x2>
    1830:	f0 91 b4 03 	lds	r31, 0x03B4	; 0x8003b4 <__iob+0x3>
    1834:	23 81       	ldd	r18, Z+3	; 0x03
    1836:	21 ff       	sbrs	r18, 1
    1838:	1b c0       	rjmp	.+54     	; 0x1870 <puts+0x4c>
    183a:	8c 01       	movw	r16, r24
    183c:	d0 e0       	ldi	r29, 0x00	; 0
    183e:	c0 e0       	ldi	r28, 0x00	; 0
    1840:	f8 01       	movw	r30, r16
    1842:	81 91       	ld	r24, Z+
    1844:	8f 01       	movw	r16, r30
    1846:	60 91 b3 03 	lds	r22, 0x03B3	; 0x8003b3 <__iob+0x2>
    184a:	70 91 b4 03 	lds	r23, 0x03B4	; 0x8003b4 <__iob+0x3>
    184e:	db 01       	movw	r26, r22
    1850:	18 96       	adiw	r26, 0x08	; 8
    1852:	ed 91       	ld	r30, X+
    1854:	fc 91       	ld	r31, X
    1856:	19 97       	sbiw	r26, 0x09	; 9
    1858:	88 23       	and	r24, r24
    185a:	31 f0       	breq	.+12     	; 0x1868 <puts+0x44>
    185c:	09 95       	icall
    185e:	89 2b       	or	r24, r25
    1860:	79 f3       	breq	.-34     	; 0x1840 <puts+0x1c>
    1862:	df ef       	ldi	r29, 0xFF	; 255
    1864:	cf ef       	ldi	r28, 0xFF	; 255
    1866:	ec cf       	rjmp	.-40     	; 0x1840 <puts+0x1c>
    1868:	8a e0       	ldi	r24, 0x0A	; 10
    186a:	09 95       	icall
    186c:	89 2b       	or	r24, r25
    186e:	19 f0       	breq	.+6      	; 0x1876 <puts+0x52>
    1870:	8f ef       	ldi	r24, 0xFF	; 255
    1872:	9f ef       	ldi	r25, 0xFF	; 255
    1874:	02 c0       	rjmp	.+4      	; 0x187a <puts+0x56>
    1876:	8d 2f       	mov	r24, r29
    1878:	9c 2f       	mov	r25, r28
    187a:	df 91       	pop	r29
    187c:	cf 91       	pop	r28
    187e:	1f 91       	pop	r17
    1880:	0f 91       	pop	r16
    1882:	08 95       	ret

00001884 <vfprintf>:
    1884:	ab e0       	ldi	r26, 0x0B	; 11
    1886:	b0 e0       	ldi	r27, 0x00	; 0
    1888:	e8 e4       	ldi	r30, 0x48	; 72
    188a:	fc e0       	ldi	r31, 0x0C	; 12
    188c:	0c 94 17 10 	jmp	0x202e	; 0x202e <__prologue_saves__>
    1890:	6c 01       	movw	r12, r24
    1892:	7b 01       	movw	r14, r22
    1894:	8a 01       	movw	r16, r20
    1896:	fc 01       	movw	r30, r24
    1898:	17 82       	std	Z+7, r1	; 0x07
    189a:	16 82       	std	Z+6, r1	; 0x06
    189c:	83 81       	ldd	r24, Z+3	; 0x03
    189e:	81 ff       	sbrs	r24, 1
    18a0:	cc c1       	rjmp	.+920    	; 0x1c3a <vfprintf+0x3b6>
    18a2:	ce 01       	movw	r24, r28
    18a4:	01 96       	adiw	r24, 0x01	; 1
    18a6:	3c 01       	movw	r6, r24
    18a8:	f6 01       	movw	r30, r12
    18aa:	93 81       	ldd	r25, Z+3	; 0x03
    18ac:	f7 01       	movw	r30, r14
    18ae:	93 fd       	sbrc	r25, 3
    18b0:	85 91       	lpm	r24, Z+
    18b2:	93 ff       	sbrs	r25, 3
    18b4:	81 91       	ld	r24, Z+
    18b6:	7f 01       	movw	r14, r30
    18b8:	88 23       	and	r24, r24
    18ba:	09 f4       	brne	.+2      	; 0x18be <vfprintf+0x3a>
    18bc:	ba c1       	rjmp	.+884    	; 0x1c32 <vfprintf+0x3ae>
    18be:	85 32       	cpi	r24, 0x25	; 37
    18c0:	39 f4       	brne	.+14     	; 0x18d0 <vfprintf+0x4c>
    18c2:	93 fd       	sbrc	r25, 3
    18c4:	85 91       	lpm	r24, Z+
    18c6:	93 ff       	sbrs	r25, 3
    18c8:	81 91       	ld	r24, Z+
    18ca:	7f 01       	movw	r14, r30
    18cc:	85 32       	cpi	r24, 0x25	; 37
    18ce:	29 f4       	brne	.+10     	; 0x18da <vfprintf+0x56>
    18d0:	b6 01       	movw	r22, r12
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <fputc>
    18d8:	e7 cf       	rjmp	.-50     	; 0x18a8 <vfprintf+0x24>
    18da:	91 2c       	mov	r9, r1
    18dc:	21 2c       	mov	r2, r1
    18de:	31 2c       	mov	r3, r1
    18e0:	ff e1       	ldi	r31, 0x1F	; 31
    18e2:	f3 15       	cp	r31, r3
    18e4:	d8 f0       	brcs	.+54     	; 0x191c <vfprintf+0x98>
    18e6:	8b 32       	cpi	r24, 0x2B	; 43
    18e8:	79 f0       	breq	.+30     	; 0x1908 <vfprintf+0x84>
    18ea:	38 f4       	brcc	.+14     	; 0x18fa <vfprintf+0x76>
    18ec:	80 32       	cpi	r24, 0x20	; 32
    18ee:	79 f0       	breq	.+30     	; 0x190e <vfprintf+0x8a>
    18f0:	83 32       	cpi	r24, 0x23	; 35
    18f2:	a1 f4       	brne	.+40     	; 0x191c <vfprintf+0x98>
    18f4:	23 2d       	mov	r18, r3
    18f6:	20 61       	ori	r18, 0x10	; 16
    18f8:	1d c0       	rjmp	.+58     	; 0x1934 <vfprintf+0xb0>
    18fa:	8d 32       	cpi	r24, 0x2D	; 45
    18fc:	61 f0       	breq	.+24     	; 0x1916 <vfprintf+0x92>
    18fe:	80 33       	cpi	r24, 0x30	; 48
    1900:	69 f4       	brne	.+26     	; 0x191c <vfprintf+0x98>
    1902:	23 2d       	mov	r18, r3
    1904:	21 60       	ori	r18, 0x01	; 1
    1906:	16 c0       	rjmp	.+44     	; 0x1934 <vfprintf+0xb0>
    1908:	83 2d       	mov	r24, r3
    190a:	82 60       	ori	r24, 0x02	; 2
    190c:	38 2e       	mov	r3, r24
    190e:	e3 2d       	mov	r30, r3
    1910:	e4 60       	ori	r30, 0x04	; 4
    1912:	3e 2e       	mov	r3, r30
    1914:	2a c0       	rjmp	.+84     	; 0x196a <vfprintf+0xe6>
    1916:	f3 2d       	mov	r31, r3
    1918:	f8 60       	ori	r31, 0x08	; 8
    191a:	1d c0       	rjmp	.+58     	; 0x1956 <vfprintf+0xd2>
    191c:	37 fc       	sbrc	r3, 7
    191e:	2d c0       	rjmp	.+90     	; 0x197a <vfprintf+0xf6>
    1920:	20 ed       	ldi	r18, 0xD0	; 208
    1922:	28 0f       	add	r18, r24
    1924:	2a 30       	cpi	r18, 0x0A	; 10
    1926:	40 f0       	brcs	.+16     	; 0x1938 <vfprintf+0xb4>
    1928:	8e 32       	cpi	r24, 0x2E	; 46
    192a:	b9 f4       	brne	.+46     	; 0x195a <vfprintf+0xd6>
    192c:	36 fc       	sbrc	r3, 6
    192e:	81 c1       	rjmp	.+770    	; 0x1c32 <vfprintf+0x3ae>
    1930:	23 2d       	mov	r18, r3
    1932:	20 64       	ori	r18, 0x40	; 64
    1934:	32 2e       	mov	r3, r18
    1936:	19 c0       	rjmp	.+50     	; 0x196a <vfprintf+0xe6>
    1938:	36 fe       	sbrs	r3, 6
    193a:	06 c0       	rjmp	.+12     	; 0x1948 <vfprintf+0xc4>
    193c:	8a e0       	ldi	r24, 0x0A	; 10
    193e:	98 9e       	mul	r9, r24
    1940:	20 0d       	add	r18, r0
    1942:	11 24       	eor	r1, r1
    1944:	92 2e       	mov	r9, r18
    1946:	11 c0       	rjmp	.+34     	; 0x196a <vfprintf+0xe6>
    1948:	ea e0       	ldi	r30, 0x0A	; 10
    194a:	2e 9e       	mul	r2, r30
    194c:	20 0d       	add	r18, r0
    194e:	11 24       	eor	r1, r1
    1950:	22 2e       	mov	r2, r18
    1952:	f3 2d       	mov	r31, r3
    1954:	f0 62       	ori	r31, 0x20	; 32
    1956:	3f 2e       	mov	r3, r31
    1958:	08 c0       	rjmp	.+16     	; 0x196a <vfprintf+0xe6>
    195a:	8c 36       	cpi	r24, 0x6C	; 108
    195c:	21 f4       	brne	.+8      	; 0x1966 <vfprintf+0xe2>
    195e:	83 2d       	mov	r24, r3
    1960:	80 68       	ori	r24, 0x80	; 128
    1962:	38 2e       	mov	r3, r24
    1964:	02 c0       	rjmp	.+4      	; 0x196a <vfprintf+0xe6>
    1966:	88 36       	cpi	r24, 0x68	; 104
    1968:	41 f4       	brne	.+16     	; 0x197a <vfprintf+0xf6>
    196a:	f7 01       	movw	r30, r14
    196c:	93 fd       	sbrc	r25, 3
    196e:	85 91       	lpm	r24, Z+
    1970:	93 ff       	sbrs	r25, 3
    1972:	81 91       	ld	r24, Z+
    1974:	7f 01       	movw	r14, r30
    1976:	81 11       	cpse	r24, r1
    1978:	b3 cf       	rjmp	.-154    	; 0x18e0 <vfprintf+0x5c>
    197a:	98 2f       	mov	r25, r24
    197c:	9f 7d       	andi	r25, 0xDF	; 223
    197e:	95 54       	subi	r25, 0x45	; 69
    1980:	93 30       	cpi	r25, 0x03	; 3
    1982:	28 f4       	brcc	.+10     	; 0x198e <vfprintf+0x10a>
    1984:	0c 5f       	subi	r16, 0xFC	; 252
    1986:	1f 4f       	sbci	r17, 0xFF	; 255
    1988:	9f e3       	ldi	r25, 0x3F	; 63
    198a:	99 83       	std	Y+1, r25	; 0x01
    198c:	0d c0       	rjmp	.+26     	; 0x19a8 <vfprintf+0x124>
    198e:	83 36       	cpi	r24, 0x63	; 99
    1990:	31 f0       	breq	.+12     	; 0x199e <vfprintf+0x11a>
    1992:	83 37       	cpi	r24, 0x73	; 115
    1994:	71 f0       	breq	.+28     	; 0x19b2 <vfprintf+0x12e>
    1996:	83 35       	cpi	r24, 0x53	; 83
    1998:	09 f0       	breq	.+2      	; 0x199c <vfprintf+0x118>
    199a:	59 c0       	rjmp	.+178    	; 0x1a4e <vfprintf+0x1ca>
    199c:	21 c0       	rjmp	.+66     	; 0x19e0 <vfprintf+0x15c>
    199e:	f8 01       	movw	r30, r16
    19a0:	80 81       	ld	r24, Z
    19a2:	89 83       	std	Y+1, r24	; 0x01
    19a4:	0e 5f       	subi	r16, 0xFE	; 254
    19a6:	1f 4f       	sbci	r17, 0xFF	; 255
    19a8:	88 24       	eor	r8, r8
    19aa:	83 94       	inc	r8
    19ac:	91 2c       	mov	r9, r1
    19ae:	53 01       	movw	r10, r6
    19b0:	13 c0       	rjmp	.+38     	; 0x19d8 <vfprintf+0x154>
    19b2:	28 01       	movw	r4, r16
    19b4:	f2 e0       	ldi	r31, 0x02	; 2
    19b6:	4f 0e       	add	r4, r31
    19b8:	51 1c       	adc	r5, r1
    19ba:	f8 01       	movw	r30, r16
    19bc:	a0 80       	ld	r10, Z
    19be:	b1 80       	ldd	r11, Z+1	; 0x01
    19c0:	36 fe       	sbrs	r3, 6
    19c2:	03 c0       	rjmp	.+6      	; 0x19ca <vfprintf+0x146>
    19c4:	69 2d       	mov	r22, r9
    19c6:	70 e0       	ldi	r23, 0x00	; 0
    19c8:	02 c0       	rjmp	.+4      	; 0x19ce <vfprintf+0x14a>
    19ca:	6f ef       	ldi	r22, 0xFF	; 255
    19cc:	7f ef       	ldi	r23, 0xFF	; 255
    19ce:	c5 01       	movw	r24, r10
    19d0:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <strnlen>
    19d4:	4c 01       	movw	r8, r24
    19d6:	82 01       	movw	r16, r4
    19d8:	f3 2d       	mov	r31, r3
    19da:	ff 77       	andi	r31, 0x7F	; 127
    19dc:	3f 2e       	mov	r3, r31
    19de:	16 c0       	rjmp	.+44     	; 0x1a0c <vfprintf+0x188>
    19e0:	28 01       	movw	r4, r16
    19e2:	22 e0       	ldi	r18, 0x02	; 2
    19e4:	42 0e       	add	r4, r18
    19e6:	51 1c       	adc	r5, r1
    19e8:	f8 01       	movw	r30, r16
    19ea:	a0 80       	ld	r10, Z
    19ec:	b1 80       	ldd	r11, Z+1	; 0x01
    19ee:	36 fe       	sbrs	r3, 6
    19f0:	03 c0       	rjmp	.+6      	; 0x19f8 <vfprintf+0x174>
    19f2:	69 2d       	mov	r22, r9
    19f4:	70 e0       	ldi	r23, 0x00	; 0
    19f6:	02 c0       	rjmp	.+4      	; 0x19fc <vfprintf+0x178>
    19f8:	6f ef       	ldi	r22, 0xFF	; 255
    19fa:	7f ef       	ldi	r23, 0xFF	; 255
    19fc:	c5 01       	movw	r24, r10
    19fe:	0e 94 60 0f 	call	0x1ec0	; 0x1ec0 <strnlen_P>
    1a02:	4c 01       	movw	r8, r24
    1a04:	f3 2d       	mov	r31, r3
    1a06:	f0 68       	ori	r31, 0x80	; 128
    1a08:	3f 2e       	mov	r3, r31
    1a0a:	82 01       	movw	r16, r4
    1a0c:	33 fc       	sbrc	r3, 3
    1a0e:	1b c0       	rjmp	.+54     	; 0x1a46 <vfprintf+0x1c2>
    1a10:	82 2d       	mov	r24, r2
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	88 16       	cp	r8, r24
    1a16:	99 06       	cpc	r9, r25
    1a18:	b0 f4       	brcc	.+44     	; 0x1a46 <vfprintf+0x1c2>
    1a1a:	b6 01       	movw	r22, r12
    1a1c:	80 e2       	ldi	r24, 0x20	; 32
    1a1e:	90 e0       	ldi	r25, 0x00	; 0
    1a20:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <fputc>
    1a24:	2a 94       	dec	r2
    1a26:	f4 cf       	rjmp	.-24     	; 0x1a10 <vfprintf+0x18c>
    1a28:	f5 01       	movw	r30, r10
    1a2a:	37 fc       	sbrc	r3, 7
    1a2c:	85 91       	lpm	r24, Z+
    1a2e:	37 fe       	sbrs	r3, 7
    1a30:	81 91       	ld	r24, Z+
    1a32:	5f 01       	movw	r10, r30
    1a34:	b6 01       	movw	r22, r12
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <fputc>
    1a3c:	21 10       	cpse	r2, r1
    1a3e:	2a 94       	dec	r2
    1a40:	21 e0       	ldi	r18, 0x01	; 1
    1a42:	82 1a       	sub	r8, r18
    1a44:	91 08       	sbc	r9, r1
    1a46:	81 14       	cp	r8, r1
    1a48:	91 04       	cpc	r9, r1
    1a4a:	71 f7       	brne	.-36     	; 0x1a28 <vfprintf+0x1a4>
    1a4c:	e8 c0       	rjmp	.+464    	; 0x1c1e <vfprintf+0x39a>
    1a4e:	84 36       	cpi	r24, 0x64	; 100
    1a50:	11 f0       	breq	.+4      	; 0x1a56 <vfprintf+0x1d2>
    1a52:	89 36       	cpi	r24, 0x69	; 105
    1a54:	41 f5       	brne	.+80     	; 0x1aa6 <vfprintf+0x222>
    1a56:	f8 01       	movw	r30, r16
    1a58:	37 fe       	sbrs	r3, 7
    1a5a:	07 c0       	rjmp	.+14     	; 0x1a6a <vfprintf+0x1e6>
    1a5c:	60 81       	ld	r22, Z
    1a5e:	71 81       	ldd	r23, Z+1	; 0x01
    1a60:	82 81       	ldd	r24, Z+2	; 0x02
    1a62:	93 81       	ldd	r25, Z+3	; 0x03
    1a64:	0c 5f       	subi	r16, 0xFC	; 252
    1a66:	1f 4f       	sbci	r17, 0xFF	; 255
    1a68:	08 c0       	rjmp	.+16     	; 0x1a7a <vfprintf+0x1f6>
    1a6a:	60 81       	ld	r22, Z
    1a6c:	71 81       	ldd	r23, Z+1	; 0x01
    1a6e:	07 2e       	mov	r0, r23
    1a70:	00 0c       	add	r0, r0
    1a72:	88 0b       	sbc	r24, r24
    1a74:	99 0b       	sbc	r25, r25
    1a76:	0e 5f       	subi	r16, 0xFE	; 254
    1a78:	1f 4f       	sbci	r17, 0xFF	; 255
    1a7a:	f3 2d       	mov	r31, r3
    1a7c:	ff 76       	andi	r31, 0x6F	; 111
    1a7e:	3f 2e       	mov	r3, r31
    1a80:	97 ff       	sbrs	r25, 7
    1a82:	09 c0       	rjmp	.+18     	; 0x1a96 <vfprintf+0x212>
    1a84:	90 95       	com	r25
    1a86:	80 95       	com	r24
    1a88:	70 95       	com	r23
    1a8a:	61 95       	neg	r22
    1a8c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a8e:	8f 4f       	sbci	r24, 0xFF	; 255
    1a90:	9f 4f       	sbci	r25, 0xFF	; 255
    1a92:	f0 68       	ori	r31, 0x80	; 128
    1a94:	3f 2e       	mov	r3, r31
    1a96:	2a e0       	ldi	r18, 0x0A	; 10
    1a98:	30 e0       	ldi	r19, 0x00	; 0
    1a9a:	a3 01       	movw	r20, r6
    1a9c:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <__ultoa_invert>
    1aa0:	88 2e       	mov	r8, r24
    1aa2:	86 18       	sub	r8, r6
    1aa4:	45 c0       	rjmp	.+138    	; 0x1b30 <vfprintf+0x2ac>
    1aa6:	85 37       	cpi	r24, 0x75	; 117
    1aa8:	31 f4       	brne	.+12     	; 0x1ab6 <vfprintf+0x232>
    1aaa:	23 2d       	mov	r18, r3
    1aac:	2f 7e       	andi	r18, 0xEF	; 239
    1aae:	b2 2e       	mov	r11, r18
    1ab0:	2a e0       	ldi	r18, 0x0A	; 10
    1ab2:	30 e0       	ldi	r19, 0x00	; 0
    1ab4:	25 c0       	rjmp	.+74     	; 0x1b00 <vfprintf+0x27c>
    1ab6:	93 2d       	mov	r25, r3
    1ab8:	99 7f       	andi	r25, 0xF9	; 249
    1aba:	b9 2e       	mov	r11, r25
    1abc:	8f 36       	cpi	r24, 0x6F	; 111
    1abe:	c1 f0       	breq	.+48     	; 0x1af0 <vfprintf+0x26c>
    1ac0:	18 f4       	brcc	.+6      	; 0x1ac8 <vfprintf+0x244>
    1ac2:	88 35       	cpi	r24, 0x58	; 88
    1ac4:	79 f0       	breq	.+30     	; 0x1ae4 <vfprintf+0x260>
    1ac6:	b5 c0       	rjmp	.+362    	; 0x1c32 <vfprintf+0x3ae>
    1ac8:	80 37       	cpi	r24, 0x70	; 112
    1aca:	19 f0       	breq	.+6      	; 0x1ad2 <vfprintf+0x24e>
    1acc:	88 37       	cpi	r24, 0x78	; 120
    1ace:	21 f0       	breq	.+8      	; 0x1ad8 <vfprintf+0x254>
    1ad0:	b0 c0       	rjmp	.+352    	; 0x1c32 <vfprintf+0x3ae>
    1ad2:	e9 2f       	mov	r30, r25
    1ad4:	e0 61       	ori	r30, 0x10	; 16
    1ad6:	be 2e       	mov	r11, r30
    1ad8:	b4 fe       	sbrs	r11, 4
    1ada:	0d c0       	rjmp	.+26     	; 0x1af6 <vfprintf+0x272>
    1adc:	fb 2d       	mov	r31, r11
    1ade:	f4 60       	ori	r31, 0x04	; 4
    1ae0:	bf 2e       	mov	r11, r31
    1ae2:	09 c0       	rjmp	.+18     	; 0x1af6 <vfprintf+0x272>
    1ae4:	34 fe       	sbrs	r3, 4
    1ae6:	0a c0       	rjmp	.+20     	; 0x1afc <vfprintf+0x278>
    1ae8:	29 2f       	mov	r18, r25
    1aea:	26 60       	ori	r18, 0x06	; 6
    1aec:	b2 2e       	mov	r11, r18
    1aee:	06 c0       	rjmp	.+12     	; 0x1afc <vfprintf+0x278>
    1af0:	28 e0       	ldi	r18, 0x08	; 8
    1af2:	30 e0       	ldi	r19, 0x00	; 0
    1af4:	05 c0       	rjmp	.+10     	; 0x1b00 <vfprintf+0x27c>
    1af6:	20 e1       	ldi	r18, 0x10	; 16
    1af8:	30 e0       	ldi	r19, 0x00	; 0
    1afa:	02 c0       	rjmp	.+4      	; 0x1b00 <vfprintf+0x27c>
    1afc:	20 e1       	ldi	r18, 0x10	; 16
    1afe:	32 e0       	ldi	r19, 0x02	; 2
    1b00:	f8 01       	movw	r30, r16
    1b02:	b7 fe       	sbrs	r11, 7
    1b04:	07 c0       	rjmp	.+14     	; 0x1b14 <vfprintf+0x290>
    1b06:	60 81       	ld	r22, Z
    1b08:	71 81       	ldd	r23, Z+1	; 0x01
    1b0a:	82 81       	ldd	r24, Z+2	; 0x02
    1b0c:	93 81       	ldd	r25, Z+3	; 0x03
    1b0e:	0c 5f       	subi	r16, 0xFC	; 252
    1b10:	1f 4f       	sbci	r17, 0xFF	; 255
    1b12:	06 c0       	rjmp	.+12     	; 0x1b20 <vfprintf+0x29c>
    1b14:	60 81       	ld	r22, Z
    1b16:	71 81       	ldd	r23, Z+1	; 0x01
    1b18:	80 e0       	ldi	r24, 0x00	; 0
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	0e 5f       	subi	r16, 0xFE	; 254
    1b1e:	1f 4f       	sbci	r17, 0xFF	; 255
    1b20:	a3 01       	movw	r20, r6
    1b22:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <__ultoa_invert>
    1b26:	88 2e       	mov	r8, r24
    1b28:	86 18       	sub	r8, r6
    1b2a:	fb 2d       	mov	r31, r11
    1b2c:	ff 77       	andi	r31, 0x7F	; 127
    1b2e:	3f 2e       	mov	r3, r31
    1b30:	36 fe       	sbrs	r3, 6
    1b32:	0d c0       	rjmp	.+26     	; 0x1b4e <vfprintf+0x2ca>
    1b34:	23 2d       	mov	r18, r3
    1b36:	2e 7f       	andi	r18, 0xFE	; 254
    1b38:	a2 2e       	mov	r10, r18
    1b3a:	89 14       	cp	r8, r9
    1b3c:	58 f4       	brcc	.+22     	; 0x1b54 <vfprintf+0x2d0>
    1b3e:	34 fe       	sbrs	r3, 4
    1b40:	0b c0       	rjmp	.+22     	; 0x1b58 <vfprintf+0x2d4>
    1b42:	32 fc       	sbrc	r3, 2
    1b44:	09 c0       	rjmp	.+18     	; 0x1b58 <vfprintf+0x2d4>
    1b46:	83 2d       	mov	r24, r3
    1b48:	8e 7e       	andi	r24, 0xEE	; 238
    1b4a:	a8 2e       	mov	r10, r24
    1b4c:	05 c0       	rjmp	.+10     	; 0x1b58 <vfprintf+0x2d4>
    1b4e:	b8 2c       	mov	r11, r8
    1b50:	a3 2c       	mov	r10, r3
    1b52:	03 c0       	rjmp	.+6      	; 0x1b5a <vfprintf+0x2d6>
    1b54:	b8 2c       	mov	r11, r8
    1b56:	01 c0       	rjmp	.+2      	; 0x1b5a <vfprintf+0x2d6>
    1b58:	b9 2c       	mov	r11, r9
    1b5a:	a4 fe       	sbrs	r10, 4
    1b5c:	0f c0       	rjmp	.+30     	; 0x1b7c <vfprintf+0x2f8>
    1b5e:	fe 01       	movw	r30, r28
    1b60:	e8 0d       	add	r30, r8
    1b62:	f1 1d       	adc	r31, r1
    1b64:	80 81       	ld	r24, Z
    1b66:	80 33       	cpi	r24, 0x30	; 48
    1b68:	21 f4       	brne	.+8      	; 0x1b72 <vfprintf+0x2ee>
    1b6a:	9a 2d       	mov	r25, r10
    1b6c:	99 7e       	andi	r25, 0xE9	; 233
    1b6e:	a9 2e       	mov	r10, r25
    1b70:	09 c0       	rjmp	.+18     	; 0x1b84 <vfprintf+0x300>
    1b72:	a2 fe       	sbrs	r10, 2
    1b74:	06 c0       	rjmp	.+12     	; 0x1b82 <vfprintf+0x2fe>
    1b76:	b3 94       	inc	r11
    1b78:	b3 94       	inc	r11
    1b7a:	04 c0       	rjmp	.+8      	; 0x1b84 <vfprintf+0x300>
    1b7c:	8a 2d       	mov	r24, r10
    1b7e:	86 78       	andi	r24, 0x86	; 134
    1b80:	09 f0       	breq	.+2      	; 0x1b84 <vfprintf+0x300>
    1b82:	b3 94       	inc	r11
    1b84:	a3 fc       	sbrc	r10, 3
    1b86:	11 c0       	rjmp	.+34     	; 0x1baa <vfprintf+0x326>
    1b88:	a0 fe       	sbrs	r10, 0
    1b8a:	06 c0       	rjmp	.+12     	; 0x1b98 <vfprintf+0x314>
    1b8c:	b2 14       	cp	r11, r2
    1b8e:	88 f4       	brcc	.+34     	; 0x1bb2 <vfprintf+0x32e>
    1b90:	28 0c       	add	r2, r8
    1b92:	92 2c       	mov	r9, r2
    1b94:	9b 18       	sub	r9, r11
    1b96:	0e c0       	rjmp	.+28     	; 0x1bb4 <vfprintf+0x330>
    1b98:	b2 14       	cp	r11, r2
    1b9a:	60 f4       	brcc	.+24     	; 0x1bb4 <vfprintf+0x330>
    1b9c:	b6 01       	movw	r22, r12
    1b9e:	80 e2       	ldi	r24, 0x20	; 32
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <fputc>
    1ba6:	b3 94       	inc	r11
    1ba8:	f7 cf       	rjmp	.-18     	; 0x1b98 <vfprintf+0x314>
    1baa:	b2 14       	cp	r11, r2
    1bac:	18 f4       	brcc	.+6      	; 0x1bb4 <vfprintf+0x330>
    1bae:	2b 18       	sub	r2, r11
    1bb0:	02 c0       	rjmp	.+4      	; 0x1bb6 <vfprintf+0x332>
    1bb2:	98 2c       	mov	r9, r8
    1bb4:	21 2c       	mov	r2, r1
    1bb6:	a4 fe       	sbrs	r10, 4
    1bb8:	10 c0       	rjmp	.+32     	; 0x1bda <vfprintf+0x356>
    1bba:	b6 01       	movw	r22, r12
    1bbc:	80 e3       	ldi	r24, 0x30	; 48
    1bbe:	90 e0       	ldi	r25, 0x00	; 0
    1bc0:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <fputc>
    1bc4:	a2 fe       	sbrs	r10, 2
    1bc6:	17 c0       	rjmp	.+46     	; 0x1bf6 <vfprintf+0x372>
    1bc8:	a1 fc       	sbrc	r10, 1
    1bca:	03 c0       	rjmp	.+6      	; 0x1bd2 <vfprintf+0x34e>
    1bcc:	88 e7       	ldi	r24, 0x78	; 120
    1bce:	90 e0       	ldi	r25, 0x00	; 0
    1bd0:	02 c0       	rjmp	.+4      	; 0x1bd6 <vfprintf+0x352>
    1bd2:	88 e5       	ldi	r24, 0x58	; 88
    1bd4:	90 e0       	ldi	r25, 0x00	; 0
    1bd6:	b6 01       	movw	r22, r12
    1bd8:	0c c0       	rjmp	.+24     	; 0x1bf2 <vfprintf+0x36e>
    1bda:	8a 2d       	mov	r24, r10
    1bdc:	86 78       	andi	r24, 0x86	; 134
    1bde:	59 f0       	breq	.+22     	; 0x1bf6 <vfprintf+0x372>
    1be0:	a1 fe       	sbrs	r10, 1
    1be2:	02 c0       	rjmp	.+4      	; 0x1be8 <vfprintf+0x364>
    1be4:	8b e2       	ldi	r24, 0x2B	; 43
    1be6:	01 c0       	rjmp	.+2      	; 0x1bea <vfprintf+0x366>
    1be8:	80 e2       	ldi	r24, 0x20	; 32
    1bea:	a7 fc       	sbrc	r10, 7
    1bec:	8d e2       	ldi	r24, 0x2D	; 45
    1bee:	b6 01       	movw	r22, r12
    1bf0:	90 e0       	ldi	r25, 0x00	; 0
    1bf2:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <fputc>
    1bf6:	89 14       	cp	r8, r9
    1bf8:	38 f4       	brcc	.+14     	; 0x1c08 <vfprintf+0x384>
    1bfa:	b6 01       	movw	r22, r12
    1bfc:	80 e3       	ldi	r24, 0x30	; 48
    1bfe:	90 e0       	ldi	r25, 0x00	; 0
    1c00:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <fputc>
    1c04:	9a 94       	dec	r9
    1c06:	f7 cf       	rjmp	.-18     	; 0x1bf6 <vfprintf+0x372>
    1c08:	8a 94       	dec	r8
    1c0a:	f3 01       	movw	r30, r6
    1c0c:	e8 0d       	add	r30, r8
    1c0e:	f1 1d       	adc	r31, r1
    1c10:	80 81       	ld	r24, Z
    1c12:	b6 01       	movw	r22, r12
    1c14:	90 e0       	ldi	r25, 0x00	; 0
    1c16:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <fputc>
    1c1a:	81 10       	cpse	r8, r1
    1c1c:	f5 cf       	rjmp	.-22     	; 0x1c08 <vfprintf+0x384>
    1c1e:	22 20       	and	r2, r2
    1c20:	09 f4       	brne	.+2      	; 0x1c24 <vfprintf+0x3a0>
    1c22:	42 ce       	rjmp	.-892    	; 0x18a8 <vfprintf+0x24>
    1c24:	b6 01       	movw	r22, r12
    1c26:	80 e2       	ldi	r24, 0x20	; 32
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <fputc>
    1c2e:	2a 94       	dec	r2
    1c30:	f6 cf       	rjmp	.-20     	; 0x1c1e <vfprintf+0x39a>
    1c32:	f6 01       	movw	r30, r12
    1c34:	86 81       	ldd	r24, Z+6	; 0x06
    1c36:	97 81       	ldd	r25, Z+7	; 0x07
    1c38:	02 c0       	rjmp	.+4      	; 0x1c3e <vfprintf+0x3ba>
    1c3a:	8f ef       	ldi	r24, 0xFF	; 255
    1c3c:	9f ef       	ldi	r25, 0xFF	; 255
    1c3e:	2b 96       	adiw	r28, 0x0b	; 11
    1c40:	e2 e1       	ldi	r30, 0x12	; 18
    1c42:	0c 94 33 10 	jmp	0x2066	; 0x2066 <__epilogue_restores__>

00001c46 <calloc>:
    1c46:	0f 93       	push	r16
    1c48:	1f 93       	push	r17
    1c4a:	cf 93       	push	r28
    1c4c:	df 93       	push	r29
    1c4e:	86 9f       	mul	r24, r22
    1c50:	80 01       	movw	r16, r0
    1c52:	87 9f       	mul	r24, r23
    1c54:	10 0d       	add	r17, r0
    1c56:	96 9f       	mul	r25, r22
    1c58:	10 0d       	add	r17, r0
    1c5a:	11 24       	eor	r1, r1
    1c5c:	c8 01       	movw	r24, r16
    1c5e:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <malloc>
    1c62:	ec 01       	movw	r28, r24
    1c64:	00 97       	sbiw	r24, 0x00	; 0
    1c66:	29 f0       	breq	.+10     	; 0x1c72 <calloc+0x2c>
    1c68:	a8 01       	movw	r20, r16
    1c6a:	60 e0       	ldi	r22, 0x00	; 0
    1c6c:	70 e0       	ldi	r23, 0x00	; 0
    1c6e:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <memset>
    1c72:	ce 01       	movw	r24, r28
    1c74:	df 91       	pop	r29
    1c76:	cf 91       	pop	r28
    1c78:	1f 91       	pop	r17
    1c7a:	0f 91       	pop	r16
    1c7c:	08 95       	ret

00001c7e <malloc>:
    1c7e:	0f 93       	push	r16
    1c80:	1f 93       	push	r17
    1c82:	cf 93       	push	r28
    1c84:	df 93       	push	r29
    1c86:	82 30       	cpi	r24, 0x02	; 2
    1c88:	91 05       	cpc	r25, r1
    1c8a:	10 f4       	brcc	.+4      	; 0x1c90 <malloc+0x12>
    1c8c:	82 e0       	ldi	r24, 0x02	; 2
    1c8e:	90 e0       	ldi	r25, 0x00	; 0
    1c90:	e0 91 b9 03 	lds	r30, 0x03B9	; 0x8003b9 <__flp>
    1c94:	f0 91 ba 03 	lds	r31, 0x03BA	; 0x8003ba <__flp+0x1>
    1c98:	20 e0       	ldi	r18, 0x00	; 0
    1c9a:	30 e0       	ldi	r19, 0x00	; 0
    1c9c:	a0 e0       	ldi	r26, 0x00	; 0
    1c9e:	b0 e0       	ldi	r27, 0x00	; 0
    1ca0:	30 97       	sbiw	r30, 0x00	; 0
    1ca2:	19 f1       	breq	.+70     	; 0x1cea <malloc+0x6c>
    1ca4:	40 81       	ld	r20, Z
    1ca6:	51 81       	ldd	r21, Z+1	; 0x01
    1ca8:	02 81       	ldd	r16, Z+2	; 0x02
    1caa:	13 81       	ldd	r17, Z+3	; 0x03
    1cac:	48 17       	cp	r20, r24
    1cae:	59 07       	cpc	r21, r25
    1cb0:	c8 f0       	brcs	.+50     	; 0x1ce4 <malloc+0x66>
    1cb2:	84 17       	cp	r24, r20
    1cb4:	95 07       	cpc	r25, r21
    1cb6:	69 f4       	brne	.+26     	; 0x1cd2 <malloc+0x54>
    1cb8:	10 97       	sbiw	r26, 0x00	; 0
    1cba:	31 f0       	breq	.+12     	; 0x1cc8 <malloc+0x4a>
    1cbc:	12 96       	adiw	r26, 0x02	; 2
    1cbe:	0c 93       	st	X, r16
    1cc0:	12 97       	sbiw	r26, 0x02	; 2
    1cc2:	13 96       	adiw	r26, 0x03	; 3
    1cc4:	1c 93       	st	X, r17
    1cc6:	27 c0       	rjmp	.+78     	; 0x1d16 <malloc+0x98>
    1cc8:	00 93 b9 03 	sts	0x03B9, r16	; 0x8003b9 <__flp>
    1ccc:	10 93 ba 03 	sts	0x03BA, r17	; 0x8003ba <__flp+0x1>
    1cd0:	22 c0       	rjmp	.+68     	; 0x1d16 <malloc+0x98>
    1cd2:	21 15       	cp	r18, r1
    1cd4:	31 05       	cpc	r19, r1
    1cd6:	19 f0       	breq	.+6      	; 0x1cde <malloc+0x60>
    1cd8:	42 17       	cp	r20, r18
    1cda:	53 07       	cpc	r21, r19
    1cdc:	18 f4       	brcc	.+6      	; 0x1ce4 <malloc+0x66>
    1cde:	9a 01       	movw	r18, r20
    1ce0:	bd 01       	movw	r22, r26
    1ce2:	ef 01       	movw	r28, r30
    1ce4:	df 01       	movw	r26, r30
    1ce6:	f8 01       	movw	r30, r16
    1ce8:	db cf       	rjmp	.-74     	; 0x1ca0 <malloc+0x22>
    1cea:	21 15       	cp	r18, r1
    1cec:	31 05       	cpc	r19, r1
    1cee:	f9 f0       	breq	.+62     	; 0x1d2e <malloc+0xb0>
    1cf0:	28 1b       	sub	r18, r24
    1cf2:	39 0b       	sbc	r19, r25
    1cf4:	24 30       	cpi	r18, 0x04	; 4
    1cf6:	31 05       	cpc	r19, r1
    1cf8:	80 f4       	brcc	.+32     	; 0x1d1a <malloc+0x9c>
    1cfa:	8a 81       	ldd	r24, Y+2	; 0x02
    1cfc:	9b 81       	ldd	r25, Y+3	; 0x03
    1cfe:	61 15       	cp	r22, r1
    1d00:	71 05       	cpc	r23, r1
    1d02:	21 f0       	breq	.+8      	; 0x1d0c <malloc+0x8e>
    1d04:	fb 01       	movw	r30, r22
    1d06:	93 83       	std	Z+3, r25	; 0x03
    1d08:	82 83       	std	Z+2, r24	; 0x02
    1d0a:	04 c0       	rjmp	.+8      	; 0x1d14 <malloc+0x96>
    1d0c:	90 93 ba 03 	sts	0x03BA, r25	; 0x8003ba <__flp+0x1>
    1d10:	80 93 b9 03 	sts	0x03B9, r24	; 0x8003b9 <__flp>
    1d14:	fe 01       	movw	r30, r28
    1d16:	32 96       	adiw	r30, 0x02	; 2
    1d18:	44 c0       	rjmp	.+136    	; 0x1da2 <malloc+0x124>
    1d1a:	fe 01       	movw	r30, r28
    1d1c:	e2 0f       	add	r30, r18
    1d1e:	f3 1f       	adc	r31, r19
    1d20:	81 93       	st	Z+, r24
    1d22:	91 93       	st	Z+, r25
    1d24:	22 50       	subi	r18, 0x02	; 2
    1d26:	31 09       	sbc	r19, r1
    1d28:	39 83       	std	Y+1, r19	; 0x01
    1d2a:	28 83       	st	Y, r18
    1d2c:	3a c0       	rjmp	.+116    	; 0x1da2 <malloc+0x124>
    1d2e:	20 91 b7 03 	lds	r18, 0x03B7	; 0x8003b7 <__brkval>
    1d32:	30 91 b8 03 	lds	r19, 0x03B8	; 0x8003b8 <__brkval+0x1>
    1d36:	23 2b       	or	r18, r19
    1d38:	41 f4       	brne	.+16     	; 0x1d4a <malloc+0xcc>
    1d3a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1d3e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1d42:	30 93 b8 03 	sts	0x03B8, r19	; 0x8003b8 <__brkval+0x1>
    1d46:	20 93 b7 03 	sts	0x03B7, r18	; 0x8003b7 <__brkval>
    1d4a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d4e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d52:	21 15       	cp	r18, r1
    1d54:	31 05       	cpc	r19, r1
    1d56:	41 f4       	brne	.+16     	; 0x1d68 <malloc+0xea>
    1d58:	2d b7       	in	r18, 0x3d	; 61
    1d5a:	3e b7       	in	r19, 0x3e	; 62
    1d5c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1d60:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1d64:	24 1b       	sub	r18, r20
    1d66:	35 0b       	sbc	r19, r21
    1d68:	e0 91 b7 03 	lds	r30, 0x03B7	; 0x8003b7 <__brkval>
    1d6c:	f0 91 b8 03 	lds	r31, 0x03B8	; 0x8003b8 <__brkval+0x1>
    1d70:	e2 17       	cp	r30, r18
    1d72:	f3 07       	cpc	r31, r19
    1d74:	a0 f4       	brcc	.+40     	; 0x1d9e <malloc+0x120>
    1d76:	2e 1b       	sub	r18, r30
    1d78:	3f 0b       	sbc	r19, r31
    1d7a:	28 17       	cp	r18, r24
    1d7c:	39 07       	cpc	r19, r25
    1d7e:	78 f0       	brcs	.+30     	; 0x1d9e <malloc+0x120>
    1d80:	ac 01       	movw	r20, r24
    1d82:	4e 5f       	subi	r20, 0xFE	; 254
    1d84:	5f 4f       	sbci	r21, 0xFF	; 255
    1d86:	24 17       	cp	r18, r20
    1d88:	35 07       	cpc	r19, r21
    1d8a:	48 f0       	brcs	.+18     	; 0x1d9e <malloc+0x120>
    1d8c:	4e 0f       	add	r20, r30
    1d8e:	5f 1f       	adc	r21, r31
    1d90:	50 93 b8 03 	sts	0x03B8, r21	; 0x8003b8 <__brkval+0x1>
    1d94:	40 93 b7 03 	sts	0x03B7, r20	; 0x8003b7 <__brkval>
    1d98:	81 93       	st	Z+, r24
    1d9a:	91 93       	st	Z+, r25
    1d9c:	02 c0       	rjmp	.+4      	; 0x1da2 <malloc+0x124>
    1d9e:	e0 e0       	ldi	r30, 0x00	; 0
    1da0:	f0 e0       	ldi	r31, 0x00	; 0
    1da2:	cf 01       	movw	r24, r30
    1da4:	df 91       	pop	r29
    1da6:	cf 91       	pop	r28
    1da8:	1f 91       	pop	r17
    1daa:	0f 91       	pop	r16
    1dac:	08 95       	ret

00001dae <free>:
    1dae:	cf 93       	push	r28
    1db0:	df 93       	push	r29
    1db2:	00 97       	sbiw	r24, 0x00	; 0
    1db4:	09 f4       	brne	.+2      	; 0x1db8 <free+0xa>
    1db6:	81 c0       	rjmp	.+258    	; 0x1eba <free+0x10c>
    1db8:	fc 01       	movw	r30, r24
    1dba:	32 97       	sbiw	r30, 0x02	; 2
    1dbc:	13 82       	std	Z+3, r1	; 0x03
    1dbe:	12 82       	std	Z+2, r1	; 0x02
    1dc0:	a0 91 b9 03 	lds	r26, 0x03B9	; 0x8003b9 <__flp>
    1dc4:	b0 91 ba 03 	lds	r27, 0x03BA	; 0x8003ba <__flp+0x1>
    1dc8:	10 97       	sbiw	r26, 0x00	; 0
    1dca:	81 f4       	brne	.+32     	; 0x1dec <free+0x3e>
    1dcc:	20 81       	ld	r18, Z
    1dce:	31 81       	ldd	r19, Z+1	; 0x01
    1dd0:	82 0f       	add	r24, r18
    1dd2:	93 1f       	adc	r25, r19
    1dd4:	20 91 b7 03 	lds	r18, 0x03B7	; 0x8003b7 <__brkval>
    1dd8:	30 91 b8 03 	lds	r19, 0x03B8	; 0x8003b8 <__brkval+0x1>
    1ddc:	28 17       	cp	r18, r24
    1dde:	39 07       	cpc	r19, r25
    1de0:	51 f5       	brne	.+84     	; 0x1e36 <free+0x88>
    1de2:	f0 93 b8 03 	sts	0x03B8, r31	; 0x8003b8 <__brkval+0x1>
    1de6:	e0 93 b7 03 	sts	0x03B7, r30	; 0x8003b7 <__brkval>
    1dea:	67 c0       	rjmp	.+206    	; 0x1eba <free+0x10c>
    1dec:	ed 01       	movw	r28, r26
    1dee:	20 e0       	ldi	r18, 0x00	; 0
    1df0:	30 e0       	ldi	r19, 0x00	; 0
    1df2:	ce 17       	cp	r28, r30
    1df4:	df 07       	cpc	r29, r31
    1df6:	40 f4       	brcc	.+16     	; 0x1e08 <free+0x5a>
    1df8:	4a 81       	ldd	r20, Y+2	; 0x02
    1dfa:	5b 81       	ldd	r21, Y+3	; 0x03
    1dfc:	9e 01       	movw	r18, r28
    1dfe:	41 15       	cp	r20, r1
    1e00:	51 05       	cpc	r21, r1
    1e02:	f1 f0       	breq	.+60     	; 0x1e40 <free+0x92>
    1e04:	ea 01       	movw	r28, r20
    1e06:	f5 cf       	rjmp	.-22     	; 0x1df2 <free+0x44>
    1e08:	d3 83       	std	Z+3, r29	; 0x03
    1e0a:	c2 83       	std	Z+2, r28	; 0x02
    1e0c:	40 81       	ld	r20, Z
    1e0e:	51 81       	ldd	r21, Z+1	; 0x01
    1e10:	84 0f       	add	r24, r20
    1e12:	95 1f       	adc	r25, r21
    1e14:	c8 17       	cp	r28, r24
    1e16:	d9 07       	cpc	r29, r25
    1e18:	59 f4       	brne	.+22     	; 0x1e30 <free+0x82>
    1e1a:	88 81       	ld	r24, Y
    1e1c:	99 81       	ldd	r25, Y+1	; 0x01
    1e1e:	84 0f       	add	r24, r20
    1e20:	95 1f       	adc	r25, r21
    1e22:	02 96       	adiw	r24, 0x02	; 2
    1e24:	91 83       	std	Z+1, r25	; 0x01
    1e26:	80 83       	st	Z, r24
    1e28:	8a 81       	ldd	r24, Y+2	; 0x02
    1e2a:	9b 81       	ldd	r25, Y+3	; 0x03
    1e2c:	93 83       	std	Z+3, r25	; 0x03
    1e2e:	82 83       	std	Z+2, r24	; 0x02
    1e30:	21 15       	cp	r18, r1
    1e32:	31 05       	cpc	r19, r1
    1e34:	29 f4       	brne	.+10     	; 0x1e40 <free+0x92>
    1e36:	f0 93 ba 03 	sts	0x03BA, r31	; 0x8003ba <__flp+0x1>
    1e3a:	e0 93 b9 03 	sts	0x03B9, r30	; 0x8003b9 <__flp>
    1e3e:	3d c0       	rjmp	.+122    	; 0x1eba <free+0x10c>
    1e40:	e9 01       	movw	r28, r18
    1e42:	fb 83       	std	Y+3, r31	; 0x03
    1e44:	ea 83       	std	Y+2, r30	; 0x02
    1e46:	49 91       	ld	r20, Y+
    1e48:	59 91       	ld	r21, Y+
    1e4a:	c4 0f       	add	r28, r20
    1e4c:	d5 1f       	adc	r29, r21
    1e4e:	ec 17       	cp	r30, r28
    1e50:	fd 07       	cpc	r31, r29
    1e52:	61 f4       	brne	.+24     	; 0x1e6c <free+0xbe>
    1e54:	80 81       	ld	r24, Z
    1e56:	91 81       	ldd	r25, Z+1	; 0x01
    1e58:	84 0f       	add	r24, r20
    1e5a:	95 1f       	adc	r25, r21
    1e5c:	02 96       	adiw	r24, 0x02	; 2
    1e5e:	e9 01       	movw	r28, r18
    1e60:	99 83       	std	Y+1, r25	; 0x01
    1e62:	88 83       	st	Y, r24
    1e64:	82 81       	ldd	r24, Z+2	; 0x02
    1e66:	93 81       	ldd	r25, Z+3	; 0x03
    1e68:	9b 83       	std	Y+3, r25	; 0x03
    1e6a:	8a 83       	std	Y+2, r24	; 0x02
    1e6c:	e0 e0       	ldi	r30, 0x00	; 0
    1e6e:	f0 e0       	ldi	r31, 0x00	; 0
    1e70:	12 96       	adiw	r26, 0x02	; 2
    1e72:	8d 91       	ld	r24, X+
    1e74:	9c 91       	ld	r25, X
    1e76:	13 97       	sbiw	r26, 0x03	; 3
    1e78:	00 97       	sbiw	r24, 0x00	; 0
    1e7a:	19 f0       	breq	.+6      	; 0x1e82 <free+0xd4>
    1e7c:	fd 01       	movw	r30, r26
    1e7e:	dc 01       	movw	r26, r24
    1e80:	f7 cf       	rjmp	.-18     	; 0x1e70 <free+0xc2>
    1e82:	8d 91       	ld	r24, X+
    1e84:	9c 91       	ld	r25, X
    1e86:	11 97       	sbiw	r26, 0x01	; 1
    1e88:	9d 01       	movw	r18, r26
    1e8a:	2e 5f       	subi	r18, 0xFE	; 254
    1e8c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e8e:	82 0f       	add	r24, r18
    1e90:	93 1f       	adc	r25, r19
    1e92:	20 91 b7 03 	lds	r18, 0x03B7	; 0x8003b7 <__brkval>
    1e96:	30 91 b8 03 	lds	r19, 0x03B8	; 0x8003b8 <__brkval+0x1>
    1e9a:	28 17       	cp	r18, r24
    1e9c:	39 07       	cpc	r19, r25
    1e9e:	69 f4       	brne	.+26     	; 0x1eba <free+0x10c>
    1ea0:	30 97       	sbiw	r30, 0x00	; 0
    1ea2:	29 f4       	brne	.+10     	; 0x1eae <free+0x100>
    1ea4:	10 92 ba 03 	sts	0x03BA, r1	; 0x8003ba <__flp+0x1>
    1ea8:	10 92 b9 03 	sts	0x03B9, r1	; 0x8003b9 <__flp>
    1eac:	02 c0       	rjmp	.+4      	; 0x1eb2 <free+0x104>
    1eae:	13 82       	std	Z+3, r1	; 0x03
    1eb0:	12 82       	std	Z+2, r1	; 0x02
    1eb2:	b0 93 b8 03 	sts	0x03B8, r27	; 0x8003b8 <__brkval+0x1>
    1eb6:	a0 93 b7 03 	sts	0x03B7, r26	; 0x8003b7 <__brkval>
    1eba:	df 91       	pop	r29
    1ebc:	cf 91       	pop	r28
    1ebe:	08 95       	ret

00001ec0 <strnlen_P>:
    1ec0:	fc 01       	movw	r30, r24
    1ec2:	05 90       	lpm	r0, Z+
    1ec4:	61 50       	subi	r22, 0x01	; 1
    1ec6:	70 40       	sbci	r23, 0x00	; 0
    1ec8:	01 10       	cpse	r0, r1
    1eca:	d8 f7       	brcc	.-10     	; 0x1ec2 <strnlen_P+0x2>
    1ecc:	80 95       	com	r24
    1ece:	90 95       	com	r25
    1ed0:	8e 0f       	add	r24, r30
    1ed2:	9f 1f       	adc	r25, r31
    1ed4:	08 95       	ret

00001ed6 <memset>:
    1ed6:	dc 01       	movw	r26, r24
    1ed8:	01 c0       	rjmp	.+2      	; 0x1edc <memset+0x6>
    1eda:	6d 93       	st	X+, r22
    1edc:	41 50       	subi	r20, 0x01	; 1
    1ede:	50 40       	sbci	r21, 0x00	; 0
    1ee0:	e0 f7       	brcc	.-8      	; 0x1eda <memset+0x4>
    1ee2:	08 95       	ret

00001ee4 <strnlen>:
    1ee4:	fc 01       	movw	r30, r24
    1ee6:	61 50       	subi	r22, 0x01	; 1
    1ee8:	70 40       	sbci	r23, 0x00	; 0
    1eea:	01 90       	ld	r0, Z+
    1eec:	01 10       	cpse	r0, r1
    1eee:	d8 f7       	brcc	.-10     	; 0x1ee6 <strnlen+0x2>
    1ef0:	80 95       	com	r24
    1ef2:	90 95       	com	r25
    1ef4:	8e 0f       	add	r24, r30
    1ef6:	9f 1f       	adc	r25, r31
    1ef8:	08 95       	ret

00001efa <fputc>:
    1efa:	0f 93       	push	r16
    1efc:	1f 93       	push	r17
    1efe:	cf 93       	push	r28
    1f00:	df 93       	push	r29
    1f02:	fb 01       	movw	r30, r22
    1f04:	23 81       	ldd	r18, Z+3	; 0x03
    1f06:	21 fd       	sbrc	r18, 1
    1f08:	03 c0       	rjmp	.+6      	; 0x1f10 <fputc+0x16>
    1f0a:	8f ef       	ldi	r24, 0xFF	; 255
    1f0c:	9f ef       	ldi	r25, 0xFF	; 255
    1f0e:	2c c0       	rjmp	.+88     	; 0x1f68 <fputc+0x6e>
    1f10:	22 ff       	sbrs	r18, 2
    1f12:	16 c0       	rjmp	.+44     	; 0x1f40 <fputc+0x46>
    1f14:	46 81       	ldd	r20, Z+6	; 0x06
    1f16:	57 81       	ldd	r21, Z+7	; 0x07
    1f18:	24 81       	ldd	r18, Z+4	; 0x04
    1f1a:	35 81       	ldd	r19, Z+5	; 0x05
    1f1c:	42 17       	cp	r20, r18
    1f1e:	53 07       	cpc	r21, r19
    1f20:	44 f4       	brge	.+16     	; 0x1f32 <fputc+0x38>
    1f22:	a0 81       	ld	r26, Z
    1f24:	b1 81       	ldd	r27, Z+1	; 0x01
    1f26:	9d 01       	movw	r18, r26
    1f28:	2f 5f       	subi	r18, 0xFF	; 255
    1f2a:	3f 4f       	sbci	r19, 0xFF	; 255
    1f2c:	31 83       	std	Z+1, r19	; 0x01
    1f2e:	20 83       	st	Z, r18
    1f30:	8c 93       	st	X, r24
    1f32:	26 81       	ldd	r18, Z+6	; 0x06
    1f34:	37 81       	ldd	r19, Z+7	; 0x07
    1f36:	2f 5f       	subi	r18, 0xFF	; 255
    1f38:	3f 4f       	sbci	r19, 0xFF	; 255
    1f3a:	37 83       	std	Z+7, r19	; 0x07
    1f3c:	26 83       	std	Z+6, r18	; 0x06
    1f3e:	14 c0       	rjmp	.+40     	; 0x1f68 <fputc+0x6e>
    1f40:	8b 01       	movw	r16, r22
    1f42:	ec 01       	movw	r28, r24
    1f44:	fb 01       	movw	r30, r22
    1f46:	00 84       	ldd	r0, Z+8	; 0x08
    1f48:	f1 85       	ldd	r31, Z+9	; 0x09
    1f4a:	e0 2d       	mov	r30, r0
    1f4c:	09 95       	icall
    1f4e:	89 2b       	or	r24, r25
    1f50:	e1 f6       	brne	.-72     	; 0x1f0a <fputc+0x10>
    1f52:	d8 01       	movw	r26, r16
    1f54:	16 96       	adiw	r26, 0x06	; 6
    1f56:	8d 91       	ld	r24, X+
    1f58:	9c 91       	ld	r25, X
    1f5a:	17 97       	sbiw	r26, 0x07	; 7
    1f5c:	01 96       	adiw	r24, 0x01	; 1
    1f5e:	17 96       	adiw	r26, 0x07	; 7
    1f60:	9c 93       	st	X, r25
    1f62:	8e 93       	st	-X, r24
    1f64:	16 97       	sbiw	r26, 0x06	; 6
    1f66:	ce 01       	movw	r24, r28
    1f68:	df 91       	pop	r29
    1f6a:	cf 91       	pop	r28
    1f6c:	1f 91       	pop	r17
    1f6e:	0f 91       	pop	r16
    1f70:	08 95       	ret

00001f72 <__ultoa_invert>:
    1f72:	fa 01       	movw	r30, r20
    1f74:	aa 27       	eor	r26, r26
    1f76:	28 30       	cpi	r18, 0x08	; 8
    1f78:	51 f1       	breq	.+84     	; 0x1fce <__ultoa_invert+0x5c>
    1f7a:	20 31       	cpi	r18, 0x10	; 16
    1f7c:	81 f1       	breq	.+96     	; 0x1fde <__ultoa_invert+0x6c>
    1f7e:	e8 94       	clt
    1f80:	6f 93       	push	r22
    1f82:	6e 7f       	andi	r22, 0xFE	; 254
    1f84:	6e 5f       	subi	r22, 0xFE	; 254
    1f86:	7f 4f       	sbci	r23, 0xFF	; 255
    1f88:	8f 4f       	sbci	r24, 0xFF	; 255
    1f8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f8c:	af 4f       	sbci	r26, 0xFF	; 255
    1f8e:	b1 e0       	ldi	r27, 0x01	; 1
    1f90:	3e d0       	rcall	.+124    	; 0x200e <__ultoa_invert+0x9c>
    1f92:	b4 e0       	ldi	r27, 0x04	; 4
    1f94:	3c d0       	rcall	.+120    	; 0x200e <__ultoa_invert+0x9c>
    1f96:	67 0f       	add	r22, r23
    1f98:	78 1f       	adc	r23, r24
    1f9a:	89 1f       	adc	r24, r25
    1f9c:	9a 1f       	adc	r25, r26
    1f9e:	a1 1d       	adc	r26, r1
    1fa0:	68 0f       	add	r22, r24
    1fa2:	79 1f       	adc	r23, r25
    1fa4:	8a 1f       	adc	r24, r26
    1fa6:	91 1d       	adc	r25, r1
    1fa8:	a1 1d       	adc	r26, r1
    1faa:	6a 0f       	add	r22, r26
    1fac:	71 1d       	adc	r23, r1
    1fae:	81 1d       	adc	r24, r1
    1fb0:	91 1d       	adc	r25, r1
    1fb2:	a1 1d       	adc	r26, r1
    1fb4:	20 d0       	rcall	.+64     	; 0x1ff6 <__ultoa_invert+0x84>
    1fb6:	09 f4       	brne	.+2      	; 0x1fba <__ultoa_invert+0x48>
    1fb8:	68 94       	set
    1fba:	3f 91       	pop	r19
    1fbc:	2a e0       	ldi	r18, 0x0A	; 10
    1fbe:	26 9f       	mul	r18, r22
    1fc0:	11 24       	eor	r1, r1
    1fc2:	30 19       	sub	r19, r0
    1fc4:	30 5d       	subi	r19, 0xD0	; 208
    1fc6:	31 93       	st	Z+, r19
    1fc8:	de f6       	brtc	.-74     	; 0x1f80 <__ultoa_invert+0xe>
    1fca:	cf 01       	movw	r24, r30
    1fcc:	08 95       	ret
    1fce:	46 2f       	mov	r20, r22
    1fd0:	47 70       	andi	r20, 0x07	; 7
    1fd2:	40 5d       	subi	r20, 0xD0	; 208
    1fd4:	41 93       	st	Z+, r20
    1fd6:	b3 e0       	ldi	r27, 0x03	; 3
    1fd8:	0f d0       	rcall	.+30     	; 0x1ff8 <__ultoa_invert+0x86>
    1fda:	c9 f7       	brne	.-14     	; 0x1fce <__ultoa_invert+0x5c>
    1fdc:	f6 cf       	rjmp	.-20     	; 0x1fca <__ultoa_invert+0x58>
    1fde:	46 2f       	mov	r20, r22
    1fe0:	4f 70       	andi	r20, 0x0F	; 15
    1fe2:	40 5d       	subi	r20, 0xD0	; 208
    1fe4:	4a 33       	cpi	r20, 0x3A	; 58
    1fe6:	18 f0       	brcs	.+6      	; 0x1fee <__ultoa_invert+0x7c>
    1fe8:	49 5d       	subi	r20, 0xD9	; 217
    1fea:	31 fd       	sbrc	r19, 1
    1fec:	40 52       	subi	r20, 0x20	; 32
    1fee:	41 93       	st	Z+, r20
    1ff0:	02 d0       	rcall	.+4      	; 0x1ff6 <__ultoa_invert+0x84>
    1ff2:	a9 f7       	brne	.-22     	; 0x1fde <__ultoa_invert+0x6c>
    1ff4:	ea cf       	rjmp	.-44     	; 0x1fca <__ultoa_invert+0x58>
    1ff6:	b4 e0       	ldi	r27, 0x04	; 4
    1ff8:	a6 95       	lsr	r26
    1ffa:	97 95       	ror	r25
    1ffc:	87 95       	ror	r24
    1ffe:	77 95       	ror	r23
    2000:	67 95       	ror	r22
    2002:	ba 95       	dec	r27
    2004:	c9 f7       	brne	.-14     	; 0x1ff8 <__ultoa_invert+0x86>
    2006:	00 97       	sbiw	r24, 0x00	; 0
    2008:	61 05       	cpc	r22, r1
    200a:	71 05       	cpc	r23, r1
    200c:	08 95       	ret
    200e:	9b 01       	movw	r18, r22
    2010:	ac 01       	movw	r20, r24
    2012:	0a 2e       	mov	r0, r26
    2014:	06 94       	lsr	r0
    2016:	57 95       	ror	r21
    2018:	47 95       	ror	r20
    201a:	37 95       	ror	r19
    201c:	27 95       	ror	r18
    201e:	ba 95       	dec	r27
    2020:	c9 f7       	brne	.-14     	; 0x2014 <__ultoa_invert+0xa2>
    2022:	62 0f       	add	r22, r18
    2024:	73 1f       	adc	r23, r19
    2026:	84 1f       	adc	r24, r20
    2028:	95 1f       	adc	r25, r21
    202a:	a0 1d       	adc	r26, r0
    202c:	08 95       	ret

0000202e <__prologue_saves__>:
    202e:	2f 92       	push	r2
    2030:	3f 92       	push	r3
    2032:	4f 92       	push	r4
    2034:	5f 92       	push	r5
    2036:	6f 92       	push	r6
    2038:	7f 92       	push	r7
    203a:	8f 92       	push	r8
    203c:	9f 92       	push	r9
    203e:	af 92       	push	r10
    2040:	bf 92       	push	r11
    2042:	cf 92       	push	r12
    2044:	df 92       	push	r13
    2046:	ef 92       	push	r14
    2048:	ff 92       	push	r15
    204a:	0f 93       	push	r16
    204c:	1f 93       	push	r17
    204e:	cf 93       	push	r28
    2050:	df 93       	push	r29
    2052:	cd b7       	in	r28, 0x3d	; 61
    2054:	de b7       	in	r29, 0x3e	; 62
    2056:	ca 1b       	sub	r28, r26
    2058:	db 0b       	sbc	r29, r27
    205a:	0f b6       	in	r0, 0x3f	; 63
    205c:	f8 94       	cli
    205e:	de bf       	out	0x3e, r29	; 62
    2060:	0f be       	out	0x3f, r0	; 63
    2062:	cd bf       	out	0x3d, r28	; 61
    2064:	09 94       	ijmp

00002066 <__epilogue_restores__>:
    2066:	2a 88       	ldd	r2, Y+18	; 0x12
    2068:	39 88       	ldd	r3, Y+17	; 0x11
    206a:	48 88       	ldd	r4, Y+16	; 0x10
    206c:	5f 84       	ldd	r5, Y+15	; 0x0f
    206e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2070:	7d 84       	ldd	r7, Y+13	; 0x0d
    2072:	8c 84       	ldd	r8, Y+12	; 0x0c
    2074:	9b 84       	ldd	r9, Y+11	; 0x0b
    2076:	aa 84       	ldd	r10, Y+10	; 0x0a
    2078:	b9 84       	ldd	r11, Y+9	; 0x09
    207a:	c8 84       	ldd	r12, Y+8	; 0x08
    207c:	df 80       	ldd	r13, Y+7	; 0x07
    207e:	ee 80       	ldd	r14, Y+6	; 0x06
    2080:	fd 80       	ldd	r15, Y+5	; 0x05
    2082:	0c 81       	ldd	r16, Y+4	; 0x04
    2084:	1b 81       	ldd	r17, Y+3	; 0x03
    2086:	aa 81       	ldd	r26, Y+2	; 0x02
    2088:	b9 81       	ldd	r27, Y+1	; 0x01
    208a:	ce 0f       	add	r28, r30
    208c:	d1 1d       	adc	r29, r1
    208e:	0f b6       	in	r0, 0x3f	; 63
    2090:	f8 94       	cli
    2092:	de bf       	out	0x3e, r29	; 62
    2094:	0f be       	out	0x3f, r0	; 63
    2096:	cd bf       	out	0x3d, r28	; 61
    2098:	ed 01       	movw	r28, r26
    209a:	08 95       	ret

0000209c <_exit>:
    209c:	f8 94       	cli

0000209e <__stop_program>:
    209e:	ff cf       	rjmp	.-2      	; 0x209e <__stop_program>
