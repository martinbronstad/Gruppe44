
Gruppe44.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f0  00800100  00000cb2  00000d46  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cb2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001f0  008001f0  00000e36  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e36  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e94  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009bf  00000000  00000000  00000f40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000080e  00000000  00000000  000018ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ed  00000000  00000000  0000210d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  000025fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004be  00000000  00000000  000026f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001ce  00000000  00000000  00002bb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00002d80  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 eb       	ldi	r30, 0xB2	; 178
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 3f       	cpi	r26, 0xF0	; 240
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 ef       	ldi	r26, 0xF0	; 240
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 3f       	cpi	r26, 0xFA	; 250
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 66 00 	call	0xcc	; 0xcc <main>
  a6:	0c 94 57 06 	jmp	0xcae	; 0xcae <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <USART_Init>:
  ae:	9c bf       	out	0x3c, r25	; 60
  b0:	80 b9       	out	0x00, r24	; 0
  b2:	88 e1       	ldi	r24, 0x18	; 24
  b4:	81 b9       	out	0x01, r24	; 1
  b6:	8e e8       	ldi	r24, 0x8E	; 142
  b8:	8c bf       	out	0x3c, r24	; 60
  ba:	08 95       	ret

000000bc <USART_Transmit>:
  bc:	15 9b       	sbis	0x02, 5	; 2
  be:	fe cf       	rjmp	.-4      	; 0xbc <USART_Transmit>
  c0:	83 b9       	out	0x03, r24	; 3
  c2:	08 95       	ret

000000c4 <USART_Receive>:
  c4:	17 9b       	sbis	0x02, 7	; 2
  c6:	fe cf       	rjmp	.-4      	; 0xc4 <USART_Receive>
  c8:	83 b1       	in	r24, 0x03	; 3
  ca:	08 95       	ret

000000cc <main>:


int main(void)
{
	//FIX CODE SO THIS ONLY RUNS ONCE
	USART_Init(31);
  cc:	8f e1       	ldi	r24, 0x1F	; 31
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	0e 94 57 00 	call	0xae	; 0xae <USART_Init>
	fdevopen(USART_Transmit, USART_Receive);
  d4:	62 e6       	ldi	r22, 0x62	; 98
  d6:	70 e0       	ldi	r23, 0x00	; 0
  d8:	8e e5       	ldi	r24, 0x5E	; 94
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	0e 94 57 01 	call	0x2ae	; 0x2ae <fdevopen>
	/* Replace with your application code */
	//unsigned char TEST = 'a';
	//_delay_ms(1000);
	//char word;
	//int a = 0;
	MCUCR = 0x80;
  e0:	80 e8       	ldi	r24, 0x80	; 128
  e2:	85 bf       	out	0x35, r24	; 53
	SFIOR = 0x20; //0x20
  e4:	80 e2       	ldi	r24, 0x20	; 32
  e6:	80 bf       	out	0x30, r24	; 48
    while (1) 
    {
		SRAM_test();
  e8:	0e 94 80 00 	call	0x100	; 0x100 <SRAM_test>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ec:	2f ef       	ldi	r18, 0xFF	; 255
  ee:	81 ee       	ldi	r24, 0xE1	; 225
  f0:	94 e0       	ldi	r25, 0x04	; 4
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	80 40       	sbci	r24, 0x00	; 0
  f6:	90 40       	sbci	r25, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <main+0x26>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <main+0x30>
  fc:	00 00       	nop
  fe:	f4 cf       	rjmp	.-24     	; 0xe8 <main+0x1c>

00000100 <SRAM_test>:

#include <stdlib.h>
#include <stdint.h> // Included to remove errors - not a part of the test code
    void SRAM_test(void)
    {
 100:	ef 92       	push	r14
 102:	ff 92       	push	r15
 104:	0f 93       	push	r16
 106:	1f 93       	push	r17
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
		volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
        uint16_t ext_ram_size = 0x800;
        uint16_t write_errors = 0;
        uint16_t retrieval_errors = 0;
        printf("Starting SRAM test...\n");
 10c:	8a e0       	ldi	r24, 0x0A	; 10
 10e:	91 e0       	ldi	r25, 0x01	; 1
 110:	0e 94 b8 01 	call	0x370	; 0x370 <puts>
        // rand() stores some internal state, so calling this function in a loop will
        // yield different seeds each time (unless srand() is called before this function)
        uint16_t seed = rand();
 114:	0e 94 47 01 	call	0x28e	; 0x28e <rand>
 118:	7c 01       	movw	r14, r24
        // Write phase: Immediately check that the correct value was stored
        srand(seed);
 11a:	0e 94 4c 01 	call	0x298	; 0x298 <srand>
        for (uint16_t i = 0; i < ext_ram_size; i++) {
 11e:	c0 e0       	ldi	r28, 0x00	; 0
 120:	d0 e0       	ldi	r29, 0x00	; 0
#include <stdint.h> // Included to remove errors - not a part of the test code
    void SRAM_test(void)
    {
		volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
        uint16_t ext_ram_size = 0x800;
        uint16_t write_errors = 0;
 122:	00 e0       	ldi	r16, 0x00	; 0
 124:	10 e0       	ldi	r17, 0x00	; 0
        // rand() stores some internal state, so calling this function in a loop will
        // yield different seeds each time (unless srand() is called before this function)
        uint16_t seed = rand();
        // Write phase: Immediately check that the correct value was stored
        srand(seed);
        for (uint16_t i = 0; i < ext_ram_size; i++) {
 126:	20 c0       	rjmp	.+64     	; 0x168 <SRAM_test+0x68>
            uint8_t some_value = rand();
 128:	0e 94 47 01 	call	0x28e	; 0x28e <rand>
            ext_ram[i] = some_value;
 12c:	fe 01       	movw	r30, r28
 12e:	f8 5e       	subi	r31, 0xE8	; 232
 130:	80 83       	st	Z, r24
            uint8_t retreived_value = ext_ram[i];
 132:	20 81       	ld	r18, Z
            if (retreived_value != some_value) {
 134:	28 17       	cp	r18, r24
 136:	b9 f0       	breq	.+46     	; 0x166 <SRAM_test+0x66>
                printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 138:	99 27       	eor	r25, r25
 13a:	9f 93       	push	r25
 13c:	8f 93       	push	r24
 13e:	1f 92       	push	r1
 140:	2f 93       	push	r18
 142:	df 93       	push	r29
 144:	cf 93       	push	r28
 146:	80 e2       	ldi	r24, 0x20	; 32
 148:	91 e0       	ldi	r25, 0x01	; 1
 14a:	9f 93       	push	r25
 14c:	8f 93       	push	r24
 14e:	0e 94 a2 01 	call	0x344	; 0x344 <printf>
                write_errors++;
 152:	0f 5f       	subi	r16, 0xFF	; 255
 154:	1f 4f       	sbci	r17, 0xFF	; 255
 156:	8d b7       	in	r24, 0x3d	; 61
 158:	9e b7       	in	r25, 0x3e	; 62
 15a:	08 96       	adiw	r24, 0x08	; 8
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	f8 94       	cli
 160:	9e bf       	out	0x3e, r25	; 62
 162:	0f be       	out	0x3f, r0	; 63
 164:	8d bf       	out	0x3d, r24	; 61
        // rand() stores some internal state, so calling this function in a loop will
        // yield different seeds each time (unless srand() is called before this function)
        uint16_t seed = rand();
        // Write phase: Immediately check that the correct value was stored
        srand(seed);
        for (uint16_t i = 0; i < ext_ram_size; i++) {
 166:	21 96       	adiw	r28, 0x01	; 1
 168:	c1 15       	cp	r28, r1
 16a:	98 e0       	ldi	r25, 0x08	; 8
 16c:	d9 07       	cpc	r29, r25
 16e:	e0 f2       	brcs	.-72     	; 0x128 <SRAM_test+0x28>
                printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
                write_errors++;
            }
        }
        // Retrieval phase: Check that no values were changed during or after the write phase
        srand(seed);
 170:	c7 01       	movw	r24, r14
 172:	0e 94 4c 01 	call	0x298	; 0x298 <srand>
        // reset the PRNG to the state it had before the write phase
        for (uint16_t i = 0; i < ext_ram_size; i++) {
 176:	c0 e0       	ldi	r28, 0x00	; 0
 178:	d0 e0       	ldi	r29, 0x00	; 0
    void SRAM_test(void)
    {
		volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
        uint16_t ext_ram_size = 0x800;
        uint16_t write_errors = 0;
        uint16_t retrieval_errors = 0;
 17a:	e1 2c       	mov	r14, r1
 17c:	f1 2c       	mov	r15, r1
            }
        }
        // Retrieval phase: Check that no values were changed during or after the write phase
        srand(seed);
        // reset the PRNG to the state it had before the write phase
        for (uint16_t i = 0; i < ext_ram_size; i++) {
 17e:	20 c0       	rjmp	.+64     	; 0x1c0 <SRAM_test+0xc0>
            uint8_t some_value = rand();
 180:	0e 94 47 01 	call	0x28e	; 0x28e <rand>
            uint8_t retreived_value = ext_ram[i];
 184:	fe 01       	movw	r30, r28
 186:	f8 5e       	subi	r31, 0xE8	; 232
 188:	20 81       	ld	r18, Z
            if (retreived_value != some_value) {
 18a:	28 17       	cp	r18, r24
 18c:	c1 f0       	breq	.+48     	; 0x1be <SRAM_test+0xbe>
                printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 18e:	99 27       	eor	r25, r25
 190:	9f 93       	push	r25
 192:	8f 93       	push	r24
 194:	1f 92       	push	r1
 196:	2f 93       	push	r18
 198:	df 93       	push	r29
 19a:	cf 93       	push	r28
 19c:	89 e5       	ldi	r24, 0x59	; 89
 19e:	91 e0       	ldi	r25, 0x01	; 1
 1a0:	9f 93       	push	r25
 1a2:	8f 93       	push	r24
 1a4:	0e 94 a2 01 	call	0x344	; 0x344 <printf>
                retrieval_errors++;
 1a8:	8f ef       	ldi	r24, 0xFF	; 255
 1aa:	e8 1a       	sub	r14, r24
 1ac:	f8 0a       	sbc	r15, r24
 1ae:	8d b7       	in	r24, 0x3d	; 61
 1b0:	9e b7       	in	r25, 0x3e	; 62
 1b2:	08 96       	adiw	r24, 0x08	; 8
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	f8 94       	cli
 1b8:	9e bf       	out	0x3e, r25	; 62
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	8d bf       	out	0x3d, r24	; 61
            }
        }
        // Retrieval phase: Check that no values were changed during or after the write phase
        srand(seed);
        // reset the PRNG to the state it had before the write phase
        for (uint16_t i = 0; i < ext_ram_size; i++) {
 1be:	21 96       	adiw	r28, 0x01	; 1
 1c0:	c1 15       	cp	r28, r1
 1c2:	98 e0       	ldi	r25, 0x08	; 8
 1c4:	d9 07       	cpc	r29, r25
 1c6:	e0 f2       	brcs	.-72     	; 0x180 <SRAM_test+0x80>
            if (retreived_value != some_value) {
                printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
                retrieval_errors++;
            }
        }
        printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 1c8:	ff 92       	push	r15
 1ca:	ef 92       	push	r14
 1cc:	1f 93       	push	r17
 1ce:	0f 93       	push	r16
 1d0:	86 e9       	ldi	r24, 0x96	; 150
 1d2:	91 e0       	ldi	r25, 0x01	; 1
 1d4:	9f 93       	push	r25
 1d6:	8f 93       	push	r24
 1d8:	0e 94 a2 01 	call	0x344	; 0x344 <printf>
}
 1dc:	0f 90       	pop	r0
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	0f 90       	pop	r0
 1e8:	df 91       	pop	r29
 1ea:	cf 91       	pop	r28
 1ec:	1f 91       	pop	r17
 1ee:	0f 91       	pop	r16
 1f0:	ff 90       	pop	r15
 1f2:	ef 90       	pop	r14
 1f4:	08 95       	ret

000001f6 <do_rand>:
 1f6:	8f 92       	push	r8
 1f8:	9f 92       	push	r9
 1fa:	af 92       	push	r10
 1fc:	bf 92       	push	r11
 1fe:	cf 92       	push	r12
 200:	df 92       	push	r13
 202:	ef 92       	push	r14
 204:	ff 92       	push	r15
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	ec 01       	movw	r28, r24
 20c:	68 81       	ld	r22, Y
 20e:	79 81       	ldd	r23, Y+1	; 0x01
 210:	8a 81       	ldd	r24, Y+2	; 0x02
 212:	9b 81       	ldd	r25, Y+3	; 0x03
 214:	61 15       	cp	r22, r1
 216:	71 05       	cpc	r23, r1
 218:	81 05       	cpc	r24, r1
 21a:	91 05       	cpc	r25, r1
 21c:	21 f4       	brne	.+8      	; 0x226 <__EEPROM_REGION_LENGTH__+0x26>
 21e:	64 e2       	ldi	r22, 0x24	; 36
 220:	79 ed       	ldi	r23, 0xD9	; 217
 222:	8b e5       	ldi	r24, 0x5B	; 91
 224:	97 e0       	ldi	r25, 0x07	; 7
 226:	2d e1       	ldi	r18, 0x1D	; 29
 228:	33 ef       	ldi	r19, 0xF3	; 243
 22a:	41 e0       	ldi	r20, 0x01	; 1
 22c:	50 e0       	ldi	r21, 0x00	; 0
 22e:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__divmodsi4>
 232:	49 01       	movw	r8, r18
 234:	5a 01       	movw	r10, r20
 236:	9b 01       	movw	r18, r22
 238:	ac 01       	movw	r20, r24
 23a:	a7 ea       	ldi	r26, 0xA7	; 167
 23c:	b1 e4       	ldi	r27, 0x41	; 65
 23e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <__muluhisi3>
 242:	6b 01       	movw	r12, r22
 244:	7c 01       	movw	r14, r24
 246:	ac ee       	ldi	r26, 0xEC	; 236
 248:	b4 ef       	ldi	r27, 0xF4	; 244
 24a:	a5 01       	movw	r20, r10
 24c:	94 01       	movw	r18, r8
 24e:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__mulohisi3>
 252:	dc 01       	movw	r26, r24
 254:	cb 01       	movw	r24, r22
 256:	8c 0d       	add	r24, r12
 258:	9d 1d       	adc	r25, r13
 25a:	ae 1d       	adc	r26, r14
 25c:	bf 1d       	adc	r27, r15
 25e:	b7 ff       	sbrs	r27, 7
 260:	03 c0       	rjmp	.+6      	; 0x268 <__EEPROM_REGION_LENGTH__+0x68>
 262:	01 97       	sbiw	r24, 0x01	; 1
 264:	a1 09       	sbc	r26, r1
 266:	b0 48       	sbci	r27, 0x80	; 128
 268:	88 83       	st	Y, r24
 26a:	99 83       	std	Y+1, r25	; 0x01
 26c:	aa 83       	std	Y+2, r26	; 0x02
 26e:	bb 83       	std	Y+3, r27	; 0x03
 270:	9f 77       	andi	r25, 0x7F	; 127
 272:	df 91       	pop	r29
 274:	cf 91       	pop	r28
 276:	ff 90       	pop	r15
 278:	ef 90       	pop	r14
 27a:	df 90       	pop	r13
 27c:	cf 90       	pop	r12
 27e:	bf 90       	pop	r11
 280:	af 90       	pop	r10
 282:	9f 90       	pop	r9
 284:	8f 90       	pop	r8
 286:	08 95       	ret

00000288 <rand_r>:
 288:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <do_rand>
 28c:	08 95       	ret

0000028e <rand>:
 28e:	80 e0       	ldi	r24, 0x00	; 0
 290:	91 e0       	ldi	r25, 0x01	; 1
 292:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <do_rand>
 296:	08 95       	ret

00000298 <srand>:
 298:	a0 e0       	ldi	r26, 0x00	; 0
 29a:	b0 e0       	ldi	r27, 0x00	; 0
 29c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 2a0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2a4:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 2a8:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 2ac:	08 95       	ret

000002ae <fdevopen>:
 2ae:	0f 93       	push	r16
 2b0:	1f 93       	push	r17
 2b2:	cf 93       	push	r28
 2b4:	df 93       	push	r29
 2b6:	00 97       	sbiw	r24, 0x00	; 0
 2b8:	31 f4       	brne	.+12     	; 0x2c6 <fdevopen+0x18>
 2ba:	61 15       	cp	r22, r1
 2bc:	71 05       	cpc	r23, r1
 2be:	19 f4       	brne	.+6      	; 0x2c6 <fdevopen+0x18>
 2c0:	80 e0       	ldi	r24, 0x00	; 0
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	3a c0       	rjmp	.+116    	; 0x33a <fdevopen+0x8c>
 2c6:	8b 01       	movw	r16, r22
 2c8:	ec 01       	movw	r28, r24
 2ca:	6e e0       	ldi	r22, 0x0E	; 14
 2cc:	70 e0       	ldi	r23, 0x00	; 0
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	0e 94 c9 03 	call	0x792	; 0x792 <calloc>
 2d6:	fc 01       	movw	r30, r24
 2d8:	89 2b       	or	r24, r25
 2da:	91 f3       	breq	.-28     	; 0x2c0 <fdevopen+0x12>
 2dc:	80 e8       	ldi	r24, 0x80	; 128
 2de:	83 83       	std	Z+3, r24	; 0x03
 2e0:	01 15       	cp	r16, r1
 2e2:	11 05       	cpc	r17, r1
 2e4:	71 f0       	breq	.+28     	; 0x302 <fdevopen+0x54>
 2e6:	13 87       	std	Z+11, r17	; 0x0b
 2e8:	02 87       	std	Z+10, r16	; 0x0a
 2ea:	81 e8       	ldi	r24, 0x81	; 129
 2ec:	83 83       	std	Z+3, r24	; 0x03
 2ee:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <__data_end>
 2f2:	90 91 f1 01 	lds	r25, 0x01F1	; 0x8001f1 <__data_end+0x1>
 2f6:	89 2b       	or	r24, r25
 2f8:	21 f4       	brne	.+8      	; 0x302 <fdevopen+0x54>
 2fa:	f0 93 f1 01 	sts	0x01F1, r31	; 0x8001f1 <__data_end+0x1>
 2fe:	e0 93 f0 01 	sts	0x01F0, r30	; 0x8001f0 <__data_end>
 302:	20 97       	sbiw	r28, 0x00	; 0
 304:	c9 f0       	breq	.+50     	; 0x338 <fdevopen+0x8a>
 306:	d1 87       	std	Z+9, r29	; 0x09
 308:	c0 87       	std	Z+8, r28	; 0x08
 30a:	83 81       	ldd	r24, Z+3	; 0x03
 30c:	82 60       	ori	r24, 0x02	; 2
 30e:	83 83       	std	Z+3, r24	; 0x03
 310:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <__data_end+0x2>
 314:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <__data_end+0x3>
 318:	89 2b       	or	r24, r25
 31a:	71 f4       	brne	.+28     	; 0x338 <fdevopen+0x8a>
 31c:	f0 93 f3 01 	sts	0x01F3, r31	; 0x8001f3 <__data_end+0x3>
 320:	e0 93 f2 01 	sts	0x01F2, r30	; 0x8001f2 <__data_end+0x2>
 324:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <__data_end+0x4>
 328:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <__data_end+0x5>
 32c:	89 2b       	or	r24, r25
 32e:	21 f4       	brne	.+8      	; 0x338 <fdevopen+0x8a>
 330:	f0 93 f5 01 	sts	0x01F5, r31	; 0x8001f5 <__data_end+0x5>
 334:	e0 93 f4 01 	sts	0x01F4, r30	; 0x8001f4 <__data_end+0x4>
 338:	cf 01       	movw	r24, r30
 33a:	df 91       	pop	r29
 33c:	cf 91       	pop	r28
 33e:	1f 91       	pop	r17
 340:	0f 91       	pop	r16
 342:	08 95       	ret

00000344 <printf>:
 344:	a0 e0       	ldi	r26, 0x00	; 0
 346:	b0 e0       	ldi	r27, 0x00	; 0
 348:	e8 ea       	ldi	r30, 0xA8	; 168
 34a:	f1 e0       	ldi	r31, 0x01	; 1
 34c:	0c 94 ff 05 	jmp	0xbfe	; 0xbfe <__prologue_saves__+0x20>
 350:	ae 01       	movw	r20, r28
 352:	4b 5f       	subi	r20, 0xFB	; 251
 354:	5f 4f       	sbci	r21, 0xFF	; 255
 356:	fa 01       	movw	r30, r20
 358:	61 91       	ld	r22, Z+
 35a:	71 91       	ld	r23, Z+
 35c:	af 01       	movw	r20, r30
 35e:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <__data_end+0x2>
 362:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <__data_end+0x3>
 366:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <vfprintf>
 36a:	e2 e0       	ldi	r30, 0x02	; 2
 36c:	0c 94 1b 06 	jmp	0xc36	; 0xc36 <__epilogue_restores__+0x20>

00000370 <puts>:
 370:	0f 93       	push	r16
 372:	1f 93       	push	r17
 374:	cf 93       	push	r28
 376:	df 93       	push	r29
 378:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <__data_end+0x2>
 37c:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <__data_end+0x3>
 380:	23 81       	ldd	r18, Z+3	; 0x03
 382:	21 ff       	sbrs	r18, 1
 384:	1b c0       	rjmp	.+54     	; 0x3bc <puts+0x4c>
 386:	8c 01       	movw	r16, r24
 388:	d0 e0       	ldi	r29, 0x00	; 0
 38a:	c0 e0       	ldi	r28, 0x00	; 0
 38c:	f8 01       	movw	r30, r16
 38e:	81 91       	ld	r24, Z+
 390:	8f 01       	movw	r16, r30
 392:	60 91 f2 01 	lds	r22, 0x01F2	; 0x8001f2 <__data_end+0x2>
 396:	70 91 f3 01 	lds	r23, 0x01F3	; 0x8001f3 <__data_end+0x3>
 39a:	db 01       	movw	r26, r22
 39c:	18 96       	adiw	r26, 0x08	; 8
 39e:	ed 91       	ld	r30, X+
 3a0:	fc 91       	ld	r31, X
 3a2:	19 97       	sbiw	r26, 0x09	; 9
 3a4:	88 23       	and	r24, r24
 3a6:	31 f0       	breq	.+12     	; 0x3b4 <puts+0x44>
 3a8:	09 95       	icall
 3aa:	89 2b       	or	r24, r25
 3ac:	79 f3       	breq	.-34     	; 0x38c <puts+0x1c>
 3ae:	df ef       	ldi	r29, 0xFF	; 255
 3b0:	cf ef       	ldi	r28, 0xFF	; 255
 3b2:	ec cf       	rjmp	.-40     	; 0x38c <puts+0x1c>
 3b4:	8a e0       	ldi	r24, 0x0A	; 10
 3b6:	09 95       	icall
 3b8:	89 2b       	or	r24, r25
 3ba:	19 f0       	breq	.+6      	; 0x3c2 <puts+0x52>
 3bc:	8f ef       	ldi	r24, 0xFF	; 255
 3be:	9f ef       	ldi	r25, 0xFF	; 255
 3c0:	02 c0       	rjmp	.+4      	; 0x3c6 <puts+0x56>
 3c2:	8d 2f       	mov	r24, r29
 3c4:	9c 2f       	mov	r25, r28
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	1f 91       	pop	r17
 3cc:	0f 91       	pop	r16
 3ce:	08 95       	ret

000003d0 <vfprintf>:
 3d0:	ab e0       	ldi	r26, 0x0B	; 11
 3d2:	b0 e0       	ldi	r27, 0x00	; 0
 3d4:	ee ee       	ldi	r30, 0xEE	; 238
 3d6:	f1 e0       	ldi	r31, 0x01	; 1
 3d8:	0c 94 ef 05 	jmp	0xbde	; 0xbde <__prologue_saves__>
 3dc:	6c 01       	movw	r12, r24
 3de:	7b 01       	movw	r14, r22
 3e0:	8a 01       	movw	r16, r20
 3e2:	fc 01       	movw	r30, r24
 3e4:	17 82       	std	Z+7, r1	; 0x07
 3e6:	16 82       	std	Z+6, r1	; 0x06
 3e8:	83 81       	ldd	r24, Z+3	; 0x03
 3ea:	81 ff       	sbrs	r24, 1
 3ec:	cc c1       	rjmp	.+920    	; 0x786 <__stack+0x287>
 3ee:	ce 01       	movw	r24, r28
 3f0:	01 96       	adiw	r24, 0x01	; 1
 3f2:	3c 01       	movw	r6, r24
 3f4:	f6 01       	movw	r30, r12
 3f6:	93 81       	ldd	r25, Z+3	; 0x03
 3f8:	f7 01       	movw	r30, r14
 3fa:	93 fd       	sbrc	r25, 3
 3fc:	85 91       	lpm	r24, Z+
 3fe:	93 ff       	sbrs	r25, 3
 400:	81 91       	ld	r24, Z+
 402:	7f 01       	movw	r14, r30
 404:	88 23       	and	r24, r24
 406:	09 f4       	brne	.+2      	; 0x40a <__DATA_REGION_LENGTH__+0xa>
 408:	ba c1       	rjmp	.+884    	; 0x77e <__stack+0x27f>
 40a:	85 32       	cpi	r24, 0x25	; 37
 40c:	39 f4       	brne	.+14     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 40e:	93 fd       	sbrc	r25, 3
 410:	85 91       	lpm	r24, Z+
 412:	93 ff       	sbrs	r25, 3
 414:	81 91       	ld	r24, Z+
 416:	7f 01       	movw	r14, r30
 418:	85 32       	cpi	r24, 0x25	; 37
 41a:	29 f4       	brne	.+10     	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 41c:	b6 01       	movw	r22, r12
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 424:	e7 cf       	rjmp	.-50     	; 0x3f4 <vfprintf+0x24>
 426:	91 2c       	mov	r9, r1
 428:	21 2c       	mov	r2, r1
 42a:	31 2c       	mov	r3, r1
 42c:	ff e1       	ldi	r31, 0x1F	; 31
 42e:	f3 15       	cp	r31, r3
 430:	d8 f0       	brcs	.+54     	; 0x468 <__DATA_REGION_LENGTH__+0x68>
 432:	8b 32       	cpi	r24, 0x2B	; 43
 434:	79 f0       	breq	.+30     	; 0x454 <__DATA_REGION_LENGTH__+0x54>
 436:	38 f4       	brcc	.+14     	; 0x446 <__DATA_REGION_LENGTH__+0x46>
 438:	80 32       	cpi	r24, 0x20	; 32
 43a:	79 f0       	breq	.+30     	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
 43c:	83 32       	cpi	r24, 0x23	; 35
 43e:	a1 f4       	brne	.+40     	; 0x468 <__DATA_REGION_LENGTH__+0x68>
 440:	23 2d       	mov	r18, r3
 442:	20 61       	ori	r18, 0x10	; 16
 444:	1d c0       	rjmp	.+58     	; 0x480 <__DATA_REGION_LENGTH__+0x80>
 446:	8d 32       	cpi	r24, 0x2D	; 45
 448:	61 f0       	breq	.+24     	; 0x462 <__DATA_REGION_LENGTH__+0x62>
 44a:	80 33       	cpi	r24, 0x30	; 48
 44c:	69 f4       	brne	.+26     	; 0x468 <__DATA_REGION_LENGTH__+0x68>
 44e:	23 2d       	mov	r18, r3
 450:	21 60       	ori	r18, 0x01	; 1
 452:	16 c0       	rjmp	.+44     	; 0x480 <__DATA_REGION_LENGTH__+0x80>
 454:	83 2d       	mov	r24, r3
 456:	82 60       	ori	r24, 0x02	; 2
 458:	38 2e       	mov	r3, r24
 45a:	e3 2d       	mov	r30, r3
 45c:	e4 60       	ori	r30, 0x04	; 4
 45e:	3e 2e       	mov	r3, r30
 460:	2a c0       	rjmp	.+84     	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 462:	f3 2d       	mov	r31, r3
 464:	f8 60       	ori	r31, 0x08	; 8
 466:	1d c0       	rjmp	.+58     	; 0x4a2 <__DATA_REGION_LENGTH__+0xa2>
 468:	37 fc       	sbrc	r3, 7
 46a:	2d c0       	rjmp	.+90     	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
 46c:	20 ed       	ldi	r18, 0xD0	; 208
 46e:	28 0f       	add	r18, r24
 470:	2a 30       	cpi	r18, 0x0A	; 10
 472:	40 f0       	brcs	.+16     	; 0x484 <__DATA_REGION_LENGTH__+0x84>
 474:	8e 32       	cpi	r24, 0x2E	; 46
 476:	b9 f4       	brne	.+46     	; 0x4a6 <__DATA_REGION_LENGTH__+0xa6>
 478:	36 fc       	sbrc	r3, 6
 47a:	81 c1       	rjmp	.+770    	; 0x77e <__stack+0x27f>
 47c:	23 2d       	mov	r18, r3
 47e:	20 64       	ori	r18, 0x40	; 64
 480:	32 2e       	mov	r3, r18
 482:	19 c0       	rjmp	.+50     	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 484:	36 fe       	sbrs	r3, 6
 486:	06 c0       	rjmp	.+12     	; 0x494 <__DATA_REGION_LENGTH__+0x94>
 488:	8a e0       	ldi	r24, 0x0A	; 10
 48a:	98 9e       	mul	r9, r24
 48c:	20 0d       	add	r18, r0
 48e:	11 24       	eor	r1, r1
 490:	92 2e       	mov	r9, r18
 492:	11 c0       	rjmp	.+34     	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 494:	ea e0       	ldi	r30, 0x0A	; 10
 496:	2e 9e       	mul	r2, r30
 498:	20 0d       	add	r18, r0
 49a:	11 24       	eor	r1, r1
 49c:	22 2e       	mov	r2, r18
 49e:	f3 2d       	mov	r31, r3
 4a0:	f0 62       	ori	r31, 0x20	; 32
 4a2:	3f 2e       	mov	r3, r31
 4a4:	08 c0       	rjmp	.+16     	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 4a6:	8c 36       	cpi	r24, 0x6C	; 108
 4a8:	21 f4       	brne	.+8      	; 0x4b2 <__DATA_REGION_LENGTH__+0xb2>
 4aa:	83 2d       	mov	r24, r3
 4ac:	80 68       	ori	r24, 0x80	; 128
 4ae:	38 2e       	mov	r3, r24
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 4b2:	88 36       	cpi	r24, 0x68	; 104
 4b4:	41 f4       	brne	.+16     	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
 4b6:	f7 01       	movw	r30, r14
 4b8:	93 fd       	sbrc	r25, 3
 4ba:	85 91       	lpm	r24, Z+
 4bc:	93 ff       	sbrs	r25, 3
 4be:	81 91       	ld	r24, Z+
 4c0:	7f 01       	movw	r14, r30
 4c2:	81 11       	cpse	r24, r1
 4c4:	b3 cf       	rjmp	.-154    	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 4c6:	98 2f       	mov	r25, r24
 4c8:	9f 7d       	andi	r25, 0xDF	; 223
 4ca:	95 54       	subi	r25, 0x45	; 69
 4cc:	93 30       	cpi	r25, 0x03	; 3
 4ce:	28 f4       	brcc	.+10     	; 0x4da <__DATA_REGION_LENGTH__+0xda>
 4d0:	0c 5f       	subi	r16, 0xFC	; 252
 4d2:	1f 4f       	sbci	r17, 0xFF	; 255
 4d4:	9f e3       	ldi	r25, 0x3F	; 63
 4d6:	99 83       	std	Y+1, r25	; 0x01
 4d8:	0d c0       	rjmp	.+26     	; 0x4f4 <__DATA_REGION_LENGTH__+0xf4>
 4da:	83 36       	cpi	r24, 0x63	; 99
 4dc:	31 f0       	breq	.+12     	; 0x4ea <__DATA_REGION_LENGTH__+0xea>
 4de:	83 37       	cpi	r24, 0x73	; 115
 4e0:	71 f0       	breq	.+28     	; 0x4fe <__DATA_REGION_LENGTH__+0xfe>
 4e2:	83 35       	cpi	r24, 0x53	; 83
 4e4:	09 f0       	breq	.+2      	; 0x4e8 <__DATA_REGION_LENGTH__+0xe8>
 4e6:	59 c0       	rjmp	.+178    	; 0x59a <__stack+0x9b>
 4e8:	21 c0       	rjmp	.+66     	; 0x52c <__stack+0x2d>
 4ea:	f8 01       	movw	r30, r16
 4ec:	80 81       	ld	r24, Z
 4ee:	89 83       	std	Y+1, r24	; 0x01
 4f0:	0e 5f       	subi	r16, 0xFE	; 254
 4f2:	1f 4f       	sbci	r17, 0xFF	; 255
 4f4:	88 24       	eor	r8, r8
 4f6:	83 94       	inc	r8
 4f8:	91 2c       	mov	r9, r1
 4fa:	53 01       	movw	r10, r6
 4fc:	13 c0       	rjmp	.+38     	; 0x524 <__stack+0x25>
 4fe:	28 01       	movw	r4, r16
 500:	f2 e0       	ldi	r31, 0x02	; 2
 502:	4f 0e       	add	r4, r31
 504:	51 1c       	adc	r5, r1
 506:	f8 01       	movw	r30, r16
 508:	a0 80       	ld	r10, Z
 50a:	b1 80       	ldd	r11, Z+1	; 0x01
 50c:	36 fe       	sbrs	r3, 6
 50e:	03 c0       	rjmp	.+6      	; 0x516 <__stack+0x17>
 510:	69 2d       	mov	r22, r9
 512:	70 e0       	ldi	r23, 0x00	; 0
 514:	02 c0       	rjmp	.+4      	; 0x51a <__stack+0x1b>
 516:	6f ef       	ldi	r22, 0xFF	; 255
 518:	7f ef       	ldi	r23, 0xFF	; 255
 51a:	c5 01       	movw	r24, r10
 51c:	0e 94 18 05 	call	0xa30	; 0xa30 <strnlen>
 520:	4c 01       	movw	r8, r24
 522:	82 01       	movw	r16, r4
 524:	f3 2d       	mov	r31, r3
 526:	ff 77       	andi	r31, 0x7F	; 127
 528:	3f 2e       	mov	r3, r31
 52a:	16 c0       	rjmp	.+44     	; 0x558 <__stack+0x59>
 52c:	28 01       	movw	r4, r16
 52e:	22 e0       	ldi	r18, 0x02	; 2
 530:	42 0e       	add	r4, r18
 532:	51 1c       	adc	r5, r1
 534:	f8 01       	movw	r30, r16
 536:	a0 80       	ld	r10, Z
 538:	b1 80       	ldd	r11, Z+1	; 0x01
 53a:	36 fe       	sbrs	r3, 6
 53c:	03 c0       	rjmp	.+6      	; 0x544 <__stack+0x45>
 53e:	69 2d       	mov	r22, r9
 540:	70 e0       	ldi	r23, 0x00	; 0
 542:	02 c0       	rjmp	.+4      	; 0x548 <__stack+0x49>
 544:	6f ef       	ldi	r22, 0xFF	; 255
 546:	7f ef       	ldi	r23, 0xFF	; 255
 548:	c5 01       	movw	r24, r10
 54a:	0e 94 06 05 	call	0xa0c	; 0xa0c <strnlen_P>
 54e:	4c 01       	movw	r8, r24
 550:	f3 2d       	mov	r31, r3
 552:	f0 68       	ori	r31, 0x80	; 128
 554:	3f 2e       	mov	r3, r31
 556:	82 01       	movw	r16, r4
 558:	33 fc       	sbrc	r3, 3
 55a:	1b c0       	rjmp	.+54     	; 0x592 <__stack+0x93>
 55c:	82 2d       	mov	r24, r2
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	88 16       	cp	r8, r24
 562:	99 06       	cpc	r9, r25
 564:	b0 f4       	brcc	.+44     	; 0x592 <__stack+0x93>
 566:	b6 01       	movw	r22, r12
 568:	80 e2       	ldi	r24, 0x20	; 32
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 570:	2a 94       	dec	r2
 572:	f4 cf       	rjmp	.-24     	; 0x55c <__stack+0x5d>
 574:	f5 01       	movw	r30, r10
 576:	37 fc       	sbrc	r3, 7
 578:	85 91       	lpm	r24, Z+
 57a:	37 fe       	sbrs	r3, 7
 57c:	81 91       	ld	r24, Z+
 57e:	5f 01       	movw	r10, r30
 580:	b6 01       	movw	r22, r12
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 588:	21 10       	cpse	r2, r1
 58a:	2a 94       	dec	r2
 58c:	21 e0       	ldi	r18, 0x01	; 1
 58e:	82 1a       	sub	r8, r18
 590:	91 08       	sbc	r9, r1
 592:	81 14       	cp	r8, r1
 594:	91 04       	cpc	r9, r1
 596:	71 f7       	brne	.-36     	; 0x574 <__stack+0x75>
 598:	e8 c0       	rjmp	.+464    	; 0x76a <__stack+0x26b>
 59a:	84 36       	cpi	r24, 0x64	; 100
 59c:	11 f0       	breq	.+4      	; 0x5a2 <__stack+0xa3>
 59e:	89 36       	cpi	r24, 0x69	; 105
 5a0:	41 f5       	brne	.+80     	; 0x5f2 <__stack+0xf3>
 5a2:	f8 01       	movw	r30, r16
 5a4:	37 fe       	sbrs	r3, 7
 5a6:	07 c0       	rjmp	.+14     	; 0x5b6 <__stack+0xb7>
 5a8:	60 81       	ld	r22, Z
 5aa:	71 81       	ldd	r23, Z+1	; 0x01
 5ac:	82 81       	ldd	r24, Z+2	; 0x02
 5ae:	93 81       	ldd	r25, Z+3	; 0x03
 5b0:	0c 5f       	subi	r16, 0xFC	; 252
 5b2:	1f 4f       	sbci	r17, 0xFF	; 255
 5b4:	08 c0       	rjmp	.+16     	; 0x5c6 <__stack+0xc7>
 5b6:	60 81       	ld	r22, Z
 5b8:	71 81       	ldd	r23, Z+1	; 0x01
 5ba:	07 2e       	mov	r0, r23
 5bc:	00 0c       	add	r0, r0
 5be:	88 0b       	sbc	r24, r24
 5c0:	99 0b       	sbc	r25, r25
 5c2:	0e 5f       	subi	r16, 0xFE	; 254
 5c4:	1f 4f       	sbci	r17, 0xFF	; 255
 5c6:	f3 2d       	mov	r31, r3
 5c8:	ff 76       	andi	r31, 0x6F	; 111
 5ca:	3f 2e       	mov	r3, r31
 5cc:	97 ff       	sbrs	r25, 7
 5ce:	09 c0       	rjmp	.+18     	; 0x5e2 <__stack+0xe3>
 5d0:	90 95       	com	r25
 5d2:	80 95       	com	r24
 5d4:	70 95       	com	r23
 5d6:	61 95       	neg	r22
 5d8:	7f 4f       	sbci	r23, 0xFF	; 255
 5da:	8f 4f       	sbci	r24, 0xFF	; 255
 5dc:	9f 4f       	sbci	r25, 0xFF	; 255
 5de:	f0 68       	ori	r31, 0x80	; 128
 5e0:	3f 2e       	mov	r3, r31
 5e2:	2a e0       	ldi	r18, 0x0A	; 10
 5e4:	30 e0       	ldi	r19, 0x00	; 0
 5e6:	a3 01       	movw	r20, r6
 5e8:	0e 94 5f 05 	call	0xabe	; 0xabe <__ultoa_invert>
 5ec:	88 2e       	mov	r8, r24
 5ee:	86 18       	sub	r8, r6
 5f0:	45 c0       	rjmp	.+138    	; 0x67c <__stack+0x17d>
 5f2:	85 37       	cpi	r24, 0x75	; 117
 5f4:	31 f4       	brne	.+12     	; 0x602 <__stack+0x103>
 5f6:	23 2d       	mov	r18, r3
 5f8:	2f 7e       	andi	r18, 0xEF	; 239
 5fa:	b2 2e       	mov	r11, r18
 5fc:	2a e0       	ldi	r18, 0x0A	; 10
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	25 c0       	rjmp	.+74     	; 0x64c <__stack+0x14d>
 602:	93 2d       	mov	r25, r3
 604:	99 7f       	andi	r25, 0xF9	; 249
 606:	b9 2e       	mov	r11, r25
 608:	8f 36       	cpi	r24, 0x6F	; 111
 60a:	c1 f0       	breq	.+48     	; 0x63c <__stack+0x13d>
 60c:	18 f4       	brcc	.+6      	; 0x614 <__stack+0x115>
 60e:	88 35       	cpi	r24, 0x58	; 88
 610:	79 f0       	breq	.+30     	; 0x630 <__stack+0x131>
 612:	b5 c0       	rjmp	.+362    	; 0x77e <__stack+0x27f>
 614:	80 37       	cpi	r24, 0x70	; 112
 616:	19 f0       	breq	.+6      	; 0x61e <__stack+0x11f>
 618:	88 37       	cpi	r24, 0x78	; 120
 61a:	21 f0       	breq	.+8      	; 0x624 <__stack+0x125>
 61c:	b0 c0       	rjmp	.+352    	; 0x77e <__stack+0x27f>
 61e:	e9 2f       	mov	r30, r25
 620:	e0 61       	ori	r30, 0x10	; 16
 622:	be 2e       	mov	r11, r30
 624:	b4 fe       	sbrs	r11, 4
 626:	0d c0       	rjmp	.+26     	; 0x642 <__stack+0x143>
 628:	fb 2d       	mov	r31, r11
 62a:	f4 60       	ori	r31, 0x04	; 4
 62c:	bf 2e       	mov	r11, r31
 62e:	09 c0       	rjmp	.+18     	; 0x642 <__stack+0x143>
 630:	34 fe       	sbrs	r3, 4
 632:	0a c0       	rjmp	.+20     	; 0x648 <__stack+0x149>
 634:	29 2f       	mov	r18, r25
 636:	26 60       	ori	r18, 0x06	; 6
 638:	b2 2e       	mov	r11, r18
 63a:	06 c0       	rjmp	.+12     	; 0x648 <__stack+0x149>
 63c:	28 e0       	ldi	r18, 0x08	; 8
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	05 c0       	rjmp	.+10     	; 0x64c <__stack+0x14d>
 642:	20 e1       	ldi	r18, 0x10	; 16
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	02 c0       	rjmp	.+4      	; 0x64c <__stack+0x14d>
 648:	20 e1       	ldi	r18, 0x10	; 16
 64a:	32 e0       	ldi	r19, 0x02	; 2
 64c:	f8 01       	movw	r30, r16
 64e:	b7 fe       	sbrs	r11, 7
 650:	07 c0       	rjmp	.+14     	; 0x660 <__stack+0x161>
 652:	60 81       	ld	r22, Z
 654:	71 81       	ldd	r23, Z+1	; 0x01
 656:	82 81       	ldd	r24, Z+2	; 0x02
 658:	93 81       	ldd	r25, Z+3	; 0x03
 65a:	0c 5f       	subi	r16, 0xFC	; 252
 65c:	1f 4f       	sbci	r17, 0xFF	; 255
 65e:	06 c0       	rjmp	.+12     	; 0x66c <__stack+0x16d>
 660:	60 81       	ld	r22, Z
 662:	71 81       	ldd	r23, Z+1	; 0x01
 664:	80 e0       	ldi	r24, 0x00	; 0
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	0e 5f       	subi	r16, 0xFE	; 254
 66a:	1f 4f       	sbci	r17, 0xFF	; 255
 66c:	a3 01       	movw	r20, r6
 66e:	0e 94 5f 05 	call	0xabe	; 0xabe <__ultoa_invert>
 672:	88 2e       	mov	r8, r24
 674:	86 18       	sub	r8, r6
 676:	fb 2d       	mov	r31, r11
 678:	ff 77       	andi	r31, 0x7F	; 127
 67a:	3f 2e       	mov	r3, r31
 67c:	36 fe       	sbrs	r3, 6
 67e:	0d c0       	rjmp	.+26     	; 0x69a <__stack+0x19b>
 680:	23 2d       	mov	r18, r3
 682:	2e 7f       	andi	r18, 0xFE	; 254
 684:	a2 2e       	mov	r10, r18
 686:	89 14       	cp	r8, r9
 688:	58 f4       	brcc	.+22     	; 0x6a0 <__stack+0x1a1>
 68a:	34 fe       	sbrs	r3, 4
 68c:	0b c0       	rjmp	.+22     	; 0x6a4 <__stack+0x1a5>
 68e:	32 fc       	sbrc	r3, 2
 690:	09 c0       	rjmp	.+18     	; 0x6a4 <__stack+0x1a5>
 692:	83 2d       	mov	r24, r3
 694:	8e 7e       	andi	r24, 0xEE	; 238
 696:	a8 2e       	mov	r10, r24
 698:	05 c0       	rjmp	.+10     	; 0x6a4 <__stack+0x1a5>
 69a:	b8 2c       	mov	r11, r8
 69c:	a3 2c       	mov	r10, r3
 69e:	03 c0       	rjmp	.+6      	; 0x6a6 <__stack+0x1a7>
 6a0:	b8 2c       	mov	r11, r8
 6a2:	01 c0       	rjmp	.+2      	; 0x6a6 <__stack+0x1a7>
 6a4:	b9 2c       	mov	r11, r9
 6a6:	a4 fe       	sbrs	r10, 4
 6a8:	0f c0       	rjmp	.+30     	; 0x6c8 <__stack+0x1c9>
 6aa:	fe 01       	movw	r30, r28
 6ac:	e8 0d       	add	r30, r8
 6ae:	f1 1d       	adc	r31, r1
 6b0:	80 81       	ld	r24, Z
 6b2:	80 33       	cpi	r24, 0x30	; 48
 6b4:	21 f4       	brne	.+8      	; 0x6be <__stack+0x1bf>
 6b6:	9a 2d       	mov	r25, r10
 6b8:	99 7e       	andi	r25, 0xE9	; 233
 6ba:	a9 2e       	mov	r10, r25
 6bc:	09 c0       	rjmp	.+18     	; 0x6d0 <__stack+0x1d1>
 6be:	a2 fe       	sbrs	r10, 2
 6c0:	06 c0       	rjmp	.+12     	; 0x6ce <__stack+0x1cf>
 6c2:	b3 94       	inc	r11
 6c4:	b3 94       	inc	r11
 6c6:	04 c0       	rjmp	.+8      	; 0x6d0 <__stack+0x1d1>
 6c8:	8a 2d       	mov	r24, r10
 6ca:	86 78       	andi	r24, 0x86	; 134
 6cc:	09 f0       	breq	.+2      	; 0x6d0 <__stack+0x1d1>
 6ce:	b3 94       	inc	r11
 6d0:	a3 fc       	sbrc	r10, 3
 6d2:	11 c0       	rjmp	.+34     	; 0x6f6 <__stack+0x1f7>
 6d4:	a0 fe       	sbrs	r10, 0
 6d6:	06 c0       	rjmp	.+12     	; 0x6e4 <__stack+0x1e5>
 6d8:	b2 14       	cp	r11, r2
 6da:	88 f4       	brcc	.+34     	; 0x6fe <__stack+0x1ff>
 6dc:	28 0c       	add	r2, r8
 6de:	92 2c       	mov	r9, r2
 6e0:	9b 18       	sub	r9, r11
 6e2:	0e c0       	rjmp	.+28     	; 0x700 <__stack+0x201>
 6e4:	b2 14       	cp	r11, r2
 6e6:	60 f4       	brcc	.+24     	; 0x700 <__stack+0x201>
 6e8:	b6 01       	movw	r22, r12
 6ea:	80 e2       	ldi	r24, 0x20	; 32
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 6f2:	b3 94       	inc	r11
 6f4:	f7 cf       	rjmp	.-18     	; 0x6e4 <__stack+0x1e5>
 6f6:	b2 14       	cp	r11, r2
 6f8:	18 f4       	brcc	.+6      	; 0x700 <__stack+0x201>
 6fa:	2b 18       	sub	r2, r11
 6fc:	02 c0       	rjmp	.+4      	; 0x702 <__stack+0x203>
 6fe:	98 2c       	mov	r9, r8
 700:	21 2c       	mov	r2, r1
 702:	a4 fe       	sbrs	r10, 4
 704:	10 c0       	rjmp	.+32     	; 0x726 <__stack+0x227>
 706:	b6 01       	movw	r22, r12
 708:	80 e3       	ldi	r24, 0x30	; 48
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 710:	a2 fe       	sbrs	r10, 2
 712:	17 c0       	rjmp	.+46     	; 0x742 <__stack+0x243>
 714:	a1 fc       	sbrc	r10, 1
 716:	03 c0       	rjmp	.+6      	; 0x71e <__stack+0x21f>
 718:	88 e7       	ldi	r24, 0x78	; 120
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	02 c0       	rjmp	.+4      	; 0x722 <__stack+0x223>
 71e:	88 e5       	ldi	r24, 0x58	; 88
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	b6 01       	movw	r22, r12
 724:	0c c0       	rjmp	.+24     	; 0x73e <__stack+0x23f>
 726:	8a 2d       	mov	r24, r10
 728:	86 78       	andi	r24, 0x86	; 134
 72a:	59 f0       	breq	.+22     	; 0x742 <__stack+0x243>
 72c:	a1 fe       	sbrs	r10, 1
 72e:	02 c0       	rjmp	.+4      	; 0x734 <__stack+0x235>
 730:	8b e2       	ldi	r24, 0x2B	; 43
 732:	01 c0       	rjmp	.+2      	; 0x736 <__stack+0x237>
 734:	80 e2       	ldi	r24, 0x20	; 32
 736:	a7 fc       	sbrc	r10, 7
 738:	8d e2       	ldi	r24, 0x2D	; 45
 73a:	b6 01       	movw	r22, r12
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 742:	89 14       	cp	r8, r9
 744:	38 f4       	brcc	.+14     	; 0x754 <__stack+0x255>
 746:	b6 01       	movw	r22, r12
 748:	80 e3       	ldi	r24, 0x30	; 48
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 750:	9a 94       	dec	r9
 752:	f7 cf       	rjmp	.-18     	; 0x742 <__stack+0x243>
 754:	8a 94       	dec	r8
 756:	f3 01       	movw	r30, r6
 758:	e8 0d       	add	r30, r8
 75a:	f1 1d       	adc	r31, r1
 75c:	80 81       	ld	r24, Z
 75e:	b6 01       	movw	r22, r12
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 766:	81 10       	cpse	r8, r1
 768:	f5 cf       	rjmp	.-22     	; 0x754 <__stack+0x255>
 76a:	22 20       	and	r2, r2
 76c:	09 f4       	brne	.+2      	; 0x770 <__stack+0x271>
 76e:	42 ce       	rjmp	.-892    	; 0x3f4 <vfprintf+0x24>
 770:	b6 01       	movw	r22, r12
 772:	80 e2       	ldi	r24, 0x20	; 32
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 77a:	2a 94       	dec	r2
 77c:	f6 cf       	rjmp	.-20     	; 0x76a <__stack+0x26b>
 77e:	f6 01       	movw	r30, r12
 780:	86 81       	ldd	r24, Z+6	; 0x06
 782:	97 81       	ldd	r25, Z+7	; 0x07
 784:	02 c0       	rjmp	.+4      	; 0x78a <__stack+0x28b>
 786:	8f ef       	ldi	r24, 0xFF	; 255
 788:	9f ef       	ldi	r25, 0xFF	; 255
 78a:	2b 96       	adiw	r28, 0x0b	; 11
 78c:	e2 e1       	ldi	r30, 0x12	; 18
 78e:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__epilogue_restores__>

00000792 <calloc>:
 792:	0f 93       	push	r16
 794:	1f 93       	push	r17
 796:	cf 93       	push	r28
 798:	df 93       	push	r29
 79a:	86 9f       	mul	r24, r22
 79c:	80 01       	movw	r16, r0
 79e:	87 9f       	mul	r24, r23
 7a0:	10 0d       	add	r17, r0
 7a2:	96 9f       	mul	r25, r22
 7a4:	10 0d       	add	r17, r0
 7a6:	11 24       	eor	r1, r1
 7a8:	c8 01       	movw	r24, r16
 7aa:	0e 94 e5 03 	call	0x7ca	; 0x7ca <malloc>
 7ae:	ec 01       	movw	r28, r24
 7b0:	00 97       	sbiw	r24, 0x00	; 0
 7b2:	29 f0       	breq	.+10     	; 0x7be <calloc+0x2c>
 7b4:	a8 01       	movw	r20, r16
 7b6:	60 e0       	ldi	r22, 0x00	; 0
 7b8:	70 e0       	ldi	r23, 0x00	; 0
 7ba:	0e 94 11 05 	call	0xa22	; 0xa22 <memset>
 7be:	ce 01       	movw	r24, r28
 7c0:	df 91       	pop	r29
 7c2:	cf 91       	pop	r28
 7c4:	1f 91       	pop	r17
 7c6:	0f 91       	pop	r16
 7c8:	08 95       	ret

000007ca <malloc>:
 7ca:	0f 93       	push	r16
 7cc:	1f 93       	push	r17
 7ce:	cf 93       	push	r28
 7d0:	df 93       	push	r29
 7d2:	82 30       	cpi	r24, 0x02	; 2
 7d4:	91 05       	cpc	r25, r1
 7d6:	10 f4       	brcc	.+4      	; 0x7dc <malloc+0x12>
 7d8:	82 e0       	ldi	r24, 0x02	; 2
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <__flp>
 7e0:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <__flp+0x1>
 7e4:	20 e0       	ldi	r18, 0x00	; 0
 7e6:	30 e0       	ldi	r19, 0x00	; 0
 7e8:	a0 e0       	ldi	r26, 0x00	; 0
 7ea:	b0 e0       	ldi	r27, 0x00	; 0
 7ec:	30 97       	sbiw	r30, 0x00	; 0
 7ee:	19 f1       	breq	.+70     	; 0x836 <malloc+0x6c>
 7f0:	40 81       	ld	r20, Z
 7f2:	51 81       	ldd	r21, Z+1	; 0x01
 7f4:	02 81       	ldd	r16, Z+2	; 0x02
 7f6:	13 81       	ldd	r17, Z+3	; 0x03
 7f8:	48 17       	cp	r20, r24
 7fa:	59 07       	cpc	r21, r25
 7fc:	c8 f0       	brcs	.+50     	; 0x830 <malloc+0x66>
 7fe:	84 17       	cp	r24, r20
 800:	95 07       	cpc	r25, r21
 802:	69 f4       	brne	.+26     	; 0x81e <malloc+0x54>
 804:	10 97       	sbiw	r26, 0x00	; 0
 806:	31 f0       	breq	.+12     	; 0x814 <malloc+0x4a>
 808:	12 96       	adiw	r26, 0x02	; 2
 80a:	0c 93       	st	X, r16
 80c:	12 97       	sbiw	r26, 0x02	; 2
 80e:	13 96       	adiw	r26, 0x03	; 3
 810:	1c 93       	st	X, r17
 812:	27 c0       	rjmp	.+78     	; 0x862 <malloc+0x98>
 814:	00 93 f8 01 	sts	0x01F8, r16	; 0x8001f8 <__flp>
 818:	10 93 f9 01 	sts	0x01F9, r17	; 0x8001f9 <__flp+0x1>
 81c:	22 c0       	rjmp	.+68     	; 0x862 <malloc+0x98>
 81e:	21 15       	cp	r18, r1
 820:	31 05       	cpc	r19, r1
 822:	19 f0       	breq	.+6      	; 0x82a <malloc+0x60>
 824:	42 17       	cp	r20, r18
 826:	53 07       	cpc	r21, r19
 828:	18 f4       	brcc	.+6      	; 0x830 <malloc+0x66>
 82a:	9a 01       	movw	r18, r20
 82c:	bd 01       	movw	r22, r26
 82e:	ef 01       	movw	r28, r30
 830:	df 01       	movw	r26, r30
 832:	f8 01       	movw	r30, r16
 834:	db cf       	rjmp	.-74     	; 0x7ec <malloc+0x22>
 836:	21 15       	cp	r18, r1
 838:	31 05       	cpc	r19, r1
 83a:	f9 f0       	breq	.+62     	; 0x87a <malloc+0xb0>
 83c:	28 1b       	sub	r18, r24
 83e:	39 0b       	sbc	r19, r25
 840:	24 30       	cpi	r18, 0x04	; 4
 842:	31 05       	cpc	r19, r1
 844:	80 f4       	brcc	.+32     	; 0x866 <malloc+0x9c>
 846:	8a 81       	ldd	r24, Y+2	; 0x02
 848:	9b 81       	ldd	r25, Y+3	; 0x03
 84a:	61 15       	cp	r22, r1
 84c:	71 05       	cpc	r23, r1
 84e:	21 f0       	breq	.+8      	; 0x858 <malloc+0x8e>
 850:	fb 01       	movw	r30, r22
 852:	93 83       	std	Z+3, r25	; 0x03
 854:	82 83       	std	Z+2, r24	; 0x02
 856:	04 c0       	rjmp	.+8      	; 0x860 <malloc+0x96>
 858:	90 93 f9 01 	sts	0x01F9, r25	; 0x8001f9 <__flp+0x1>
 85c:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <__flp>
 860:	fe 01       	movw	r30, r28
 862:	32 96       	adiw	r30, 0x02	; 2
 864:	44 c0       	rjmp	.+136    	; 0x8ee <malloc+0x124>
 866:	fe 01       	movw	r30, r28
 868:	e2 0f       	add	r30, r18
 86a:	f3 1f       	adc	r31, r19
 86c:	81 93       	st	Z+, r24
 86e:	91 93       	st	Z+, r25
 870:	22 50       	subi	r18, 0x02	; 2
 872:	31 09       	sbc	r19, r1
 874:	39 83       	std	Y+1, r19	; 0x01
 876:	28 83       	st	Y, r18
 878:	3a c0       	rjmp	.+116    	; 0x8ee <malloc+0x124>
 87a:	20 91 f6 01 	lds	r18, 0x01F6	; 0x8001f6 <__brkval>
 87e:	30 91 f7 01 	lds	r19, 0x01F7	; 0x8001f7 <__brkval+0x1>
 882:	23 2b       	or	r18, r19
 884:	41 f4       	brne	.+16     	; 0x896 <malloc+0xcc>
 886:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 88a:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 88e:	30 93 f7 01 	sts	0x01F7, r19	; 0x8001f7 <__brkval+0x1>
 892:	20 93 f6 01 	sts	0x01F6, r18	; 0x8001f6 <__brkval>
 896:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 89a:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 89e:	21 15       	cp	r18, r1
 8a0:	31 05       	cpc	r19, r1
 8a2:	41 f4       	brne	.+16     	; 0x8b4 <malloc+0xea>
 8a4:	2d b7       	in	r18, 0x3d	; 61
 8a6:	3e b7       	in	r19, 0x3e	; 62
 8a8:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 8ac:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 8b0:	24 1b       	sub	r18, r20
 8b2:	35 0b       	sbc	r19, r21
 8b4:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <__brkval>
 8b8:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <__brkval+0x1>
 8bc:	e2 17       	cp	r30, r18
 8be:	f3 07       	cpc	r31, r19
 8c0:	a0 f4       	brcc	.+40     	; 0x8ea <malloc+0x120>
 8c2:	2e 1b       	sub	r18, r30
 8c4:	3f 0b       	sbc	r19, r31
 8c6:	28 17       	cp	r18, r24
 8c8:	39 07       	cpc	r19, r25
 8ca:	78 f0       	brcs	.+30     	; 0x8ea <malloc+0x120>
 8cc:	ac 01       	movw	r20, r24
 8ce:	4e 5f       	subi	r20, 0xFE	; 254
 8d0:	5f 4f       	sbci	r21, 0xFF	; 255
 8d2:	24 17       	cp	r18, r20
 8d4:	35 07       	cpc	r19, r21
 8d6:	48 f0       	brcs	.+18     	; 0x8ea <malloc+0x120>
 8d8:	4e 0f       	add	r20, r30
 8da:	5f 1f       	adc	r21, r31
 8dc:	50 93 f7 01 	sts	0x01F7, r21	; 0x8001f7 <__brkval+0x1>
 8e0:	40 93 f6 01 	sts	0x01F6, r20	; 0x8001f6 <__brkval>
 8e4:	81 93       	st	Z+, r24
 8e6:	91 93       	st	Z+, r25
 8e8:	02 c0       	rjmp	.+4      	; 0x8ee <malloc+0x124>
 8ea:	e0 e0       	ldi	r30, 0x00	; 0
 8ec:	f0 e0       	ldi	r31, 0x00	; 0
 8ee:	cf 01       	movw	r24, r30
 8f0:	df 91       	pop	r29
 8f2:	cf 91       	pop	r28
 8f4:	1f 91       	pop	r17
 8f6:	0f 91       	pop	r16
 8f8:	08 95       	ret

000008fa <free>:
 8fa:	cf 93       	push	r28
 8fc:	df 93       	push	r29
 8fe:	00 97       	sbiw	r24, 0x00	; 0
 900:	09 f4       	brne	.+2      	; 0x904 <free+0xa>
 902:	81 c0       	rjmp	.+258    	; 0xa06 <free+0x10c>
 904:	fc 01       	movw	r30, r24
 906:	32 97       	sbiw	r30, 0x02	; 2
 908:	13 82       	std	Z+3, r1	; 0x03
 90a:	12 82       	std	Z+2, r1	; 0x02
 90c:	a0 91 f8 01 	lds	r26, 0x01F8	; 0x8001f8 <__flp>
 910:	b0 91 f9 01 	lds	r27, 0x01F9	; 0x8001f9 <__flp+0x1>
 914:	10 97       	sbiw	r26, 0x00	; 0
 916:	81 f4       	brne	.+32     	; 0x938 <free+0x3e>
 918:	20 81       	ld	r18, Z
 91a:	31 81       	ldd	r19, Z+1	; 0x01
 91c:	82 0f       	add	r24, r18
 91e:	93 1f       	adc	r25, r19
 920:	20 91 f6 01 	lds	r18, 0x01F6	; 0x8001f6 <__brkval>
 924:	30 91 f7 01 	lds	r19, 0x01F7	; 0x8001f7 <__brkval+0x1>
 928:	28 17       	cp	r18, r24
 92a:	39 07       	cpc	r19, r25
 92c:	51 f5       	brne	.+84     	; 0x982 <free+0x88>
 92e:	f0 93 f7 01 	sts	0x01F7, r31	; 0x8001f7 <__brkval+0x1>
 932:	e0 93 f6 01 	sts	0x01F6, r30	; 0x8001f6 <__brkval>
 936:	67 c0       	rjmp	.+206    	; 0xa06 <free+0x10c>
 938:	ed 01       	movw	r28, r26
 93a:	20 e0       	ldi	r18, 0x00	; 0
 93c:	30 e0       	ldi	r19, 0x00	; 0
 93e:	ce 17       	cp	r28, r30
 940:	df 07       	cpc	r29, r31
 942:	40 f4       	brcc	.+16     	; 0x954 <free+0x5a>
 944:	4a 81       	ldd	r20, Y+2	; 0x02
 946:	5b 81       	ldd	r21, Y+3	; 0x03
 948:	9e 01       	movw	r18, r28
 94a:	41 15       	cp	r20, r1
 94c:	51 05       	cpc	r21, r1
 94e:	f1 f0       	breq	.+60     	; 0x98c <free+0x92>
 950:	ea 01       	movw	r28, r20
 952:	f5 cf       	rjmp	.-22     	; 0x93e <free+0x44>
 954:	d3 83       	std	Z+3, r29	; 0x03
 956:	c2 83       	std	Z+2, r28	; 0x02
 958:	40 81       	ld	r20, Z
 95a:	51 81       	ldd	r21, Z+1	; 0x01
 95c:	84 0f       	add	r24, r20
 95e:	95 1f       	adc	r25, r21
 960:	c8 17       	cp	r28, r24
 962:	d9 07       	cpc	r29, r25
 964:	59 f4       	brne	.+22     	; 0x97c <free+0x82>
 966:	88 81       	ld	r24, Y
 968:	99 81       	ldd	r25, Y+1	; 0x01
 96a:	84 0f       	add	r24, r20
 96c:	95 1f       	adc	r25, r21
 96e:	02 96       	adiw	r24, 0x02	; 2
 970:	91 83       	std	Z+1, r25	; 0x01
 972:	80 83       	st	Z, r24
 974:	8a 81       	ldd	r24, Y+2	; 0x02
 976:	9b 81       	ldd	r25, Y+3	; 0x03
 978:	93 83       	std	Z+3, r25	; 0x03
 97a:	82 83       	std	Z+2, r24	; 0x02
 97c:	21 15       	cp	r18, r1
 97e:	31 05       	cpc	r19, r1
 980:	29 f4       	brne	.+10     	; 0x98c <free+0x92>
 982:	f0 93 f9 01 	sts	0x01F9, r31	; 0x8001f9 <__flp+0x1>
 986:	e0 93 f8 01 	sts	0x01F8, r30	; 0x8001f8 <__flp>
 98a:	3d c0       	rjmp	.+122    	; 0xa06 <free+0x10c>
 98c:	e9 01       	movw	r28, r18
 98e:	fb 83       	std	Y+3, r31	; 0x03
 990:	ea 83       	std	Y+2, r30	; 0x02
 992:	49 91       	ld	r20, Y+
 994:	59 91       	ld	r21, Y+
 996:	c4 0f       	add	r28, r20
 998:	d5 1f       	adc	r29, r21
 99a:	ec 17       	cp	r30, r28
 99c:	fd 07       	cpc	r31, r29
 99e:	61 f4       	brne	.+24     	; 0x9b8 <free+0xbe>
 9a0:	80 81       	ld	r24, Z
 9a2:	91 81       	ldd	r25, Z+1	; 0x01
 9a4:	84 0f       	add	r24, r20
 9a6:	95 1f       	adc	r25, r21
 9a8:	02 96       	adiw	r24, 0x02	; 2
 9aa:	e9 01       	movw	r28, r18
 9ac:	99 83       	std	Y+1, r25	; 0x01
 9ae:	88 83       	st	Y, r24
 9b0:	82 81       	ldd	r24, Z+2	; 0x02
 9b2:	93 81       	ldd	r25, Z+3	; 0x03
 9b4:	9b 83       	std	Y+3, r25	; 0x03
 9b6:	8a 83       	std	Y+2, r24	; 0x02
 9b8:	e0 e0       	ldi	r30, 0x00	; 0
 9ba:	f0 e0       	ldi	r31, 0x00	; 0
 9bc:	12 96       	adiw	r26, 0x02	; 2
 9be:	8d 91       	ld	r24, X+
 9c0:	9c 91       	ld	r25, X
 9c2:	13 97       	sbiw	r26, 0x03	; 3
 9c4:	00 97       	sbiw	r24, 0x00	; 0
 9c6:	19 f0       	breq	.+6      	; 0x9ce <free+0xd4>
 9c8:	fd 01       	movw	r30, r26
 9ca:	dc 01       	movw	r26, r24
 9cc:	f7 cf       	rjmp	.-18     	; 0x9bc <free+0xc2>
 9ce:	8d 91       	ld	r24, X+
 9d0:	9c 91       	ld	r25, X
 9d2:	11 97       	sbiw	r26, 0x01	; 1
 9d4:	9d 01       	movw	r18, r26
 9d6:	2e 5f       	subi	r18, 0xFE	; 254
 9d8:	3f 4f       	sbci	r19, 0xFF	; 255
 9da:	82 0f       	add	r24, r18
 9dc:	93 1f       	adc	r25, r19
 9de:	20 91 f6 01 	lds	r18, 0x01F6	; 0x8001f6 <__brkval>
 9e2:	30 91 f7 01 	lds	r19, 0x01F7	; 0x8001f7 <__brkval+0x1>
 9e6:	28 17       	cp	r18, r24
 9e8:	39 07       	cpc	r19, r25
 9ea:	69 f4       	brne	.+26     	; 0xa06 <free+0x10c>
 9ec:	30 97       	sbiw	r30, 0x00	; 0
 9ee:	29 f4       	brne	.+10     	; 0x9fa <free+0x100>
 9f0:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <__flp+0x1>
 9f4:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <__flp>
 9f8:	02 c0       	rjmp	.+4      	; 0x9fe <free+0x104>
 9fa:	13 82       	std	Z+3, r1	; 0x03
 9fc:	12 82       	std	Z+2, r1	; 0x02
 9fe:	b0 93 f7 01 	sts	0x01F7, r27	; 0x8001f7 <__brkval+0x1>
 a02:	a0 93 f6 01 	sts	0x01F6, r26	; 0x8001f6 <__brkval>
 a06:	df 91       	pop	r29
 a08:	cf 91       	pop	r28
 a0a:	08 95       	ret

00000a0c <strnlen_P>:
 a0c:	fc 01       	movw	r30, r24
 a0e:	05 90       	lpm	r0, Z+
 a10:	61 50       	subi	r22, 0x01	; 1
 a12:	70 40       	sbci	r23, 0x00	; 0
 a14:	01 10       	cpse	r0, r1
 a16:	d8 f7       	brcc	.-10     	; 0xa0e <strnlen_P+0x2>
 a18:	80 95       	com	r24
 a1a:	90 95       	com	r25
 a1c:	8e 0f       	add	r24, r30
 a1e:	9f 1f       	adc	r25, r31
 a20:	08 95       	ret

00000a22 <memset>:
 a22:	dc 01       	movw	r26, r24
 a24:	01 c0       	rjmp	.+2      	; 0xa28 <memset+0x6>
 a26:	6d 93       	st	X+, r22
 a28:	41 50       	subi	r20, 0x01	; 1
 a2a:	50 40       	sbci	r21, 0x00	; 0
 a2c:	e0 f7       	brcc	.-8      	; 0xa26 <memset+0x4>
 a2e:	08 95       	ret

00000a30 <strnlen>:
 a30:	fc 01       	movw	r30, r24
 a32:	61 50       	subi	r22, 0x01	; 1
 a34:	70 40       	sbci	r23, 0x00	; 0
 a36:	01 90       	ld	r0, Z+
 a38:	01 10       	cpse	r0, r1
 a3a:	d8 f7       	brcc	.-10     	; 0xa32 <strnlen+0x2>
 a3c:	80 95       	com	r24
 a3e:	90 95       	com	r25
 a40:	8e 0f       	add	r24, r30
 a42:	9f 1f       	adc	r25, r31
 a44:	08 95       	ret

00000a46 <fputc>:
 a46:	0f 93       	push	r16
 a48:	1f 93       	push	r17
 a4a:	cf 93       	push	r28
 a4c:	df 93       	push	r29
 a4e:	fb 01       	movw	r30, r22
 a50:	23 81       	ldd	r18, Z+3	; 0x03
 a52:	21 fd       	sbrc	r18, 1
 a54:	03 c0       	rjmp	.+6      	; 0xa5c <fputc+0x16>
 a56:	8f ef       	ldi	r24, 0xFF	; 255
 a58:	9f ef       	ldi	r25, 0xFF	; 255
 a5a:	2c c0       	rjmp	.+88     	; 0xab4 <fputc+0x6e>
 a5c:	22 ff       	sbrs	r18, 2
 a5e:	16 c0       	rjmp	.+44     	; 0xa8c <fputc+0x46>
 a60:	46 81       	ldd	r20, Z+6	; 0x06
 a62:	57 81       	ldd	r21, Z+7	; 0x07
 a64:	24 81       	ldd	r18, Z+4	; 0x04
 a66:	35 81       	ldd	r19, Z+5	; 0x05
 a68:	42 17       	cp	r20, r18
 a6a:	53 07       	cpc	r21, r19
 a6c:	44 f4       	brge	.+16     	; 0xa7e <fputc+0x38>
 a6e:	a0 81       	ld	r26, Z
 a70:	b1 81       	ldd	r27, Z+1	; 0x01
 a72:	9d 01       	movw	r18, r26
 a74:	2f 5f       	subi	r18, 0xFF	; 255
 a76:	3f 4f       	sbci	r19, 0xFF	; 255
 a78:	31 83       	std	Z+1, r19	; 0x01
 a7a:	20 83       	st	Z, r18
 a7c:	8c 93       	st	X, r24
 a7e:	26 81       	ldd	r18, Z+6	; 0x06
 a80:	37 81       	ldd	r19, Z+7	; 0x07
 a82:	2f 5f       	subi	r18, 0xFF	; 255
 a84:	3f 4f       	sbci	r19, 0xFF	; 255
 a86:	37 83       	std	Z+7, r19	; 0x07
 a88:	26 83       	std	Z+6, r18	; 0x06
 a8a:	14 c0       	rjmp	.+40     	; 0xab4 <fputc+0x6e>
 a8c:	8b 01       	movw	r16, r22
 a8e:	ec 01       	movw	r28, r24
 a90:	fb 01       	movw	r30, r22
 a92:	00 84       	ldd	r0, Z+8	; 0x08
 a94:	f1 85       	ldd	r31, Z+9	; 0x09
 a96:	e0 2d       	mov	r30, r0
 a98:	09 95       	icall
 a9a:	89 2b       	or	r24, r25
 a9c:	e1 f6       	brne	.-72     	; 0xa56 <fputc+0x10>
 a9e:	d8 01       	movw	r26, r16
 aa0:	16 96       	adiw	r26, 0x06	; 6
 aa2:	8d 91       	ld	r24, X+
 aa4:	9c 91       	ld	r25, X
 aa6:	17 97       	sbiw	r26, 0x07	; 7
 aa8:	01 96       	adiw	r24, 0x01	; 1
 aaa:	17 96       	adiw	r26, 0x07	; 7
 aac:	9c 93       	st	X, r25
 aae:	8e 93       	st	-X, r24
 ab0:	16 97       	sbiw	r26, 0x06	; 6
 ab2:	ce 01       	movw	r24, r28
 ab4:	df 91       	pop	r29
 ab6:	cf 91       	pop	r28
 ab8:	1f 91       	pop	r17
 aba:	0f 91       	pop	r16
 abc:	08 95       	ret

00000abe <__ultoa_invert>:
 abe:	fa 01       	movw	r30, r20
 ac0:	aa 27       	eor	r26, r26
 ac2:	28 30       	cpi	r18, 0x08	; 8
 ac4:	51 f1       	breq	.+84     	; 0xb1a <__ultoa_invert+0x5c>
 ac6:	20 31       	cpi	r18, 0x10	; 16
 ac8:	81 f1       	breq	.+96     	; 0xb2a <__ultoa_invert+0x6c>
 aca:	e8 94       	clt
 acc:	6f 93       	push	r22
 ace:	6e 7f       	andi	r22, 0xFE	; 254
 ad0:	6e 5f       	subi	r22, 0xFE	; 254
 ad2:	7f 4f       	sbci	r23, 0xFF	; 255
 ad4:	8f 4f       	sbci	r24, 0xFF	; 255
 ad6:	9f 4f       	sbci	r25, 0xFF	; 255
 ad8:	af 4f       	sbci	r26, 0xFF	; 255
 ada:	b1 e0       	ldi	r27, 0x01	; 1
 adc:	3e d0       	rcall	.+124    	; 0xb5a <__ultoa_invert+0x9c>
 ade:	b4 e0       	ldi	r27, 0x04	; 4
 ae0:	3c d0       	rcall	.+120    	; 0xb5a <__ultoa_invert+0x9c>
 ae2:	67 0f       	add	r22, r23
 ae4:	78 1f       	adc	r23, r24
 ae6:	89 1f       	adc	r24, r25
 ae8:	9a 1f       	adc	r25, r26
 aea:	a1 1d       	adc	r26, r1
 aec:	68 0f       	add	r22, r24
 aee:	79 1f       	adc	r23, r25
 af0:	8a 1f       	adc	r24, r26
 af2:	91 1d       	adc	r25, r1
 af4:	a1 1d       	adc	r26, r1
 af6:	6a 0f       	add	r22, r26
 af8:	71 1d       	adc	r23, r1
 afa:	81 1d       	adc	r24, r1
 afc:	91 1d       	adc	r25, r1
 afe:	a1 1d       	adc	r26, r1
 b00:	20 d0       	rcall	.+64     	; 0xb42 <__ultoa_invert+0x84>
 b02:	09 f4       	brne	.+2      	; 0xb06 <__ultoa_invert+0x48>
 b04:	68 94       	set
 b06:	3f 91       	pop	r19
 b08:	2a e0       	ldi	r18, 0x0A	; 10
 b0a:	26 9f       	mul	r18, r22
 b0c:	11 24       	eor	r1, r1
 b0e:	30 19       	sub	r19, r0
 b10:	30 5d       	subi	r19, 0xD0	; 208
 b12:	31 93       	st	Z+, r19
 b14:	de f6       	brtc	.-74     	; 0xacc <__ultoa_invert+0xe>
 b16:	cf 01       	movw	r24, r30
 b18:	08 95       	ret
 b1a:	46 2f       	mov	r20, r22
 b1c:	47 70       	andi	r20, 0x07	; 7
 b1e:	40 5d       	subi	r20, 0xD0	; 208
 b20:	41 93       	st	Z+, r20
 b22:	b3 e0       	ldi	r27, 0x03	; 3
 b24:	0f d0       	rcall	.+30     	; 0xb44 <__ultoa_invert+0x86>
 b26:	c9 f7       	brne	.-14     	; 0xb1a <__ultoa_invert+0x5c>
 b28:	f6 cf       	rjmp	.-20     	; 0xb16 <__ultoa_invert+0x58>
 b2a:	46 2f       	mov	r20, r22
 b2c:	4f 70       	andi	r20, 0x0F	; 15
 b2e:	40 5d       	subi	r20, 0xD0	; 208
 b30:	4a 33       	cpi	r20, 0x3A	; 58
 b32:	18 f0       	brcs	.+6      	; 0xb3a <__ultoa_invert+0x7c>
 b34:	49 5d       	subi	r20, 0xD9	; 217
 b36:	31 fd       	sbrc	r19, 1
 b38:	40 52       	subi	r20, 0x20	; 32
 b3a:	41 93       	st	Z+, r20
 b3c:	02 d0       	rcall	.+4      	; 0xb42 <__ultoa_invert+0x84>
 b3e:	a9 f7       	brne	.-22     	; 0xb2a <__ultoa_invert+0x6c>
 b40:	ea cf       	rjmp	.-44     	; 0xb16 <__ultoa_invert+0x58>
 b42:	b4 e0       	ldi	r27, 0x04	; 4
 b44:	a6 95       	lsr	r26
 b46:	97 95       	ror	r25
 b48:	87 95       	ror	r24
 b4a:	77 95       	ror	r23
 b4c:	67 95       	ror	r22
 b4e:	ba 95       	dec	r27
 b50:	c9 f7       	brne	.-14     	; 0xb44 <__ultoa_invert+0x86>
 b52:	00 97       	sbiw	r24, 0x00	; 0
 b54:	61 05       	cpc	r22, r1
 b56:	71 05       	cpc	r23, r1
 b58:	08 95       	ret
 b5a:	9b 01       	movw	r18, r22
 b5c:	ac 01       	movw	r20, r24
 b5e:	0a 2e       	mov	r0, r26
 b60:	06 94       	lsr	r0
 b62:	57 95       	ror	r21
 b64:	47 95       	ror	r20
 b66:	37 95       	ror	r19
 b68:	27 95       	ror	r18
 b6a:	ba 95       	dec	r27
 b6c:	c9 f7       	brne	.-14     	; 0xb60 <__ultoa_invert+0xa2>
 b6e:	62 0f       	add	r22, r18
 b70:	73 1f       	adc	r23, r19
 b72:	84 1f       	adc	r24, r20
 b74:	95 1f       	adc	r25, r21
 b76:	a0 1d       	adc	r26, r0
 b78:	08 95       	ret

00000b7a <__divmodsi4>:
 b7a:	05 2e       	mov	r0, r21
 b7c:	97 fb       	bst	r25, 7
 b7e:	1e f4       	brtc	.+6      	; 0xb86 <__divmodsi4+0xc>
 b80:	00 94       	com	r0
 b82:	0e 94 d4 05 	call	0xba8	; 0xba8 <__negsi2>
 b86:	57 fd       	sbrc	r21, 7
 b88:	07 d0       	rcall	.+14     	; 0xb98 <__divmodsi4_neg2>
 b8a:	0e 94 26 06 	call	0xc4c	; 0xc4c <__udivmodsi4>
 b8e:	07 fc       	sbrc	r0, 7
 b90:	03 d0       	rcall	.+6      	; 0xb98 <__divmodsi4_neg2>
 b92:	4e f4       	brtc	.+18     	; 0xba6 <__divmodsi4_exit>
 b94:	0c 94 d4 05 	jmp	0xba8	; 0xba8 <__negsi2>

00000b98 <__divmodsi4_neg2>:
 b98:	50 95       	com	r21
 b9a:	40 95       	com	r20
 b9c:	30 95       	com	r19
 b9e:	21 95       	neg	r18
 ba0:	3f 4f       	sbci	r19, 0xFF	; 255
 ba2:	4f 4f       	sbci	r20, 0xFF	; 255
 ba4:	5f 4f       	sbci	r21, 0xFF	; 255

00000ba6 <__divmodsi4_exit>:
 ba6:	08 95       	ret

00000ba8 <__negsi2>:
 ba8:	90 95       	com	r25
 baa:	80 95       	com	r24
 bac:	70 95       	com	r23
 bae:	61 95       	neg	r22
 bb0:	7f 4f       	sbci	r23, 0xFF	; 255
 bb2:	8f 4f       	sbci	r24, 0xFF	; 255
 bb4:	9f 4f       	sbci	r25, 0xFF	; 255
 bb6:	08 95       	ret

00000bb8 <__muluhisi3>:
 bb8:	0e 94 48 06 	call	0xc90	; 0xc90 <__umulhisi3>
 bbc:	a5 9f       	mul	r26, r21
 bbe:	90 0d       	add	r25, r0
 bc0:	b4 9f       	mul	r27, r20
 bc2:	90 0d       	add	r25, r0
 bc4:	a4 9f       	mul	r26, r20
 bc6:	80 0d       	add	r24, r0
 bc8:	91 1d       	adc	r25, r1
 bca:	11 24       	eor	r1, r1
 bcc:	08 95       	ret

00000bce <__mulshisi3>:
 bce:	b7 ff       	sbrs	r27, 7
 bd0:	0c 94 dc 05 	jmp	0xbb8	; 0xbb8 <__muluhisi3>

00000bd4 <__mulohisi3>:
 bd4:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <__muluhisi3>
 bd8:	82 1b       	sub	r24, r18
 bda:	93 0b       	sbc	r25, r19
 bdc:	08 95       	ret

00000bde <__prologue_saves__>:
 bde:	2f 92       	push	r2
 be0:	3f 92       	push	r3
 be2:	4f 92       	push	r4
 be4:	5f 92       	push	r5
 be6:	6f 92       	push	r6
 be8:	7f 92       	push	r7
 bea:	8f 92       	push	r8
 bec:	9f 92       	push	r9
 bee:	af 92       	push	r10
 bf0:	bf 92       	push	r11
 bf2:	cf 92       	push	r12
 bf4:	df 92       	push	r13
 bf6:	ef 92       	push	r14
 bf8:	ff 92       	push	r15
 bfa:	0f 93       	push	r16
 bfc:	1f 93       	push	r17
 bfe:	cf 93       	push	r28
 c00:	df 93       	push	r29
 c02:	cd b7       	in	r28, 0x3d	; 61
 c04:	de b7       	in	r29, 0x3e	; 62
 c06:	ca 1b       	sub	r28, r26
 c08:	db 0b       	sbc	r29, r27
 c0a:	0f b6       	in	r0, 0x3f	; 63
 c0c:	f8 94       	cli
 c0e:	de bf       	out	0x3e, r29	; 62
 c10:	0f be       	out	0x3f, r0	; 63
 c12:	cd bf       	out	0x3d, r28	; 61
 c14:	09 94       	ijmp

00000c16 <__epilogue_restores__>:
 c16:	2a 88       	ldd	r2, Y+18	; 0x12
 c18:	39 88       	ldd	r3, Y+17	; 0x11
 c1a:	48 88       	ldd	r4, Y+16	; 0x10
 c1c:	5f 84       	ldd	r5, Y+15	; 0x0f
 c1e:	6e 84       	ldd	r6, Y+14	; 0x0e
 c20:	7d 84       	ldd	r7, Y+13	; 0x0d
 c22:	8c 84       	ldd	r8, Y+12	; 0x0c
 c24:	9b 84       	ldd	r9, Y+11	; 0x0b
 c26:	aa 84       	ldd	r10, Y+10	; 0x0a
 c28:	b9 84       	ldd	r11, Y+9	; 0x09
 c2a:	c8 84       	ldd	r12, Y+8	; 0x08
 c2c:	df 80       	ldd	r13, Y+7	; 0x07
 c2e:	ee 80       	ldd	r14, Y+6	; 0x06
 c30:	fd 80       	ldd	r15, Y+5	; 0x05
 c32:	0c 81       	ldd	r16, Y+4	; 0x04
 c34:	1b 81       	ldd	r17, Y+3	; 0x03
 c36:	aa 81       	ldd	r26, Y+2	; 0x02
 c38:	b9 81       	ldd	r27, Y+1	; 0x01
 c3a:	ce 0f       	add	r28, r30
 c3c:	d1 1d       	adc	r29, r1
 c3e:	0f b6       	in	r0, 0x3f	; 63
 c40:	f8 94       	cli
 c42:	de bf       	out	0x3e, r29	; 62
 c44:	0f be       	out	0x3f, r0	; 63
 c46:	cd bf       	out	0x3d, r28	; 61
 c48:	ed 01       	movw	r28, r26
 c4a:	08 95       	ret

00000c4c <__udivmodsi4>:
 c4c:	a1 e2       	ldi	r26, 0x21	; 33
 c4e:	1a 2e       	mov	r1, r26
 c50:	aa 1b       	sub	r26, r26
 c52:	bb 1b       	sub	r27, r27
 c54:	fd 01       	movw	r30, r26
 c56:	0d c0       	rjmp	.+26     	; 0xc72 <__udivmodsi4_ep>

00000c58 <__udivmodsi4_loop>:
 c58:	aa 1f       	adc	r26, r26
 c5a:	bb 1f       	adc	r27, r27
 c5c:	ee 1f       	adc	r30, r30
 c5e:	ff 1f       	adc	r31, r31
 c60:	a2 17       	cp	r26, r18
 c62:	b3 07       	cpc	r27, r19
 c64:	e4 07       	cpc	r30, r20
 c66:	f5 07       	cpc	r31, r21
 c68:	20 f0       	brcs	.+8      	; 0xc72 <__udivmodsi4_ep>
 c6a:	a2 1b       	sub	r26, r18
 c6c:	b3 0b       	sbc	r27, r19
 c6e:	e4 0b       	sbc	r30, r20
 c70:	f5 0b       	sbc	r31, r21

00000c72 <__udivmodsi4_ep>:
 c72:	66 1f       	adc	r22, r22
 c74:	77 1f       	adc	r23, r23
 c76:	88 1f       	adc	r24, r24
 c78:	99 1f       	adc	r25, r25
 c7a:	1a 94       	dec	r1
 c7c:	69 f7       	brne	.-38     	; 0xc58 <__udivmodsi4_loop>
 c7e:	60 95       	com	r22
 c80:	70 95       	com	r23
 c82:	80 95       	com	r24
 c84:	90 95       	com	r25
 c86:	9b 01       	movw	r18, r22
 c88:	ac 01       	movw	r20, r24
 c8a:	bd 01       	movw	r22, r26
 c8c:	cf 01       	movw	r24, r30
 c8e:	08 95       	ret

00000c90 <__umulhisi3>:
 c90:	a2 9f       	mul	r26, r18
 c92:	b0 01       	movw	r22, r0
 c94:	b3 9f       	mul	r27, r19
 c96:	c0 01       	movw	r24, r0
 c98:	a3 9f       	mul	r26, r19
 c9a:	70 0d       	add	r23, r0
 c9c:	81 1d       	adc	r24, r1
 c9e:	11 24       	eor	r1, r1
 ca0:	91 1d       	adc	r25, r1
 ca2:	b2 9f       	mul	r27, r18
 ca4:	70 0d       	add	r23, r0
 ca6:	81 1d       	adc	r24, r1
 ca8:	11 24       	eor	r1, r1
 caa:	91 1d       	adc	r25, r1
 cac:	08 95       	ret

00000cae <_exit>:
 cae:	f8 94       	cli

00000cb0 <__stop_program>:
 cb0:	ff cf       	rjmp	.-2      	; 0xcb0 <__stop_program>
