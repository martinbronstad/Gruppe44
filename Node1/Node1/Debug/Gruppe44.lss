
Gruppe44.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000228  00800100  00001ce8  00001d7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ce8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000bf  00800328  00800328  00001fa4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001fa4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002000  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000280  00000000  00000000  0000203c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003517  00000000  00000000  000022bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000108f  00000000  00000000  000057d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a53  00000000  00000000  00006862  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000660  00000000  00000000  000082b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000acc  00000000  00000000  00008918  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001160  00000000  00000000  000093e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000a544  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 97 04 	jmp	0x92e	; 0x92e <__vector_1>
       8:	0c 94 bf 04 	jmp	0x97e	; 0x97e <__vector_2>
       c:	0c 94 e5 04 	jmp	0x9ca	; 0x9ca <__vector_3>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <flag_init+0x2e>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	13 e0       	ldi	r17, 0x03	; 3
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e8 ee       	ldi	r30, 0xE8	; 232
     37c:	fc e1       	ldi	r31, 0x1C	; 28
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a8 32       	cpi	r26, 0x28	; 40
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	23 e0       	ldi	r18, 0x03	; 3
     38c:	a8 e2       	ldi	r26, 0x28	; 40
     38e:	b3 e0       	ldi	r27, 0x03	; 3
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a7 3e       	cpi	r26, 0xE7	; 231
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 61 05 	call	0xac2	; 0xac2 <main>
     39e:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <adc_init>:
	}
	mov_avg_x[0] = stick_state.X_state;
	//return moving_average;
	stick_state.X_state = moving_average;
	
}
     3a6:	81 b3       	in	r24, 0x11	; 17
     3a8:	80 62       	ori	r24, 0x20	; 32
     3aa:	81 bb       	out	0x11, r24	; 17
     3ac:	8f b5       	in	r24, 0x2f	; 47
     3ae:	80 65       	ori	r24, 0x50	; 80
     3b0:	8f bd       	out	0x2f, r24	; 47
     3b2:	8e b5       	in	r24, 0x2e	; 46
     3b4:	89 60       	ori	r24, 0x09	; 9
     3b6:	8e bd       	out	0x2e, r24	; 46
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	9b bd       	out	0x2b, r25	; 43
     3be:	8a bd       	out	0x2a, r24	; 42
     3c0:	08 95       	ret

000003c2 <adc_read>:
     3c2:	8f ef       	ldi	r24, 0xFF	; 255
     3c4:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <__bss_end+0x1019>
     3c8:	84 e1       	ldi	r24, 0x14	; 20
     3ca:	8a 95       	dec	r24
     3cc:	f1 f7       	brne	.-4      	; 0x3ca <adc_read+0x8>
     3ce:	80 e0       	ldi	r24, 0x00	; 0
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	0b c0       	rjmp	.+22     	; 0x3ea <adc_read+0x28>
     3d4:	20 91 00 14 	lds	r18, 0x1400	; 0x801400 <__bss_end+0x1019>
     3d8:	fc 01       	movw	r30, r24
     3da:	ee 0f       	add	r30, r30
     3dc:	ff 1f       	adc	r31, r31
     3de:	e4 5a       	subi	r30, 0xA4	; 164
     3e0:	fc 4f       	sbci	r31, 0xFC	; 252
     3e2:	30 e0       	ldi	r19, 0x00	; 0
     3e4:	31 83       	std	Z+1, r19	; 0x01
     3e6:	20 83       	st	Z, r18
     3e8:	01 96       	adiw	r24, 0x01	; 1
     3ea:	84 30       	cpi	r24, 0x04	; 4
     3ec:	91 05       	cpc	r25, r1
     3ee:	94 f3       	brlt	.-28     	; 0x3d4 <adc_read+0x12>
     3f0:	08 95       	ret

000003f2 <adc_calibrate>:
     3f2:	2f e9       	ldi	r18, 0x9F	; 159
     3f4:	86 e8       	ldi	r24, 0x86	; 134
     3f6:	91 e0       	ldi	r25, 0x01	; 1
     3f8:	21 50       	subi	r18, 0x01	; 1
     3fa:	80 40       	sbci	r24, 0x00	; 0
     3fc:	90 40       	sbci	r25, 0x00	; 0
     3fe:	e1 f7       	brne	.-8      	; 0x3f8 <adc_calibrate+0x6>
     400:	00 c0       	rjmp	.+0      	; 0x402 <__DATA_REGION_LENGTH__+0x2>
     402:	00 00       	nop
     404:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <adc_read>
     408:	ec e5       	ldi	r30, 0x5C	; 92
     40a:	f3 e0       	ldi	r31, 0x03	; 3
     40c:	80 81       	ld	r24, Z
     40e:	91 81       	ldd	r25, Z+1	; 0x01
     410:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <X_neutral+0x1>
     414:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <X_neutral>
     418:	82 81       	ldd	r24, Z+2	; 0x02
     41a:	93 81       	ldd	r25, Z+3	; 0x03
     41c:	90 93 29 03 	sts	0x0329, r25	; 0x800329 <__data_end+0x1>
     420:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <__data_end>
     424:	08 95       	ret

00000426 <get_stick_state>:
     426:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <adc_read>
     42a:	ec e5       	ldi	r30, 0x5C	; 92
     42c:	f3 e0       	ldi	r31, 0x03	; 3
     42e:	80 81       	ld	r24, Z
     430:	91 81       	ldd	r25, Z+1	; 0x01
     432:	22 81       	ldd	r18, Z+2	; 0x02
     434:	33 81       	ldd	r19, Z+3	; 0x03
     436:	99 27       	eor	r25, r25
     438:	60 91 3d 03 	lds	r22, 0x033D	; 0x80033d <X_neutral>
     43c:	70 91 3e 03 	lds	r23, 0x033E	; 0x80033e <X_neutral+0x1>
     440:	68 17       	cp	r22, r24
     442:	79 07       	cpc	r23, r25
     444:	b4 f4       	brge	.+44     	; 0x472 <get_stick_state+0x4c>
     446:	ac 01       	movw	r20, r24
     448:	46 1b       	sub	r20, r22
     44a:	57 0b       	sbc	r21, r23
     44c:	e4 e6       	ldi	r30, 0x64	; 100
     44e:	e4 9f       	mul	r30, r20
     450:	c0 01       	movw	r24, r0
     452:	e5 9f       	mul	r30, r21
     454:	90 0d       	add	r25, r0
     456:	11 24       	eor	r1, r1
     458:	4f ef       	ldi	r20, 0xFF	; 255
     45a:	50 e0       	ldi	r21, 0x00	; 0
     45c:	fa 01       	movw	r30, r20
     45e:	e6 1b       	sub	r30, r22
     460:	f7 0b       	sbc	r31, r23
     462:	bf 01       	movw	r22, r30
     464:	0e 94 ad 09 	call	0x135a	; 0x135a <__divmodhi4>
     468:	70 93 50 03 	sts	0x0350, r23	; 0x800350 <stick_state+0x1>
     46c:	60 93 4f 03 	sts	0x034F, r22	; 0x80034f <stick_state>
     470:	0f c0       	rjmp	.+30     	; 0x490 <get_stick_state+0x6a>
     472:	ac 01       	movw	r20, r24
     474:	46 1b       	sub	r20, r22
     476:	57 0b       	sbc	r21, r23
     478:	e4 e6       	ldi	r30, 0x64	; 100
     47a:	e4 9f       	mul	r30, r20
     47c:	c0 01       	movw	r24, r0
     47e:	e5 9f       	mul	r30, r21
     480:	90 0d       	add	r25, r0
     482:	11 24       	eor	r1, r1
     484:	0e 94 ad 09 	call	0x135a	; 0x135a <__divmodhi4>
     488:	70 93 50 03 	sts	0x0350, r23	; 0x800350 <stick_state+0x1>
     48c:	60 93 4f 03 	sts	0x034F, r22	; 0x80034f <stick_state>
     490:	c9 01       	movw	r24, r18
     492:	99 27       	eor	r25, r25
     494:	60 91 28 03 	lds	r22, 0x0328	; 0x800328 <__data_end>
     498:	70 91 29 03 	lds	r23, 0x0329	; 0x800329 <__data_end+0x1>
     49c:	68 17       	cp	r22, r24
     49e:	79 07       	cpc	r23, r25
     4a0:	b4 f4       	brge	.+44     	; 0x4ce <get_stick_state+0xa8>
     4a2:	9c 01       	movw	r18, r24
     4a4:	26 1b       	sub	r18, r22
     4a6:	37 0b       	sbc	r19, r23
     4a8:	44 e6       	ldi	r20, 0x64	; 100
     4aa:	42 9f       	mul	r20, r18
     4ac:	c0 01       	movw	r24, r0
     4ae:	43 9f       	mul	r20, r19
     4b0:	90 0d       	add	r25, r0
     4b2:	11 24       	eor	r1, r1
     4b4:	2f ef       	ldi	r18, 0xFF	; 255
     4b6:	30 e0       	ldi	r19, 0x00	; 0
     4b8:	a9 01       	movw	r20, r18
     4ba:	46 1b       	sub	r20, r22
     4bc:	57 0b       	sbc	r21, r23
     4be:	ba 01       	movw	r22, r20
     4c0:	0e 94 ad 09 	call	0x135a	; 0x135a <__divmodhi4>
     4c4:	70 93 52 03 	sts	0x0352, r23	; 0x800352 <stick_state+0x3>
     4c8:	60 93 51 03 	sts	0x0351, r22	; 0x800351 <stick_state+0x2>
     4cc:	08 95       	ret
     4ce:	9c 01       	movw	r18, r24
     4d0:	26 1b       	sub	r18, r22
     4d2:	37 0b       	sbc	r19, r23
     4d4:	44 e6       	ldi	r20, 0x64	; 100
     4d6:	42 9f       	mul	r20, r18
     4d8:	c0 01       	movw	r24, r0
     4da:	43 9f       	mul	r20, r19
     4dc:	90 0d       	add	r25, r0
     4de:	11 24       	eor	r1, r1
     4e0:	0e 94 ad 09 	call	0x135a	; 0x135a <__divmodhi4>
     4e4:	70 93 52 03 	sts	0x0352, r23	; 0x800352 <stick_state+0x3>
     4e8:	60 93 51 03 	sts	0x0351, r22	; 0x800351 <stick_state+0x2>
     4ec:	08 95       	ret

000004ee <get_stick_direction>:
     4ee:	0e 94 13 02 	call	0x426	; 0x426 <get_stick_state>
     4f2:	ef e4       	ldi	r30, 0x4F	; 79
     4f4:	f3 e0       	ldi	r31, 0x03	; 3
     4f6:	20 81       	ld	r18, Z
     4f8:	31 81       	ldd	r19, Z+1	; 0x01
     4fa:	82 81       	ldd	r24, Z+2	; 0x02
     4fc:	93 81       	ldd	r25, Z+3	; 0x03
     4fe:	23 33       	cpi	r18, 0x33	; 51
     500:	31 05       	cpc	r19, r1
     502:	3c f0       	brlt	.+14     	; 0x512 <__stack+0x13>
     504:	23 e0       	ldi	r18, 0x03	; 3
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	30 93 54 03 	sts	0x0354, r19	; 0x800354 <stick_state+0x5>
     50c:	20 93 53 03 	sts	0x0353, r18	; 0x800353 <stick_state+0x4>
     510:	0e c0       	rjmp	.+28     	; 0x52e <__stack+0x2f>
     512:	2e 3c       	cpi	r18, 0xCE	; 206
     514:	3f 4f       	sbci	r19, 0xFF	; 255
     516:	3c f4       	brge	.+14     	; 0x526 <__stack+0x27>
     518:	22 e0       	ldi	r18, 0x02	; 2
     51a:	30 e0       	ldi	r19, 0x00	; 0
     51c:	30 93 54 03 	sts	0x0354, r19	; 0x800354 <stick_state+0x5>
     520:	20 93 53 03 	sts	0x0353, r18	; 0x800353 <stick_state+0x4>
     524:	04 c0       	rjmp	.+8      	; 0x52e <__stack+0x2f>
     526:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <stick_state+0x5>
     52a:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <stick_state+0x4>
     52e:	83 33       	cpi	r24, 0x33	; 51
     530:	91 05       	cpc	r25, r1
     532:	3c f0       	brlt	.+14     	; 0x542 <__stack+0x43>
     534:	81 e0       	ldi	r24, 0x01	; 1
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	90 93 56 03 	sts	0x0356, r25	; 0x800356 <stick_state+0x7>
     53c:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <stick_state+0x6>
     540:	08 95       	ret
     542:	8e 3c       	cpi	r24, 0xCE	; 206
     544:	9f 4f       	sbci	r25, 0xFF	; 255
     546:	3c f4       	brge	.+14     	; 0x556 <__stack+0x57>
     548:	84 e0       	ldi	r24, 0x04	; 4
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	90 93 56 03 	sts	0x0356, r25	; 0x800356 <stick_state+0x7>
     550:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <stick_state+0x6>
     554:	08 95       	ret
     556:	10 92 56 03 	sts	0x0356, r1	; 0x800356 <stick_state+0x7>
     55a:	10 92 55 03 	sts	0x0355, r1	; 0x800355 <stick_state+0x6>
     55e:	08 95       	ret

00000560 <check_for_updates>:

void check_for_updates(){
     560:	cf 92       	push	r12
     562:	df 92       	push	r13
     564:	ef 92       	push	r14
     566:	ff 92       	push	r15
     568:	0f 93       	push	r16
     56a:	1f 93       	push	r17
     56c:	cf 93       	push	r28
     56e:	df 93       	push	r29
     570:	cd b7       	in	r28, 0x3d	; 61
     572:	de b7       	in	r29, 0x3e	; 62
     574:	2a 97       	sbiw	r28, 0x0a	; 10
     576:	0f b6       	in	r0, 0x3f	; 63
     578:	f8 94       	cli
     57a:	de bf       	out	0x3e, r29	; 62
     57c:	0f be       	out	0x3f, r0	; 63
     57e:	cd bf       	out	0x3d, r28	; 61
	get_stick_state();
     580:	0e 94 13 02 	call	0x426	; 0x426 <get_stick_state>
	int slider_left = ADC_states[2];
     584:	ec e5       	ldi	r30, 0x5C	; 92
     586:	f3 e0       	ldi	r31, 0x03	; 3
     588:	e4 80       	ldd	r14, Z+4	; 0x04
     58a:	f5 80       	ldd	r15, Z+5	; 0x05
	int slider_right = ADC_states[3];
     58c:	c6 80       	ldd	r12, Z+6	; 0x06
     58e:	d7 80       	ldd	r13, Z+7	; 0x07
	// If there is an update, send to CAN
	if(stick_state.X_state != previous_stick_state_x || stick_state.Y_state != previous_stick_state_y || slider_left != previous_slider_state_left || slider_right != previous_slider_state_right){
     590:	20 91 4f 03 	lds	r18, 0x034F	; 0x80034f <stick_state>
     594:	30 91 50 03 	lds	r19, 0x0350	; 0x800350 <stick_state+0x1>
     598:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <previous_stick_state_x>
     59c:	90 91 49 03 	lds	r25, 0x0349	; 0x800349 <previous_stick_state_x+0x1>
     5a0:	28 17       	cp	r18, r24
     5a2:	39 07       	cpc	r19, r25
     5a4:	c9 f4       	brne	.+50     	; 0x5d8 <check_for_updates+0x78>
     5a6:	40 91 51 03 	lds	r20, 0x0351	; 0x800351 <stick_state+0x2>
     5aa:	50 91 52 03 	lds	r21, 0x0352	; 0x800352 <stick_state+0x3>
     5ae:	80 91 35 03 	lds	r24, 0x0335	; 0x800335 <previous_stick_state_y>
     5b2:	90 91 36 03 	lds	r25, 0x0336	; 0x800336 <previous_stick_state_y+0x1>
     5b6:	48 17       	cp	r20, r24
     5b8:	59 07       	cpc	r21, r25
     5ba:	71 f4       	brne	.+28     	; 0x5d8 <check_for_updates+0x78>
     5bc:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <previous_slider_state_left>
     5c0:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <previous_slider_state_left+0x1>
     5c4:	e8 16       	cp	r14, r24
     5c6:	f9 06       	cpc	r15, r25
     5c8:	39 f4       	brne	.+14     	; 0x5d8 <check_for_updates+0x78>
     5ca:	80 91 59 03 	lds	r24, 0x0359	; 0x800359 <previous_slider_state_right>
     5ce:	90 91 5a 03 	lds	r25, 0x035A	; 0x80035a <previous_slider_state_right+0x1>
     5d2:	c8 16       	cp	r12, r24
     5d4:	d9 06       	cpc	r13, r25
     5d6:	71 f0       	breq	.+28     	; 0x5f4 <check_for_updates+0x94>
		// STRUCTURE THE MESSAGE WITH CORRECT ID, LENGTH AND DATA
		struct Can_Message can_message;
		can_message.id = id_joystick_sliders;
		can_message.length = 4;
		can_message.data[0] = stick_state.X_state + 100;
     5d8:	2c 59       	subi	r18, 0x9C	; 156
		can_message.data[1] = stick_state.Y_state + 100;
     5da:	30 91 51 03 	lds	r19, 0x0351	; 0x800351 <stick_state+0x2>
     5de:	3c 59       	subi	r19, 0x9C	; 156
		can_message.data[2] = slider_left;
		can_message.data[3] = slider_right;
		// SEND MESSAGE TO NODE 2
		CAN_write_message(can_message);
     5e0:	01 e0       	ldi	r16, 0x01	; 1
     5e2:	14 e0       	ldi	r17, 0x04	; 4
     5e4:	4e 2d       	mov	r20, r14
     5e6:	5c 2d       	mov	r21, r12
     5e8:	6f 81       	ldd	r22, Y+7	; 0x07
     5ea:	78 85       	ldd	r23, Y+8	; 0x08
     5ec:	89 85       	ldd	r24, Y+9	; 0x09
     5ee:	9a 85       	ldd	r25, Y+10	; 0x0a
     5f0:	0e 94 b3 03 	call	0x766	; 0x766 <CAN_write_message>
	}
	
	// Update previous stick states
	previous_stick_state_x = stick_state.X_state;
     5f4:	ef e4       	ldi	r30, 0x4F	; 79
     5f6:	f3 e0       	ldi	r31, 0x03	; 3
     5f8:	80 81       	ld	r24, Z
     5fa:	91 81       	ldd	r25, Z+1	; 0x01
     5fc:	90 93 49 03 	sts	0x0349, r25	; 0x800349 <previous_stick_state_x+0x1>
     600:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <previous_stick_state_x>
	previous_stick_state_y = stick_state.Y_state;
     604:	82 81       	ldd	r24, Z+2	; 0x02
     606:	93 81       	ldd	r25, Z+3	; 0x03
     608:	90 93 36 03 	sts	0x0336, r25	; 0x800336 <previous_stick_state_y+0x1>
     60c:	80 93 35 03 	sts	0x0335, r24	; 0x800335 <previous_stick_state_y>
	previous_slider_state_left = slider_left;
     610:	f0 92 4b 03 	sts	0x034B, r15	; 0x80034b <previous_slider_state_left+0x1>
     614:	e0 92 4a 03 	sts	0x034A, r14	; 0x80034a <previous_slider_state_left>
	previous_slider_state_right = slider_right;
     618:	d0 92 5a 03 	sts	0x035A, r13	; 0x80035a <previous_slider_state_right+0x1>
     61c:	c0 92 59 03 	sts	0x0359, r12	; 0x800359 <previous_slider_state_right>
     620:	2a 96       	adiw	r28, 0x0a	; 10
     622:	0f b6       	in	r0, 0x3f	; 63
     624:	f8 94       	cli
     626:	de bf       	out	0x3e, r29	; 62
     628:	0f be       	out	0x3f, r0	; 63
     62a:	cd bf       	out	0x3d, r28	; 61
     62c:	df 91       	pop	r29
     62e:	cf 91       	pop	r28
     630:	1f 91       	pop	r17
     632:	0f 91       	pop	r16
     634:	ff 90       	pop	r15
     636:	ef 90       	pop	r14
     638:	df 90       	pop	r13
     63a:	cf 90       	pop	r12
     63c:	08 95       	ret

0000063e <CAN_read>:
	PORTB &= ~(1 << CAN_CS ); // Select CAN - controller
	SPI_transmit( MCP_CANSTAT ); // Read status
	received = SPI_transmit(0xff);
	PORTB |= (1 << CAN_CS ); // Deselect CAN - controller
	return received;
}
     63e:	cf 93       	push	r28
     640:	c8 2f       	mov	r28, r24
     642:	88 b3       	in	r24, 0x18	; 24
     644:	8f 7e       	andi	r24, 0xEF	; 239
     646:	88 bb       	out	0x18, r24	; 24
     648:	83 e0       	ldi	r24, 0x03	; 3
     64a:	90 e0       	ldi	r25, 0x00	; 0
     64c:	0e 94 a3 09 	call	0x1346	; 0x1346 <SPI_write>
     650:	8c 2f       	mov	r24, r28
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	0e 94 a3 09 	call	0x1346	; 0x1346 <SPI_write>
     658:	0e 94 a7 09 	call	0x134e	; 0x134e <SPI_read>
     65c:	98 b3       	in	r25, 0x18	; 24
     65e:	90 61       	ori	r25, 0x10	; 16
     660:	98 bb       	out	0x18, r25	; 24
     662:	cf 91       	pop	r28
     664:	08 95       	ret

00000666 <CAN_write>:
     666:	cf 93       	push	r28
     668:	df 93       	push	r29
     66a:	d8 2f       	mov	r29, r24
     66c:	c6 2f       	mov	r28, r22
     66e:	88 b3       	in	r24, 0x18	; 24
     670:	8f 7e       	andi	r24, 0xEF	; 239
     672:	88 bb       	out	0x18, r24	; 24
     674:	82 e0       	ldi	r24, 0x02	; 2
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	0e 94 a3 09 	call	0x1346	; 0x1346 <SPI_write>
     67c:	8d 2f       	mov	r24, r29
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	0e 94 a3 09 	call	0x1346	; 0x1346 <SPI_write>
     684:	8c 2f       	mov	r24, r28
     686:	90 e0       	ldi	r25, 0x00	; 0
     688:	0e 94 a3 09 	call	0x1346	; 0x1346 <SPI_write>
     68c:	88 b3       	in	r24, 0x18	; 24
     68e:	80 61       	ori	r24, 0x10	; 16
     690:	88 bb       	out	0x18, r24	; 24
     692:	df 91       	pop	r29
     694:	cf 91       	pop	r28
     696:	08 95       	ret

00000698 <CAN_request_to_send>:
     698:	87 70       	andi	r24, 0x07	; 7
     69a:	98 b3       	in	r25, 0x18	; 24
     69c:	9f 7e       	andi	r25, 0xEF	; 239
     69e:	98 bb       	out	0x18, r25	; 24
     6a0:	80 68       	ori	r24, 0x80	; 128
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	0e 94 a3 09 	call	0x1346	; 0x1346 <SPI_write>
     6a8:	88 b3       	in	r24, 0x18	; 24
     6aa:	80 61       	ori	r24, 0x10	; 16
     6ac:	88 bb       	out	0x18, r24	; 24
     6ae:	08 95       	ret

000006b0 <CAN_bit_modify>:
     6b0:	1f 93       	push	r17
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
     6b6:	18 2f       	mov	r17, r24
     6b8:	d6 2f       	mov	r29, r22
     6ba:	c4 2f       	mov	r28, r20
     6bc:	88 b3       	in	r24, 0x18	; 24
     6be:	8f 7e       	andi	r24, 0xEF	; 239
     6c0:	88 bb       	out	0x18, r24	; 24
     6c2:	85 e0       	ldi	r24, 0x05	; 5
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	0e 94 a3 09 	call	0x1346	; 0x1346 <SPI_write>
     6ca:	81 2f       	mov	r24, r17
     6cc:	90 e0       	ldi	r25, 0x00	; 0
     6ce:	0e 94 a3 09 	call	0x1346	; 0x1346 <SPI_write>
     6d2:	8d 2f       	mov	r24, r29
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	0e 94 a3 09 	call	0x1346	; 0x1346 <SPI_write>
     6da:	8c 2f       	mov	r24, r28
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	0e 94 a3 09 	call	0x1346	; 0x1346 <SPI_write>
     6e2:	88 b3       	in	r24, 0x18	; 24
     6e4:	80 61       	ori	r24, 0x10	; 16
     6e6:	88 bb       	out	0x18, r24	; 24
     6e8:	df 91       	pop	r29
     6ea:	cf 91       	pop	r28
     6ec:	1f 91       	pop	r17
     6ee:	08 95       	ret

000006f0 <CAN_reset>:
     6f0:	88 b3       	in	r24, 0x18	; 24
     6f2:	8f 7e       	andi	r24, 0xEF	; 239
     6f4:	88 bb       	out	0x18, r24	; 24
     6f6:	80 ec       	ldi	r24, 0xC0	; 192
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	0e 94 a3 09 	call	0x1346	; 0x1346 <SPI_write>
     6fe:	88 b3       	in	r24, 0x18	; 24
     700:	80 61       	ori	r24, 0x10	; 16
     702:	88 bb       	out	0x18, r24	; 24
     704:	08 95       	ret

00000706 <CAN_init>:
     706:	0e 94 99 09 	call	0x1332	; 0x1332 <SPI_init>
     70a:	0e 94 78 03 	call	0x6f0	; 0x6f0 <CAN_reset>
     70e:	8e e0       	ldi	r24, 0x0E	; 14
     710:	0e 94 1f 03 	call	0x63e	; 0x63e <CAN_read>
     714:	80 7e       	andi	r24, 0xE0	; 224
     716:	80 38       	cpi	r24, 0x80	; 128
     718:	31 f0       	breq	.+12     	; 0x726 <CAN_init+0x20>
     71a:	86 e0       	ldi	r24, 0x06	; 6
     71c:	91 e0       	ldi	r25, 0x01	; 1
     71e:	0e 94 36 0a 	call	0x146c	; 0x146c <puts>
     722:	81 e0       	ldi	r24, 0x01	; 1
     724:	08 95       	ret
     726:	43 e8       	ldi	r20, 0x83	; 131
     728:	6f ef       	ldi	r22, 0xFF	; 255
     72a:	8a e2       	ldi	r24, 0x2A	; 42
     72c:	0e 94 58 03 	call	0x6b0	; 0x6b0 <CAN_bit_modify>
     730:	49 ef       	ldi	r20, 0xF9	; 249
     732:	6f ef       	ldi	r22, 0xFF	; 255
     734:	89 e2       	ldi	r24, 0x29	; 41
     736:	0e 94 58 03 	call	0x6b0	; 0x6b0 <CAN_bit_modify>
     73a:	47 e0       	ldi	r20, 0x07	; 7
     73c:	67 ec       	ldi	r22, 0xC7	; 199
     73e:	88 e2       	ldi	r24, 0x28	; 40
     740:	0e 94 58 03 	call	0x6b0	; 0x6b0 <CAN_bit_modify>
     744:	40 e2       	ldi	r20, 0x20	; 32
     746:	60 e6       	ldi	r22, 0x60	; 96
     748:	80 e6       	ldi	r24, 0x60	; 96
     74a:	0e 94 58 03 	call	0x6b0	; 0x6b0 <CAN_bit_modify>
     74e:	41 e0       	ldi	r20, 0x01	; 1
     750:	61 e0       	ldi	r22, 0x01	; 1
     752:	8b e2       	ldi	r24, 0x2B	; 43
     754:	0e 94 58 03 	call	0x6b0	; 0x6b0 <CAN_bit_modify>
     758:	40 e0       	ldi	r20, 0x00	; 0
     75a:	60 ee       	ldi	r22, 0xE0	; 224
     75c:	8f e0       	ldi	r24, 0x0F	; 15
     75e:	0e 94 58 03 	call	0x6b0	; 0x6b0 <CAN_bit_modify>
     762:	80 e0       	ldi	r24, 0x00	; 0
     764:	08 95       	ret

00000766 <CAN_write_message>:

CAN_write_message(struct Can_Message message){
     766:	ff 92       	push	r15
     768:	0f 93       	push	r16
     76a:	1f 93       	push	r17
     76c:	cf 93       	push	r28
     76e:	df 93       	push	r29
     770:	cd b7       	in	r28, 0x3d	; 61
     772:	de b7       	in	r29, 0x3e	; 62
     774:	2a 97       	sbiw	r28, 0x0a	; 10
     776:	0f b6       	in	r0, 0x3f	; 63
     778:	f8 94       	cli
     77a:	de bf       	out	0x3e, r29	; 62
     77c:	0f be       	out	0x3f, r0	; 63
     77e:	cd bf       	out	0x3d, r28	; 61
     780:	09 83       	std	Y+1, r16	; 0x01
     782:	1a 83       	std	Y+2, r17	; 0x02
     784:	2b 83       	std	Y+3, r18	; 0x03
     786:	3c 83       	std	Y+4, r19	; 0x04
     788:	4d 83       	std	Y+5, r20	; 0x05
     78a:	5e 83       	std	Y+6, r21	; 0x06
     78c:	6f 83       	std	Y+7, r22	; 0x07
     78e:	78 87       	std	Y+8, r23	; 0x08
     790:	89 87       	std	Y+9, r24	; 0x09
     792:	9a 87       	std	Y+10, r25	; 0x0a
	
	while ((CAN_read(MCP_TXB0CTRL) & (1<<3))){}
     794:	80 e3       	ldi	r24, 0x30	; 48
     796:	0e 94 1f 03 	call	0x63e	; 0x63e <CAN_read>
     79a:	83 fd       	sbrc	r24, 3
     79c:	fb cf       	rjmp	.-10     	; 0x794 <CAN_write_message+0x2e>
	//TODO: Send id to two register, len to one, then data, then request to send.
	CAN_write(MCP_TXB0_ID_LOW, (message.id & 0x07) << 5);
     79e:	19 81       	ldd	r17, Y+1	; 0x01
     7a0:	80 e2       	ldi	r24, 0x20	; 32
     7a2:	18 9f       	mul	r17, r24
     7a4:	b0 01       	movw	r22, r0
     7a6:	11 24       	eor	r1, r1
     7a8:	82 e3       	ldi	r24, 0x32	; 50
     7aa:	0e 94 33 03 	call	0x666	; 0x666 <CAN_write>
	
	CAN_write(MCP_TXB0_ID_HIGH, (message.id >> 3) & 0xFF );
     7ae:	61 2f       	mov	r22, r17
     7b0:	66 95       	lsr	r22
     7b2:	66 95       	lsr	r22
     7b4:	66 95       	lsr	r22
     7b6:	81 e3       	ldi	r24, 0x31	; 49
     7b8:	0e 94 33 03 	call	0x666	; 0x666 <CAN_write>
	
	
	//printf("%hd \r \n", (message.id << 5) & 0xFF);
	//printf("%hd \r \n", message.id >> 3);
	//printf("message length: %i \r \n", message.length);
	CAN_write(MCP_TXB0_LEN, message.length);
     7bc:	fa 80       	ldd	r15, Y+2	; 0x02
     7be:	6f 2d       	mov	r22, r15
     7c0:	85 e3       	ldi	r24, 0x35	; 53
     7c2:	0e 94 33 03 	call	0x666	; 0x666 <CAN_write>
	
	for (int i = 0; i<message.length; i++){
     7c6:	00 e0       	ldi	r16, 0x00	; 0
     7c8:	10 e0       	ldi	r17, 0x00	; 0
     7ca:	13 c0       	rjmp	.+38     	; 0x7f2 <CAN_write_message+0x8c>
		CAN_write(MCP_TXB0_DATA + i, message.data[i]);
     7cc:	e3 e0       	ldi	r30, 0x03	; 3
     7ce:	f0 e0       	ldi	r31, 0x00	; 0
     7d0:	ec 0f       	add	r30, r28
     7d2:	fd 1f       	adc	r31, r29
     7d4:	e0 0f       	add	r30, r16
     7d6:	f1 1f       	adc	r31, r17
     7d8:	60 81       	ld	r22, Z
     7da:	86 e3       	ldi	r24, 0x36	; 54
     7dc:	80 0f       	add	r24, r16
     7de:	0e 94 33 03 	call	0x666	; 0x666 <CAN_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7e2:	83 ec       	ldi	r24, 0xC3	; 195
     7e4:	99 e0       	ldi	r25, 0x09	; 9
     7e6:	01 97       	sbiw	r24, 0x01	; 1
     7e8:	f1 f7       	brne	.-4      	; 0x7e6 <CAN_write_message+0x80>
     7ea:	00 c0       	rjmp	.+0      	; 0x7ec <CAN_write_message+0x86>
     7ec:	00 00       	nop
	//printf("%hd \r \n", (message.id << 5) & 0xFF);
	//printf("%hd \r \n", message.id >> 3);
	//printf("message length: %i \r \n", message.length);
	CAN_write(MCP_TXB0_LEN, message.length);
	
	for (int i = 0; i<message.length; i++){
     7ee:	0f 5f       	subi	r16, 0xFF	; 255
     7f0:	1f 4f       	sbci	r17, 0xFF	; 255
     7f2:	8f 2d       	mov	r24, r15
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	08 17       	cp	r16, r24
     7f8:	19 07       	cpc	r17, r25
     7fa:	44 f3       	brlt	.-48     	; 0x7cc <CAN_write_message+0x66>
		CAN_write(MCP_TXB0_DATA + i, message.data[i]);
		_delay_ms(10);
	}
	CAN_request_to_send(0x1);
     7fc:	81 e0       	ldi	r24, 0x01	; 1
     7fe:	0e 94 4c 03 	call	0x698	; 0x698 <CAN_request_to_send>
	
}
     802:	2a 96       	adiw	r28, 0x0a	; 10
     804:	0f b6       	in	r0, 0x3f	; 63
     806:	f8 94       	cli
     808:	de bf       	out	0x3e, r29	; 62
     80a:	0f be       	out	0x3f, r0	; 63
     80c:	cd bf       	out	0x3d, r28	; 61
     80e:	df 91       	pop	r29
     810:	cf 91       	pop	r28
     812:	1f 91       	pop	r17
     814:	0f 91       	pop	r16
     816:	ff 90       	pop	r15
     818:	08 95       	ret

0000081a <CAN_read_message>:

struct Can_Message CAN_read_message(){
     81a:	ff 92       	push	r15
     81c:	0f 93       	push	r16
     81e:	1f 93       	push	r17
     820:	cf 93       	push	r28
     822:	df 93       	push	r29
     824:	8c 01       	movw	r16, r24
     826:	83 ec       	ldi	r24, 0xC3	; 195
     828:	99 e0       	ldi	r25, 0x09	; 9
     82a:	01 97       	sbiw	r24, 0x01	; 1
     82c:	f1 f7       	brne	.-4      	; 0x82a <CAN_read_message+0x10>
     82e:	00 c0       	rjmp	.+0      	; 0x830 <CAN_read_message+0x16>
     830:	00 00       	nop
	
	
	struct Can_Message recieved_message;
	
	_delay_ms(10);
	recieved_message.length = CAN_read(MCP_RXB0_LEN) & 0x0F ;
     832:	85 e6       	ldi	r24, 0x65	; 101
     834:	0e 94 1f 03 	call	0x63e	; 0x63e <CAN_read>
     838:	8f 70       	andi	r24, 0x0F	; 15
     83a:	f8 2e       	mov	r15, r24
     83c:	f8 01       	movw	r30, r16
     83e:	81 83       	std	Z+1, r24	; 0x01
     840:	83 ec       	ldi	r24, 0xC3	; 195
     842:	99 e0       	ldi	r25, 0x09	; 9
     844:	01 97       	sbiw	r24, 0x01	; 1
     846:	f1 f7       	brne	.-4      	; 0x844 <CAN_read_message+0x2a>
     848:	00 c0       	rjmp	.+0      	; 0x84a <CAN_read_message+0x30>
     84a:	00 00       	nop
	//recieved_message.length = CAN_read(MCP_RXB0_LEN) & 0x0F;
	
	_delay_ms(10);
	recieved_message.id = ((CAN_read(MCP_RXB0_ID_HIGH) << 3) | (CAN_read(MCP_RXB0_ID_LOW) >> 5)) & 0xFF;
     84c:	81 e6       	ldi	r24, 0x61	; 97
     84e:	0e 94 1f 03 	call	0x63e	; 0x63e <CAN_read>
     852:	c8 2f       	mov	r28, r24
     854:	d0 e0       	ldi	r29, 0x00	; 0
     856:	cc 0f       	add	r28, r28
     858:	dd 1f       	adc	r29, r29
     85a:	cc 0f       	add	r28, r28
     85c:	dd 1f       	adc	r29, r29
     85e:	cc 0f       	add	r28, r28
     860:	dd 1f       	adc	r29, r29
     862:	82 e6       	ldi	r24, 0x62	; 98
     864:	0e 94 1f 03 	call	0x63e	; 0x63e <CAN_read>
     868:	82 95       	swap	r24
     86a:	86 95       	lsr	r24
     86c:	87 70       	andi	r24, 0x07	; 7
     86e:	c8 2b       	or	r28, r24
     870:	f8 01       	movw	r30, r16
     872:	c0 83       	st	Z, r28
	//printf("received length: %x \n", recieved_message.length);
	
	for (int i = 0; i<recieved_message.length; i++){
     874:	c0 e0       	ldi	r28, 0x00	; 0
     876:	d0 e0       	ldi	r29, 0x00	; 0
     878:	0f c0       	rjmp	.+30     	; 0x898 <CAN_read_message+0x7e>
		recieved_message.data[i] = CAN_read(MCP_RXB0_DATA + i);
     87a:	8c 2f       	mov	r24, r28
     87c:	8a 59       	subi	r24, 0x9A	; 154
     87e:	0e 94 1f 03 	call	0x63e	; 0x63e <CAN_read>
     882:	f8 01       	movw	r30, r16
     884:	ec 0f       	add	r30, r28
     886:	fd 1f       	adc	r31, r29
     888:	82 83       	std	Z+2, r24	; 0x02
     88a:	83 ec       	ldi	r24, 0xC3	; 195
     88c:	99 e0       	ldi	r25, 0x09	; 9
     88e:	01 97       	sbiw	r24, 0x01	; 1
     890:	f1 f7       	brne	.-4      	; 0x88e <CAN_read_message+0x74>
     892:	00 c0       	rjmp	.+0      	; 0x894 <CAN_read_message+0x7a>
     894:	00 00       	nop
	
	_delay_ms(10);
	recieved_message.id = ((CAN_read(MCP_RXB0_ID_HIGH) << 3) | (CAN_read(MCP_RXB0_ID_LOW) >> 5)) & 0xFF;
	//printf("received length: %x \n", recieved_message.length);
	
	for (int i = 0; i<recieved_message.length; i++){
     896:	21 96       	adiw	r28, 0x01	; 1
     898:	8f 2d       	mov	r24, r15
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	c8 17       	cp	r28, r24
     89e:	d9 07       	cpc	r29, r25
     8a0:	64 f3       	brlt	.-40     	; 0x87a <CAN_read_message+0x60>
		recieved_message.data[i] = CAN_read(MCP_RXB0_DATA + i);
		_delay_ms(10);
	}
	
	CAN_bit_modify(MCP_CANINTF, 0x01, 0x00);
     8a2:	40 e0       	ldi	r20, 0x00	; 0
     8a4:	61 e0       	ldi	r22, 0x01	; 1
     8a6:	8c e2       	ldi	r24, 0x2C	; 44
     8a8:	0e 94 58 03 	call	0x6b0	; 0x6b0 <CAN_bit_modify>

	
	return recieved_message;
     8ac:	c8 01       	movw	r24, r16
     8ae:	df 91       	pop	r29
     8b0:	cf 91       	pop	r28
     8b2:	1f 91       	pop	r17
     8b4:	0f 91       	pop	r16
     8b6:	ff 90       	pop	r15
     8b8:	08 95       	ret

000008ba <USART_Init>:
#include "global.h"

void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR1H = (unsigned char)(ubrr>>8);
     8ba:	9c bf       	out	0x3c, r25	; 60
	UBRR1L = (unsigned char)ubrr;
     8bc:	80 b9       	out	0x00, r24	; 0
	/* Enable receiver and transmitter */
	UCSR1B = (1<<RXEN1)|(1<<TXEN1);
     8be:	88 e1       	ldi	r24, 0x18	; 24
     8c0:	81 b9       	out	0x01, r24	; 1
	/* Set frame format: 8data, 2stop bit */
	UCSR1C = (1<<URSEL1)|(1<<USBS1)|(3<<UCSZ10);
     8c2:	8e e8       	ldi	r24, 0x8E	; 142
     8c4:	8c bf       	out	0x3c, r24	; 60
     8c6:	08 95       	ret

000008c8 <USART_Transmit>:
}

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR1A & (1<<UDRE1)) )
     8c8:	15 9b       	sbis	0x02, 5	; 2
     8ca:	fe cf       	rjmp	.-4      	; 0x8c8 <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR1 = data;
     8cc:	83 b9       	out	0x03, r24	; 3
     8ce:	08 95       	ret

000008d0 <USART_Receive>:
}

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR1A & (1<<RXC1)) )
     8d0:	17 9b       	sbis	0x02, 7	; 2
     8d2:	fe cf       	rjmp	.-4      	; 0x8d0 <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR1;
     8d4:	83 b1       	in	r24, 0x03	; 3
}
     8d6:	08 95       	ret

000008d8 <interrupt_init>:
     8d8:	f8 94       	cli
     8da:	20 b3       	in	r18, 0x10	; 16
     8dc:	81 e0       	ldi	r24, 0x01	; 1
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	ac 01       	movw	r20, r24
     8e2:	02 c0       	rjmp	.+4      	; 0x8e8 <interrupt_init+0x10>
     8e4:	44 0f       	add	r20, r20
     8e6:	55 1f       	adc	r21, r21
     8e8:	2a 95       	dec	r18
     8ea:	e2 f7       	brpl	.-8      	; 0x8e4 <interrupt_init+0xc>
     8ec:	9a 01       	movw	r18, r20
     8ee:	20 95       	com	r18
     8f0:	30 95       	com	r19
     8f2:	40 b3       	in	r20, 0x10	; 16
     8f4:	02 c0       	rjmp	.+4      	; 0x8fa <interrupt_init+0x22>
     8f6:	88 0f       	add	r24, r24
     8f8:	99 1f       	adc	r25, r25
     8fa:	4a 95       	dec	r20
     8fc:	e2 f7       	brpl	.-8      	; 0x8f6 <interrupt_init+0x1e>
     8fe:	82 2b       	or	r24, r18
     900:	93 2b       	or	r25, r19
     902:	91 b3       	in	r25, 0x11	; 17
     904:	89 23       	and	r24, r25
     906:	81 bb       	out	0x11, r24	; 17
     908:	86 b1       	in	r24, 0x06	; 6
     90a:	8e 7f       	andi	r24, 0xFE	; 254
     90c:	86 b9       	out	0x06, r24	; 6
     90e:	87 b1       	in	r24, 0x07	; 7
     910:	81 60       	ori	r24, 0x01	; 1
     912:	87 b9       	out	0x07, r24	; 7
     914:	85 b7       	in	r24, 0x35	; 53
     916:	80 68       	ori	r24, 0x80	; 128
     918:	85 bf       	out	0x35, r24	; 53
     91a:	85 b7       	in	r24, 0x35	; 53
     91c:	8f 60       	ori	r24, 0x0F	; 15
     91e:	85 bf       	out	0x35, r24	; 53
     920:	86 b7       	in	r24, 0x36	; 54
     922:	86 bf       	out	0x36, r24	; 54
     924:	8b b7       	in	r24, 0x3b	; 59
     926:	80 6e       	ori	r24, 0xE0	; 224
     928:	8b bf       	out	0x3b, r24	; 59
     92a:	78 94       	sei
     92c:	08 95       	ret

0000092e <__vector_1>:
#define BAUD 9600
//#define F_CPU 8000000
#define MYUBRR FOSC/16/BAUD-1 // = 31


ISR(INT0_vect){
     92e:	1f 92       	push	r1
     930:	0f 92       	push	r0
     932:	0f b6       	in	r0, 0x3f	; 63
     934:	0f 92       	push	r0
     936:	11 24       	eor	r1, r1
     938:	2f 93       	push	r18
     93a:	3f 93       	push	r19
     93c:	4f 93       	push	r20
     93e:	5f 93       	push	r21
     940:	6f 93       	push	r22
     942:	7f 93       	push	r23
     944:	8f 93       	push	r24
     946:	9f 93       	push	r25
     948:	af 93       	push	r26
     94a:	bf 93       	push	r27
     94c:	ef 93       	push	r30
     94e:	ff 93       	push	r31
	printf("\r\nRight button\r\n");
     950:	8a e3       	ldi	r24, 0x3A	; 58
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	0e 94 36 0a 	call	0x146c	; 0x146c <puts>
	update_OLED();
     958:	0e 94 21 08 	call	0x1042	; 0x1042 <update_OLED>
	
}
     95c:	ff 91       	pop	r31
     95e:	ef 91       	pop	r30
     960:	bf 91       	pop	r27
     962:	af 91       	pop	r26
     964:	9f 91       	pop	r25
     966:	8f 91       	pop	r24
     968:	7f 91       	pop	r23
     96a:	6f 91       	pop	r22
     96c:	5f 91       	pop	r21
     96e:	4f 91       	pop	r20
     970:	3f 91       	pop	r19
     972:	2f 91       	pop	r18
     974:	0f 90       	pop	r0
     976:	0f be       	out	0x3f, r0	; 63
     978:	0f 90       	pop	r0
     97a:	1f 90       	pop	r1
     97c:	18 95       	reti

0000097e <__vector_2>:
ISR(INT1_vect){
     97e:	1f 92       	push	r1
     980:	0f 92       	push	r0
     982:	0f b6       	in	r0, 0x3f	; 63
     984:	0f 92       	push	r0
     986:	11 24       	eor	r1, r1
     988:	2f 93       	push	r18
     98a:	3f 93       	push	r19
     98c:	4f 93       	push	r20
     98e:	5f 93       	push	r21
     990:	6f 93       	push	r22
     992:	7f 93       	push	r23
     994:	8f 93       	push	r24
     996:	9f 93       	push	r25
     998:	af 93       	push	r26
     99a:	bf 93       	push	r27
     99c:	ef 93       	push	r30
     99e:	ff 93       	push	r31
	printf("\r\nLeft button\r\n");
     9a0:	8a e4       	ldi	r24, 0x4A	; 74
     9a2:	91 e0       	ldi	r25, 0x01	; 1
     9a4:	0e 94 36 0a 	call	0x146c	; 0x146c <puts>
}
     9a8:	ff 91       	pop	r31
     9aa:	ef 91       	pop	r30
     9ac:	bf 91       	pop	r27
     9ae:	af 91       	pop	r26
     9b0:	9f 91       	pop	r25
     9b2:	8f 91       	pop	r24
     9b4:	7f 91       	pop	r23
     9b6:	6f 91       	pop	r22
     9b8:	5f 91       	pop	r21
     9ba:	4f 91       	pop	r20
     9bc:	3f 91       	pop	r19
     9be:	2f 91       	pop	r18
     9c0:	0f 90       	pop	r0
     9c2:	0f be       	out	0x3f, r0	; 63
     9c4:	0f 90       	pop	r0
     9c6:	1f 90       	pop	r1
     9c8:	18 95       	reti

000009ca <__vector_3>:
ISR(INT2_vect){
     9ca:	1f 92       	push	r1
     9cc:	0f 92       	push	r0
     9ce:	0f b6       	in	r0, 0x3f	; 63
     9d0:	0f 92       	push	r0
     9d2:	11 24       	eor	r1, r1
     9d4:	ef 92       	push	r14
     9d6:	ff 92       	push	r15
     9d8:	0f 93       	push	r16
     9da:	1f 93       	push	r17
     9dc:	2f 93       	push	r18
     9de:	3f 93       	push	r19
     9e0:	4f 93       	push	r20
     9e2:	5f 93       	push	r21
     9e4:	6f 93       	push	r22
     9e6:	7f 93       	push	r23
     9e8:	8f 93       	push	r24
     9ea:	9f 93       	push	r25
     9ec:	af 93       	push	r26
     9ee:	bf 93       	push	r27
     9f0:	ef 93       	push	r30
     9f2:	ff 93       	push	r31
     9f4:	cf 93       	push	r28
     9f6:	df 93       	push	r29
     9f8:	cd b7       	in	r28, 0x3d	; 61
     9fa:	de b7       	in	r29, 0x3e	; 62
     9fc:	2a 97       	sbiw	r28, 0x0a	; 10
     9fe:	de bf       	out	0x3e, r29	; 62
     a00:	cd bf       	out	0x3d, r28	; 61
     a02:	87 ea       	ldi	r24, 0xA7	; 167
     a04:	91 e6       	ldi	r25, 0x61	; 97
     a06:	01 97       	sbiw	r24, 0x01	; 1
     a08:	f1 f7       	brne	.-4      	; 0xa06 <__vector_3+0x3c>
     a0a:	00 c0       	rjmp	.+0      	; 0xa0c <__vector_3+0x42>
     a0c:	00 00       	nop
	//printf("\r\n Element %u", OLED_contents.menu_index);
	
	_delay_ms(100);
	struct Can_Message rec_message = CAN_read_message();
     a0e:	ce 01       	movw	r24, r28
     a10:	01 96       	adiw	r24, 0x01	; 1
     a12:	0e 94 0d 04 	call	0x81a	; 0x81a <CAN_read_message>
	if(rec_message.id != 0 & rec_message.id < 31){
     a16:	89 81       	ldd	r24, Y+1	; 0x01
     a18:	9f ef       	ldi	r25, 0xFF	; 255
     a1a:	98 0f       	add	r25, r24
     a1c:	9e 31       	cpi	r25, 0x1E	; 30
     a1e:	a0 f5       	brcc	.+104    	; 0xa88 <__vector_3+0xbe>
		//printf("len: %i, id: %i, data: %i \r \n", rec_message.length, rec_message.id, rec_message.data[4]);
		printf("len: %i, id: %i \r \n", rec_message.length, rec_message.id);
     a20:	9a 81       	ldd	r25, Y+2	; 0x02
     a22:	e9 2e       	mov	r14, r25
     a24:	f1 2c       	mov	r15, r1
     a26:	1f 92       	push	r1
     a28:	8f 93       	push	r24
     a2a:	1f 92       	push	r1
     a2c:	9f 93       	push	r25
     a2e:	89 e5       	ldi	r24, 0x59	; 89
     a30:	91 e0       	ldi	r25, 0x01	; 1
     a32:	9f 93       	push	r25
     a34:	8f 93       	push	r24
     a36:	0e 94 20 0a 	call	0x1440	; 0x1440 <printf>
		for (int i = 0; i < rec_message.length; i++){
     a3a:	0f 90       	pop	r0
     a3c:	0f 90       	pop	r0
     a3e:	0f 90       	pop	r0
     a40:	0f 90       	pop	r0
     a42:	0f 90       	pop	r0
     a44:	0f 90       	pop	r0
     a46:	00 e0       	ldi	r16, 0x00	; 0
     a48:	10 e0       	ldi	r17, 0x00	; 0
     a4a:	1b c0       	rjmp	.+54     	; 0xa82 <__vector_3+0xb8>
			printf("DATA: %i \r \n", rec_message.data[i]);
     a4c:	e3 e0       	ldi	r30, 0x03	; 3
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	ec 0f       	add	r30, r28
     a52:	fd 1f       	adc	r31, r29
     a54:	e0 0f       	add	r30, r16
     a56:	f1 1f       	adc	r31, r17
     a58:	80 81       	ld	r24, Z
     a5a:	1f 92       	push	r1
     a5c:	8f 93       	push	r24
     a5e:	8d e6       	ldi	r24, 0x6D	; 109
     a60:	91 e0       	ldi	r25, 0x01	; 1
     a62:	9f 93       	push	r25
     a64:	8f 93       	push	r24
     a66:	0e 94 20 0a 	call	0x1440	; 0x1440 <printf>
     a6a:	83 ec       	ldi	r24, 0xC3	; 195
     a6c:	99 e0       	ldi	r25, 0x09	; 9
     a6e:	01 97       	sbiw	r24, 0x01	; 1
     a70:	f1 f7       	brne	.-4      	; 0xa6e <__vector_3+0xa4>
     a72:	00 c0       	rjmp	.+0      	; 0xa74 <__vector_3+0xaa>
     a74:	00 00       	nop
	_delay_ms(100);
	struct Can_Message rec_message = CAN_read_message();
	if(rec_message.id != 0 & rec_message.id < 31){
		//printf("len: %i, id: %i, data: %i \r \n", rec_message.length, rec_message.id, rec_message.data[4]);
		printf("len: %i, id: %i \r \n", rec_message.length, rec_message.id);
		for (int i = 0; i < rec_message.length; i++){
     a76:	0f 5f       	subi	r16, 0xFF	; 255
     a78:	1f 4f       	sbci	r17, 0xFF	; 255
     a7a:	0f 90       	pop	r0
     a7c:	0f 90       	pop	r0
     a7e:	0f 90       	pop	r0
     a80:	0f 90       	pop	r0
     a82:	0e 15       	cp	r16, r14
     a84:	1f 05       	cpc	r17, r15
     a86:	14 f3       	brlt	.-60     	; 0xa4c <__vector_3+0x82>
			printf("DATA: %i \r \n", rec_message.data[i]);
			_delay_ms(10);
		}
	}
	
}
     a88:	2a 96       	adiw	r28, 0x0a	; 10
     a8a:	0f b6       	in	r0, 0x3f	; 63
     a8c:	f8 94       	cli
     a8e:	de bf       	out	0x3e, r29	; 62
     a90:	0f be       	out	0x3f, r0	; 63
     a92:	cd bf       	out	0x3d, r28	; 61
     a94:	df 91       	pop	r29
     a96:	cf 91       	pop	r28
     a98:	ff 91       	pop	r31
     a9a:	ef 91       	pop	r30
     a9c:	bf 91       	pop	r27
     a9e:	af 91       	pop	r26
     aa0:	9f 91       	pop	r25
     aa2:	8f 91       	pop	r24
     aa4:	7f 91       	pop	r23
     aa6:	6f 91       	pop	r22
     aa8:	5f 91       	pop	r21
     aaa:	4f 91       	pop	r20
     aac:	3f 91       	pop	r19
     aae:	2f 91       	pop	r18
     ab0:	1f 91       	pop	r17
     ab2:	0f 91       	pop	r16
     ab4:	ff 90       	pop	r15
     ab6:	ef 90       	pop	r14
     ab8:	0f 90       	pop	r0
     aba:	0f be       	out	0x3f, r0	; 63
     abc:	0f 90       	pop	r0
     abe:	1f 90       	pop	r1
     ac0:	18 95       	reti

00000ac2 <main>:


int main(void)
{
	
	USART_Init(31);
     ac2:	8f e1       	ldi	r24, 0x1F	; 31
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	0e 94 5d 04 	call	0x8ba	; 0x8ba <USART_Init>
	fdevopen(USART_Transmit, USART_Receive);
     aca:	68 e6       	ldi	r22, 0x68	; 104
     acc:	74 e0       	ldi	r23, 0x04	; 4
     ace:	84 e6       	ldi	r24, 0x64	; 100
     ad0:	94 e0       	ldi	r25, 0x04	; 4
     ad2:	0e 94 d5 09 	call	0x13aa	; 0x13aa <fdevopen>
	adc_init();
     ad6:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <adc_init>
	interrupt_init();
     ada:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <interrupt_init>
	
	SFIOR |= (1 << XMM0 ); // mask unused bits for DATABUS
     ade:	80 b7       	in	r24, 0x30	; 48
     ae0:	88 60       	ori	r24, 0x08	; 8
     ae2:	80 bf       	out	0x30, r24	; 48
	
	adc_calibrate();
     ae4:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <adc_calibrate>
	OLED_init();
     ae8:	0e 94 a1 08 	call	0x1142	; 0x1142 <OLED_init>
	OLED_reset();
     aec:	0e 94 3e 09 	call	0x127c	; 0x127c <OLED_reset>
	
	CAN_init();
     af0:	0e 94 83 03 	call	0x706	; 0x706 <CAN_init>
	
	Main_Menu();
     af4:	0e 94 02 07 	call	0xe04	; 0xe04 <Main_Menu>
	flag_init();
     af8:	0e 94 8a 05 	call	0xb14	; 0xb14 <flag_init>
	
	struct Can_Message can_message; //DEBUG TEST MESSAGE
	can_message.id = 25;
	can_message.length = 8;
	//can_message.data[0] = 5;
	for (int i = 0; i < can_message.length; i++){
     afc:	80 e0       	ldi	r24, 0x00	; 0
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	01 c0       	rjmp	.+2      	; 0xb04 <main+0x42>
     b02:	01 96       	adiw	r24, 0x01	; 1
     b04:	88 30       	cpi	r24, 0x08	; 8
     b06:	91 05       	cpc	r25, r1
     b08:	e4 f3       	brlt	.-8      	; 0xb02 <main+0x40>
	int x = 0; //DEBUG TEST VARIABLE
	
	while (1)
	{
		// NEW VERSION OF MAIN
		Menu_arrow_refresh();
     b0a:	0e 94 e6 05 	call	0xbcc	; 0xbcc <Menu_arrow_refresh>
		check_for_updates(); // Polling function to check if there are updates on the stick states (joystick and sliders)
     b0e:	0e 94 b0 02 	call	0x560	; 0x560 <check_for_updates>
     b12:	fb cf       	rjmp	.-10     	; 0xb0a <main+0x48>

00000b14 <flag_init>:
	strcpy(Menu_contents.linedata[5], "");
	strcpy(Menu_contents.linedata[6], "");
	strcpy(Menu_contents.linedata[7], "");
	strcpy(Menu_contents.linedata[8], "");
	//Menu_contents.menu_index = 1;
	Game_Mode_print();
     b14:	81 e0       	ldi	r24, 0x01	; 1
     b16:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <menu_flag>
     b1a:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <main_menu_flag>
     b1e:	10 92 4e 03 	sts	0x034E, r1	; 0x80034e <game_modes_flag>
     b22:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <difficulty_flag>
     b26:	10 92 3b 03 	sts	0x033B, r1	; 0x80033b <choose_player_flag>
     b2a:	10 92 34 03 	sts	0x0334, r1	; 0x800334 <game_over_flag>
     b2e:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <end_of_game_flag>
     b32:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <leaderboard_flag>
     b36:	10 92 37 03 	sts	0x0337, r1	; 0x800337 <arcade_mode_flag>
     b3a:	10 92 47 03 	sts	0x0347, r1	; 0x800347 <normal_mode_flag>
     b3e:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <current_player+0x1>
     b42:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <current_player>
     b46:	10 92 49 03 	sts	0x0349, r1	; 0x800349 <previous_stick_state_x+0x1>
     b4a:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <previous_stick_state_x>
     b4e:	10 92 36 03 	sts	0x0336, r1	; 0x800336 <previous_stick_state_y+0x1>
     b52:	10 92 35 03 	sts	0x0335, r1	; 0x800335 <previous_stick_state_y>
     b56:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <previous_slider_state_left+0x1>
     b5a:	10 92 4a 03 	sts	0x034A, r1	; 0x80034a <previous_slider_state_left>
     b5e:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <previous_slider_state_right+0x1>
     b62:	10 92 59 03 	sts	0x0359, r1	; 0x800359 <previous_slider_state_right>
     b66:	08 95       	ret

00000b68 <Menu_print_arrow>:
     b68:	80 e0       	ldi	r24, 0x00	; 0
     b6a:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     b6e:	88 e1       	ldi	r24, 0x18	; 24
     b70:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     b74:	88 e1       	ldi	r24, 0x18	; 24
     b76:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     b7a:	88 e1       	ldi	r24, 0x18	; 24
     b7c:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     b80:	8e e7       	ldi	r24, 0x7E	; 126
     b82:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     b86:	8c e3       	ldi	r24, 0x3C	; 60
     b88:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     b8c:	88 e1       	ldi	r24, 0x18	; 24
     b8e:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     b92:	80 e0       	ldi	r24, 0x00	; 0
     b94:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     b98:	08 95       	ret

00000b9a <Menu_no_arrow>:
     b9a:	80 e0       	ldi	r24, 0x00	; 0
     b9c:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     ba0:	80 e0       	ldi	r24, 0x00	; 0
     ba2:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     bb2:	80 e0       	ldi	r24, 0x00	; 0
     bb4:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     bb8:	80 e0       	ldi	r24, 0x00	; 0
     bba:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     bbe:	80 e0       	ldi	r24, 0x00	; 0
     bc0:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     bc4:	80 e0       	ldi	r24, 0x00	; 0
     bc6:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
     bca:	08 95       	ret

00000bcc <Menu_arrow_refresh>:
     bcc:	cf 93       	push	r28
     bce:	0e 94 77 02 	call	0x4ee	; 0x4ee <get_stick_direction>
     bd2:	c0 91 64 03 	lds	r28, 0x0364	; 0x800364 <Menu_contents>
     bd6:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <stick_state+0x6>
     bda:	90 91 56 03 	lds	r25, 0x0356	; 0x800356 <stick_state+0x7>
     bde:	21 e0       	ldi	r18, 0x01	; 1
     be0:	20 93 58 03 	sts	0x0358, r18	; 0x800358 <neutral_flag>
     be4:	20 91 3a 03 	lds	r18, 0x033A	; 0x80033a <main_menu_flag>
     be8:	22 23       	and	r18, r18
     bea:	f1 f0       	breq	.+60     	; 0xc28 <Menu_arrow_refresh+0x5c>
     bec:	81 30       	cpi	r24, 0x01	; 1
     bee:	91 05       	cpc	r25, r1
     bf0:	29 f4       	brne	.+10     	; 0xbfc <Menu_arrow_refresh+0x30>
     bf2:	c1 30       	cpi	r28, 0x01	; 1
     bf4:	19 f4       	brne	.+6      	; 0xbfc <Menu_arrow_refresh+0x30>
     bf6:	27 e0       	ldi	r18, 0x07	; 7
     bf8:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     bfc:	84 30       	cpi	r24, 0x04	; 4
     bfe:	91 05       	cpc	r25, r1
     c00:	29 f4       	brne	.+10     	; 0xc0c <Menu_arrow_refresh+0x40>
     c02:	e4 e6       	ldi	r30, 0x64	; 100
     c04:	f3 e0       	ldi	r31, 0x03	; 3
     c06:	20 81       	ld	r18, Z
     c08:	2b 5f       	subi	r18, 0xFB	; 251
     c0a:	20 83       	st	Z, r18
     c0c:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     c10:	28 30       	cpi	r18, 0x08	; 8
     c12:	18 f0       	brcs	.+6      	; 0xc1a <Menu_arrow_refresh+0x4e>
     c14:	21 e0       	ldi	r18, 0x01	; 1
     c16:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     c1a:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     c1e:	21 11       	cpse	r18, r1
     c20:	03 c0       	rjmp	.+6      	; 0xc28 <Menu_arrow_refresh+0x5c>
     c22:	27 e0       	ldi	r18, 0x07	; 7
     c24:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     c28:	20 91 4e 03 	lds	r18, 0x034E	; 0x80034e <game_modes_flag>
     c2c:	22 23       	and	r18, r18
     c2e:	61 f1       	breq	.+88     	; 0xc88 <Menu_arrow_refresh+0xbc>
     c30:	81 30       	cpi	r24, 0x01	; 1
     c32:	91 05       	cpc	r25, r1
     c34:	39 f4       	brne	.+14     	; 0xc44 <Menu_arrow_refresh+0x78>
     c36:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     c3a:	22 30       	cpi	r18, 0x02	; 2
     c3c:	19 f4       	brne	.+6      	; 0xc44 <Menu_arrow_refresh+0x78>
     c3e:	21 50       	subi	r18, 0x01	; 1
     c40:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     c44:	84 30       	cpi	r24, 0x04	; 4
     c46:	91 05       	cpc	r25, r1
     c48:	39 f4       	brne	.+14     	; 0xc58 <Menu_arrow_refresh+0x8c>
     c4a:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     c4e:	21 30       	cpi	r18, 0x01	; 1
     c50:	19 f4       	brne	.+6      	; 0xc58 <Menu_arrow_refresh+0x8c>
     c52:	2f 5f       	subi	r18, 0xFF	; 255
     c54:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     c58:	84 30       	cpi	r24, 0x04	; 4
     c5a:	91 05       	cpc	r25, r1
     c5c:	39 f4       	brne	.+14     	; 0xc6c <Menu_arrow_refresh+0xa0>
     c5e:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     c62:	22 30       	cpi	r18, 0x02	; 2
     c64:	19 f4       	brne	.+6      	; 0xc6c <Menu_arrow_refresh+0xa0>
     c66:	27 e0       	ldi	r18, 0x07	; 7
     c68:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     c6c:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     c70:	28 30       	cpi	r18, 0x08	; 8
     c72:	18 f0       	brcs	.+6      	; 0xc7a <Menu_arrow_refresh+0xae>
     c74:	21 e0       	ldi	r18, 0x01	; 1
     c76:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     c7a:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     c7e:	21 11       	cpse	r18, r1
     c80:	03 c0       	rjmp	.+6      	; 0xc88 <Menu_arrow_refresh+0xbc>
     c82:	27 e0       	ldi	r18, 0x07	; 7
     c84:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     c88:	20 91 3c 03 	lds	r18, 0x033C	; 0x80033c <difficulty_flag>
     c8c:	22 23       	and	r18, r18
     c8e:	61 f1       	breq	.+88     	; 0xce8 <Menu_arrow_refresh+0x11c>
     c90:	81 30       	cpi	r24, 0x01	; 1
     c92:	91 05       	cpc	r25, r1
     c94:	39 f4       	brne	.+14     	; 0xca4 <Menu_arrow_refresh+0xd8>
     c96:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     c9a:	22 30       	cpi	r18, 0x02	; 2
     c9c:	18 f4       	brcc	.+6      	; 0xca4 <Menu_arrow_refresh+0xd8>
     c9e:	21 50       	subi	r18, 0x01	; 1
     ca0:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     ca4:	84 30       	cpi	r24, 0x04	; 4
     ca6:	91 05       	cpc	r25, r1
     ca8:	39 f4       	brne	.+14     	; 0xcb8 <Menu_arrow_refresh+0xec>
     caa:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     cae:	24 30       	cpi	r18, 0x04	; 4
     cb0:	18 f4       	brcc	.+6      	; 0xcb8 <Menu_arrow_refresh+0xec>
     cb2:	2f 5f       	subi	r18, 0xFF	; 255
     cb4:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     cb8:	84 30       	cpi	r24, 0x04	; 4
     cba:	91 05       	cpc	r25, r1
     cbc:	39 f4       	brne	.+14     	; 0xccc <Menu_arrow_refresh+0x100>
     cbe:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     cc2:	24 30       	cpi	r18, 0x04	; 4
     cc4:	19 f4       	brne	.+6      	; 0xccc <Menu_arrow_refresh+0x100>
     cc6:	27 e0       	ldi	r18, 0x07	; 7
     cc8:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     ccc:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     cd0:	28 30       	cpi	r18, 0x08	; 8
     cd2:	18 f0       	brcs	.+6      	; 0xcda <Menu_arrow_refresh+0x10e>
     cd4:	22 e0       	ldi	r18, 0x02	; 2
     cd6:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     cda:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     cde:	22 30       	cpi	r18, 0x02	; 2
     ce0:	18 f4       	brcc	.+6      	; 0xce8 <Menu_arrow_refresh+0x11c>
     ce2:	27 e0       	ldi	r18, 0x07	; 7
     ce4:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     ce8:	20 91 3b 03 	lds	r18, 0x033B	; 0x80033b <choose_player_flag>
     cec:	22 23       	and	r18, r18
     cee:	f1 f0       	breq	.+60     	; 0xd2c <Menu_arrow_refresh+0x160>
     cf0:	81 30       	cpi	r24, 0x01	; 1
     cf2:	91 05       	cpc	r25, r1
     cf4:	29 f4       	brne	.+10     	; 0xd00 <Menu_arrow_refresh+0x134>
     cf6:	e4 e6       	ldi	r30, 0x64	; 100
     cf8:	f3 e0       	ldi	r31, 0x03	; 3
     cfa:	20 81       	ld	r18, Z
     cfc:	21 50       	subi	r18, 0x01	; 1
     cfe:	20 83       	st	Z, r18
     d00:	84 30       	cpi	r24, 0x04	; 4
     d02:	91 05       	cpc	r25, r1
     d04:	29 f4       	brne	.+10     	; 0xd10 <Menu_arrow_refresh+0x144>
     d06:	e4 e6       	ldi	r30, 0x64	; 100
     d08:	f3 e0       	ldi	r31, 0x03	; 3
     d0a:	20 81       	ld	r18, Z
     d0c:	2f 5f       	subi	r18, 0xFF	; 255
     d0e:	20 83       	st	Z, r18
     d10:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     d14:	28 30       	cpi	r18, 0x08	; 8
     d16:	18 f0       	brcs	.+6      	; 0xd1e <Menu_arrow_refresh+0x152>
     d18:	21 e0       	ldi	r18, 0x01	; 1
     d1a:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     d1e:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     d22:	21 11       	cpse	r18, r1
     d24:	03 c0       	rjmp	.+6      	; 0xd2c <Menu_arrow_refresh+0x160>
     d26:	27 e0       	ldi	r18, 0x07	; 7
     d28:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     d2c:	20 91 34 03 	lds	r18, 0x0334	; 0x800334 <game_over_flag>
     d30:	22 23       	and	r18, r18
     d32:	61 f0       	breq	.+24     	; 0xd4c <Menu_arrow_refresh+0x180>
     d34:	81 30       	cpi	r24, 0x01	; 1
     d36:	91 05       	cpc	r25, r1
     d38:	19 f4       	brne	.+6      	; 0xd40 <Menu_arrow_refresh+0x174>
     d3a:	27 e0       	ldi	r18, 0x07	; 7
     d3c:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     d40:	84 30       	cpi	r24, 0x04	; 4
     d42:	91 05       	cpc	r25, r1
     d44:	19 f4       	brne	.+6      	; 0xd4c <Menu_arrow_refresh+0x180>
     d46:	27 e0       	ldi	r18, 0x07	; 7
     d48:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     d4c:	20 91 4c 03 	lds	r18, 0x034C	; 0x80034c <end_of_game_flag>
     d50:	22 23       	and	r18, r18
     d52:	39 f1       	breq	.+78     	; 0xda2 <Menu_arrow_refresh+0x1d6>
     d54:	81 30       	cpi	r24, 0x01	; 1
     d56:	91 05       	cpc	r25, r1
     d58:	39 f4       	brne	.+14     	; 0xd68 <Menu_arrow_refresh+0x19c>
     d5a:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     d5e:	22 30       	cpi	r18, 0x02	; 2
     d60:	19 f4       	brne	.+6      	; 0xd68 <Menu_arrow_refresh+0x19c>
     d62:	23 e0       	ldi	r18, 0x03	; 3
     d64:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     d68:	84 30       	cpi	r24, 0x04	; 4
     d6a:	91 05       	cpc	r25, r1
     d6c:	39 f4       	brne	.+14     	; 0xd7c <Menu_arrow_refresh+0x1b0>
     d6e:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     d72:	22 30       	cpi	r18, 0x02	; 2
     d74:	19 f4       	brne	.+6      	; 0xd7c <Menu_arrow_refresh+0x1b0>
     d76:	23 e0       	ldi	r18, 0x03	; 3
     d78:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     d7c:	81 30       	cpi	r24, 0x01	; 1
     d7e:	91 05       	cpc	r25, r1
     d80:	39 f4       	brne	.+14     	; 0xd90 <Menu_arrow_refresh+0x1c4>
     d82:	20 91 64 03 	lds	r18, 0x0364	; 0x800364 <Menu_contents>
     d86:	23 30       	cpi	r18, 0x03	; 3
     d88:	19 f4       	brne	.+6      	; 0xd90 <Menu_arrow_refresh+0x1c4>
     d8a:	22 e0       	ldi	r18, 0x02	; 2
     d8c:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <Menu_contents>
     d90:	04 97       	sbiw	r24, 0x04	; 4
     d92:	39 f4       	brne	.+14     	; 0xda2 <Menu_arrow_refresh+0x1d6>
     d94:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <Menu_contents>
     d98:	83 30       	cpi	r24, 0x03	; 3
     d9a:	19 f4       	brne	.+6      	; 0xda2 <Menu_arrow_refresh+0x1d6>
     d9c:	82 e0       	ldi	r24, 0x02	; 2
     d9e:	80 93 64 03 	sts	0x0364, r24	; 0x800364 <Menu_contents>
     da2:	60 e0       	ldi	r22, 0x00	; 0
     da4:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <Menu_contents>
     da8:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <OLED_go_to_pos>
     dac:	0e 94 b4 05 	call	0xb68	; 0xb68 <Menu_print_arrow>
     db0:	60 e0       	ldi	r22, 0x00	; 0
     db2:	8c 2f       	mov	r24, r28
     db4:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <OLED_go_to_pos>
     db8:	0e 94 cd 05 	call	0xb9a	; 0xb9a <Menu_no_arrow>
     dbc:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <neutral_flag>
     dc0:	cf 91       	pop	r28
     dc2:	08 95       	ret

00000dc4 <Menu_print>:
     dc4:	cf 93       	push	r28
     dc6:	df 93       	push	r29
     dc8:	0e 94 01 09 	call	0x1202	; 0x1202 <OLED_home>
     dcc:	84 e7       	ldi	r24, 0x74	; 116
     dce:	93 e0       	ldi	r25, 0x03	; 3
     dd0:	0e 94 21 09 	call	0x1242	; 0x1242 <OLED_printf>
     dd4:	c1 e0       	ldi	r28, 0x01	; 1
     dd6:	d0 e0       	ldi	r29, 0x00	; 0
     dd8:	0f c0       	rjmp	.+30     	; 0xdf8 <Menu_print+0x34>
     dda:	68 e0       	ldi	r22, 0x08	; 8
     ddc:	8c 2f       	mov	r24, r28
     dde:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <OLED_go_to_pos>
     de2:	21 96       	adiw	r28, 0x01	; 1
     de4:	2f e0       	ldi	r18, 0x0F	; 15
     de6:	2c 9f       	mul	r18, r28
     de8:	c0 01       	movw	r24, r0
     dea:	2d 9f       	mul	r18, r29
     dec:	90 0d       	add	r25, r0
     dee:	11 24       	eor	r1, r1
     df0:	8b 59       	subi	r24, 0x9B	; 155
     df2:	9c 4f       	sbci	r25, 0xFC	; 252
     df4:	0e 94 21 09 	call	0x1242	; 0x1242 <OLED_printf>
     df8:	c8 30       	cpi	r28, 0x08	; 8
     dfa:	d1 05       	cpc	r29, r1
     dfc:	74 f3       	brlt	.-36     	; 0xdda <Menu_print+0x16>
     dfe:	df 91       	pop	r29
     e00:	cf 91       	pop	r28
     e02:	08 95       	ret

00000e04 <Main_Menu>:
     e04:	cf 93       	push	r28
     e06:	df 93       	push	r29
     e08:	0e 94 3e 09 	call	0x127c	; 0x127c <OLED_reset>
     e0c:	84 e1       	ldi	r24, 0x14	; 20
     e0e:	ef ec       	ldi	r30, 0xCF	; 207
     e10:	f1 e0       	ldi	r31, 0x01	; 1
     e12:	a4 e7       	ldi	r26, 0x74	; 116
     e14:	b3 e0       	ldi	r27, 0x03	; 3
     e16:	01 90       	ld	r0, Z+
     e18:	0d 92       	st	X+, r0
     e1a:	8a 95       	dec	r24
     e1c:	e1 f7       	brne	.-8      	; 0xe16 <Main_Menu+0x12>
     e1e:	85 e0       	ldi	r24, 0x05	; 5
     e20:	e3 ee       	ldi	r30, 0xE3	; 227
     e22:	f1 e0       	ldi	r31, 0x01	; 1
     e24:	a3 e8       	ldi	r26, 0x83	; 131
     e26:	b3 e0       	ldi	r27, 0x03	; 3
     e28:	01 90       	ld	r0, Z+
     e2a:	0d 92       	st	X+, r0
     e2c:	8a 95       	dec	r24
     e2e:	e1 f7       	brne	.-8      	; 0xe28 <Main_Menu+0x24>
     e30:	c4 e6       	ldi	r28, 0x64	; 100
     e32:	d3 e0       	ldi	r29, 0x03	; 3
     e34:	1e a6       	std	Y+46, r1	; 0x2e
     e36:	1d ae       	std	Y+61, r1	; 0x3d
     e38:	10 92 b0 03 	sts	0x03B0, r1	; 0x8003b0 <Menu_contents+0x4c>
     e3c:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <Menu_contents+0x5b>
     e40:	10 92 ce 03 	sts	0x03CE, r1	; 0x8003ce <Menu_contents+0x6a>
     e44:	8c e0       	ldi	r24, 0x0C	; 12
     e46:	e8 ee       	ldi	r30, 0xE8	; 232
     e48:	f1 e0       	ldi	r31, 0x01	; 1
     e4a:	ad ed       	ldi	r26, 0xDD	; 221
     e4c:	b3 e0       	ldi	r27, 0x03	; 3
     e4e:	01 90       	ld	r0, Z+
     e50:	0d 92       	st	X+, r0
     e52:	8a 95       	dec	r24
     e54:	e1 f7       	brne	.-8      	; 0xe4e <Main_Menu+0x4a>
     e56:	81 e0       	ldi	r24, 0x01	; 1
     e58:	88 83       	st	Y, r24
     e5a:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <Menu_print>
     e5e:	df 91       	pop	r29
     e60:	cf 91       	pop	r28
     e62:	08 95       	ret

00000e64 <Game_Modes_Menu>:
     e64:	cf 93       	push	r28
     e66:	df 93       	push	r29
     e68:	0e 94 3e 09 	call	0x127c	; 0x127c <OLED_reset>
     e6c:	85 e1       	ldi	r24, 0x15	; 21
     e6e:	e4 ef       	ldi	r30, 0xF4	; 244
     e70:	f1 e0       	ldi	r31, 0x01	; 1
     e72:	a4 e7       	ldi	r26, 0x74	; 116
     e74:	b3 e0       	ldi	r27, 0x03	; 3
     e76:	01 90       	ld	r0, Z+
     e78:	0d 92       	st	X+, r0
     e7a:	8a 95       	dec	r24
     e7c:	e1 f7       	brne	.-8      	; 0xe76 <Game_Modes_Menu+0x12>
     e7e:	8c e0       	ldi	r24, 0x0C	; 12
     e80:	e9 e0       	ldi	r30, 0x09	; 9
     e82:	f2 e0       	ldi	r31, 0x02	; 2
     e84:	a3 e8       	ldi	r26, 0x83	; 131
     e86:	b3 e0       	ldi	r27, 0x03	; 3
     e88:	01 90       	ld	r0, Z+
     e8a:	0d 92       	st	X+, r0
     e8c:	8a 95       	dec	r24
     e8e:	e1 f7       	brne	.-8      	; 0xe88 <Game_Modes_Menu+0x24>
     e90:	8c e0       	ldi	r24, 0x0C	; 12
     e92:	e5 e1       	ldi	r30, 0x15	; 21
     e94:	f2 e0       	ldi	r31, 0x02	; 2
     e96:	a2 e9       	ldi	r26, 0x92	; 146
     e98:	b3 e0       	ldi	r27, 0x03	; 3
     e9a:	01 90       	ld	r0, Z+
     e9c:	0d 92       	st	X+, r0
     e9e:	8a 95       	dec	r24
     ea0:	e1 f7       	brne	.-8      	; 0xe9a <Game_Modes_Menu+0x36>
     ea2:	c4 e6       	ldi	r28, 0x64	; 100
     ea4:	d3 e0       	ldi	r29, 0x03	; 3
     ea6:	1d ae       	std	Y+61, r1	; 0x3d
     ea8:	10 92 b0 03 	sts	0x03B0, r1	; 0x8003b0 <Menu_contents+0x4c>
     eac:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <Menu_contents+0x5b>
     eb0:	10 92 ce 03 	sts	0x03CE, r1	; 0x8003ce <Menu_contents+0x6a>
     eb4:	85 e0       	ldi	r24, 0x05	; 5
     eb6:	e1 e2       	ldi	r30, 0x21	; 33
     eb8:	f2 e0       	ldi	r31, 0x02	; 2
     eba:	ad ed       	ldi	r26, 0xDD	; 221
     ebc:	b3 e0       	ldi	r27, 0x03	; 3
     ebe:	01 90       	ld	r0, Z+
     ec0:	0d 92       	st	X+, r0
     ec2:	8a 95       	dec	r24
     ec4:	e1 f7       	brne	.-8      	; 0xebe <Game_Modes_Menu+0x5a>
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	88 83       	st	Y, r24
     eca:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <Menu_print>
     ece:	df 91       	pop	r29
     ed0:	cf 91       	pop	r28
     ed2:	08 95       	ret

00000ed4 <Difficulty_Menu>:
     ed4:	cf 93       	push	r28
     ed6:	df 93       	push	r29
     ed8:	0e 94 3e 09 	call	0x127c	; 0x127c <OLED_reset>
     edc:	85 e1       	ldi	r24, 0x15	; 21
     ede:	e6 e2       	ldi	r30, 0x26	; 38
     ee0:	f2 e0       	ldi	r31, 0x02	; 2
     ee2:	a4 e7       	ldi	r26, 0x74	; 116
     ee4:	b3 e0       	ldi	r27, 0x03	; 3
     ee6:	01 90       	ld	r0, Z+
     ee8:	0d 92       	st	X+, r0
     eea:	8a 95       	dec	r24
     eec:	e1 f7       	brne	.-8      	; 0xee6 <Difficulty_Menu+0x12>
     eee:	c4 e6       	ldi	r28, 0x64	; 100
     ef0:	d3 e0       	ldi	r29, 0x03	; 3
     ef2:	1f 8e       	std	Y+31, r1	; 0x1f
     ef4:	85 e0       	ldi	r24, 0x05	; 5
     ef6:	eb e3       	ldi	r30, 0x3B	; 59
     ef8:	f2 e0       	ldi	r31, 0x02	; 2
     efa:	a2 e9       	ldi	r26, 0x92	; 146
     efc:	b3 e0       	ldi	r27, 0x03	; 3
     efe:	01 90       	ld	r0, Z+
     f00:	0d 92       	st	X+, r0
     f02:	8a 95       	dec	r24
     f04:	e1 f7       	brne	.-8      	; 0xefe <Difficulty_Menu+0x2a>
     f06:	87 e0       	ldi	r24, 0x07	; 7
     f08:	e0 e4       	ldi	r30, 0x40	; 64
     f0a:	f2 e0       	ldi	r31, 0x02	; 2
     f0c:	a1 ea       	ldi	r26, 0xA1	; 161
     f0e:	b3 e0       	ldi	r27, 0x03	; 3
     f10:	01 90       	ld	r0, Z+
     f12:	0d 92       	st	X+, r0
     f14:	8a 95       	dec	r24
     f16:	e1 f7       	brne	.-8      	; 0xf10 <Difficulty_Menu+0x3c>
     f18:	85 e0       	ldi	r24, 0x05	; 5
     f1a:	e7 e4       	ldi	r30, 0x47	; 71
     f1c:	f2 e0       	ldi	r31, 0x02	; 2
     f1e:	a0 eb       	ldi	r26, 0xB0	; 176
     f20:	b3 e0       	ldi	r27, 0x03	; 3
     f22:	01 90       	ld	r0, Z+
     f24:	0d 92       	st	X+, r0
     f26:	8a 95       	dec	r24
     f28:	e1 f7       	brne	.-8      	; 0xf22 <Difficulty_Menu+0x4e>
     f2a:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <Menu_contents+0x5b>
     f2e:	10 92 ce 03 	sts	0x03CE, r1	; 0x8003ce <Menu_contents+0x6a>
     f32:	85 e0       	ldi	r24, 0x05	; 5
     f34:	e1 e2       	ldi	r30, 0x21	; 33
     f36:	f2 e0       	ldi	r31, 0x02	; 2
     f38:	ad ed       	ldi	r26, 0xDD	; 221
     f3a:	b3 e0       	ldi	r27, 0x03	; 3
     f3c:	01 90       	ld	r0, Z+
     f3e:	0d 92       	st	X+, r0
     f40:	8a 95       	dec	r24
     f42:	e1 f7       	brne	.-8      	; 0xf3c <Difficulty_Menu+0x68>
     f44:	82 e0       	ldi	r24, 0x02	; 2
     f46:	88 83       	st	Y, r24
     f48:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <Menu_print>
     f4c:	df 91       	pop	r29
     f4e:	cf 91       	pop	r28
     f50:	08 95       	ret

00000f52 <Choose_player_menu>:
     f52:	0e 94 3e 09 	call	0x127c	; 0x127c <OLED_reset>
     f56:	88 e1       	ldi	r24, 0x18	; 24
     f58:	ec e4       	ldi	r30, 0x4C	; 76
     f5a:	f2 e0       	ldi	r31, 0x02	; 2
     f5c:	a4 e7       	ldi	r26, 0x74	; 116
     f5e:	b3 e0       	ldi	r27, 0x03	; 3
     f60:	01 90       	ld	r0, Z+
     f62:	0d 92       	st	X+, r0
     f64:	8a 95       	dec	r24
     f66:	e1 f7       	brne	.-8      	; 0xf60 <Choose_player_menu+0xe>
     f68:	89 e0       	ldi	r24, 0x09	; 9
     f6a:	e4 e6       	ldi	r30, 0x64	; 100
     f6c:	f2 e0       	ldi	r31, 0x02	; 2
     f6e:	a3 e8       	ldi	r26, 0x83	; 131
     f70:	b3 e0       	ldi	r27, 0x03	; 3
     f72:	01 90       	ld	r0, Z+
     f74:	0d 92       	st	X+, r0
     f76:	8a 95       	dec	r24
     f78:	e1 f7       	brne	.-8      	; 0xf72 <Choose_player_menu+0x20>
     f7a:	89 e0       	ldi	r24, 0x09	; 9
     f7c:	ed e6       	ldi	r30, 0x6D	; 109
     f7e:	f2 e0       	ldi	r31, 0x02	; 2
     f80:	a2 e9       	ldi	r26, 0x92	; 146
     f82:	b3 e0       	ldi	r27, 0x03	; 3
     f84:	01 90       	ld	r0, Z+
     f86:	0d 92       	st	X+, r0
     f88:	8a 95       	dec	r24
     f8a:	e1 f7       	brne	.-8      	; 0xf84 <Choose_player_menu+0x32>
     f8c:	89 e0       	ldi	r24, 0x09	; 9
     f8e:	e6 e7       	ldi	r30, 0x76	; 118
     f90:	f2 e0       	ldi	r31, 0x02	; 2
     f92:	a1 ea       	ldi	r26, 0xA1	; 161
     f94:	b3 e0       	ldi	r27, 0x03	; 3
     f96:	01 90       	ld	r0, Z+
     f98:	0d 92       	st	X+, r0
     f9a:	8a 95       	dec	r24
     f9c:	e1 f7       	brne	.-8      	; 0xf96 <Choose_player_menu+0x44>
     f9e:	89 e0       	ldi	r24, 0x09	; 9
     fa0:	ef e7       	ldi	r30, 0x7F	; 127
     fa2:	f2 e0       	ldi	r31, 0x02	; 2
     fa4:	a0 eb       	ldi	r26, 0xB0	; 176
     fa6:	b3 e0       	ldi	r27, 0x03	; 3
     fa8:	01 90       	ld	r0, Z+
     faa:	0d 92       	st	X+, r0
     fac:	8a 95       	dec	r24
     fae:	e1 f7       	brne	.-8      	; 0xfa8 <Choose_player_menu+0x56>
     fb0:	89 e0       	ldi	r24, 0x09	; 9
     fb2:	e8 e8       	ldi	r30, 0x88	; 136
     fb4:	f2 e0       	ldi	r31, 0x02	; 2
     fb6:	af eb       	ldi	r26, 0xBF	; 191
     fb8:	b3 e0       	ldi	r27, 0x03	; 3
     fba:	01 90       	ld	r0, Z+
     fbc:	0d 92       	st	X+, r0
     fbe:	8a 95       	dec	r24
     fc0:	e1 f7       	brne	.-8      	; 0xfba <Choose_player_menu+0x68>
     fc2:	89 e0       	ldi	r24, 0x09	; 9
     fc4:	e1 e9       	ldi	r30, 0x91	; 145
     fc6:	f2 e0       	ldi	r31, 0x02	; 2
     fc8:	ae ec       	ldi	r26, 0xCE	; 206
     fca:	b3 e0       	ldi	r27, 0x03	; 3
     fcc:	01 90       	ld	r0, Z+
     fce:	0d 92       	st	X+, r0
     fd0:	8a 95       	dec	r24
     fd2:	e1 f7       	brne	.-8      	; 0xfcc <Choose_player_menu+0x7a>
     fd4:	85 e0       	ldi	r24, 0x05	; 5
     fd6:	e1 e2       	ldi	r30, 0x21	; 33
     fd8:	f2 e0       	ldi	r31, 0x02	; 2
     fda:	ad ed       	ldi	r26, 0xDD	; 221
     fdc:	b3 e0       	ldi	r27, 0x03	; 3
     fde:	01 90       	ld	r0, Z+
     fe0:	0d 92       	st	X+, r0
     fe2:	8a 95       	dec	r24
     fe4:	e1 f7       	brne	.-8      	; 0xfde <Choose_player_menu+0x8c>
     fe6:	81 e0       	ldi	r24, 0x01	; 1
     fe8:	80 93 64 03 	sts	0x0364, r24	; 0x800364 <Menu_contents>
     fec:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <Menu_print>
     ff0:	08 95       	ret

00000ff2 <Leaderboard_Menu>:
     ff2:	cf 93       	push	r28
     ff4:	df 93       	push	r29
     ff6:	0e 94 3e 09 	call	0x127c	; 0x127c <OLED_reset>
     ffa:	87 e1       	ldi	r24, 0x17	; 23
     ffc:	e5 ef       	ldi	r30, 0xF5	; 245
     ffe:	f2 e0       	ldi	r31, 0x02	; 2
    1000:	a4 e7       	ldi	r26, 0x74	; 116
    1002:	b3 e0       	ldi	r27, 0x03	; 3
    1004:	01 90       	ld	r0, Z+
    1006:	0d 92       	st	X+, r0
    1008:	8a 95       	dec	r24
    100a:	e1 f7       	brne	.-8      	; 0x1004 <Leaderboard_Menu+0x12>
    100c:	c4 e6       	ldi	r28, 0x64	; 100
    100e:	d3 e0       	ldi	r29, 0x03	; 3
    1010:	1f 8e       	std	Y+31, r1	; 0x1f
    1012:	1e a6       	std	Y+46, r1	; 0x2e
    1014:	1d ae       	std	Y+61, r1	; 0x3d
    1016:	10 92 b0 03 	sts	0x03B0, r1	; 0x8003b0 <Menu_contents+0x4c>
    101a:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <Menu_contents+0x5b>
    101e:	10 92 ce 03 	sts	0x03CE, r1	; 0x8003ce <Menu_contents+0x6a>
    1022:	85 e0       	ldi	r24, 0x05	; 5
    1024:	e1 e2       	ldi	r30, 0x21	; 33
    1026:	f2 e0       	ldi	r31, 0x02	; 2
    1028:	ad ed       	ldi	r26, 0xDD	; 221
    102a:	b3 e0       	ldi	r27, 0x03	; 3
    102c:	01 90       	ld	r0, Z+
    102e:	0d 92       	st	X+, r0
    1030:	8a 95       	dec	r24
    1032:	e1 f7       	brne	.-8      	; 0x102c <Leaderboard_Menu+0x3a>
    1034:	87 e0       	ldi	r24, 0x07	; 7
    1036:	88 83       	st	Y, r24
    1038:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <Menu_print>
    103c:	df 91       	pop	r29
    103e:	cf 91       	pop	r28
    1040:	08 95       	ret

00001042 <update_OLED>:
	}
}

void update_OLED(){
	// Check current page and current index, then make logic to choose which page to print next
	if(main_menu_flag){
    1042:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <main_menu_flag>
    1046:	88 23       	and	r24, r24
    1048:	b1 f0       	breq	.+44     	; 0x1076 <update_OLED+0x34>
		main_menu_flag = 0;
    104a:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <main_menu_flag>
		if(Menu_contents.menu_index == 1){
    104e:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <Menu_contents>
    1052:	81 30       	cpi	r24, 0x01	; 1
    1054:	29 f4       	brne	.+10     	; 0x1060 <update_OLED+0x1e>
			Game_Modes_Menu();
    1056:	0e 94 32 07 	call	0xe64	; 0xe64 <Game_Modes_Menu>
			game_modes_flag = 1;
    105a:	81 e0       	ldi	r24, 0x01	; 1
    105c:	80 93 4e 03 	sts	0x034E, r24	; 0x80034e <game_modes_flag>
		}
		if(Menu_contents.menu_index == 7){
    1060:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <Menu_contents>
    1064:	87 30       	cpi	r24, 0x07	; 7
    1066:	09 f0       	breq	.+2      	; 0x106a <update_OLED+0x28>
    1068:	68 c0       	rjmp	.+208    	; 0x113a <update_OLED+0xf8>
			Leaderboard_Menu();
    106a:	0e 94 f9 07 	call	0xff2	; 0xff2 <Leaderboard_Menu>
			leaderboard_flag = 1;
    106e:	81 e0       	ldi	r24, 0x01	; 1
    1070:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <leaderboard_flag>
    1074:	08 95       	ret
		}
		return;
	}
	
	if(game_modes_flag){
    1076:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <game_modes_flag>
    107a:	88 23       	and	r24, r24
    107c:	31 f1       	breq	.+76     	; 0x10ca <update_OLED+0x88>
		game_modes_flag = 0;
    107e:	10 92 4e 03 	sts	0x034E, r1	; 0x80034e <game_modes_flag>
		if(Menu_contents.menu_index == 1){
    1082:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <Menu_contents>
    1086:	81 30       	cpi	r24, 0x01	; 1
    1088:	49 f4       	brne	.+18     	; 0x109c <update_OLED+0x5a>
			Difficulty_Menu();
    108a:	0e 94 6a 07 	call	0xed4	; 0xed4 <Difficulty_Menu>
			arcade_mode_flag = 1;
    108e:	81 e0       	ldi	r24, 0x01	; 1
    1090:	80 93 37 03 	sts	0x0337, r24	; 0x800337 <arcade_mode_flag>
			normal_mode_flag = 0;
    1094:	10 92 47 03 	sts	0x0347, r1	; 0x800347 <normal_mode_flag>
			difficulty_flag = 1;
    1098:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <difficulty_flag>
		}
		if(Menu_contents.menu_index == 2){
    109c:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <Menu_contents>
    10a0:	82 30       	cpi	r24, 0x02	; 2
    10a2:	49 f4       	brne	.+18     	; 0x10b6 <update_OLED+0x74>
			Difficulty_Menu();
    10a4:	0e 94 6a 07 	call	0xed4	; 0xed4 <Difficulty_Menu>
			arcade_mode_flag = 0;
    10a8:	10 92 37 03 	sts	0x0337, r1	; 0x800337 <arcade_mode_flag>
			normal_mode_flag = 1;
    10ac:	81 e0       	ldi	r24, 0x01	; 1
    10ae:	80 93 47 03 	sts	0x0347, r24	; 0x800347 <normal_mode_flag>
			difficulty_flag = 1;
    10b2:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <difficulty_flag>
		}
		if(Menu_contents.menu_index == 7){
    10b6:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <Menu_contents>
    10ba:	87 30       	cpi	r24, 0x07	; 7
    10bc:	f1 f5       	brne	.+124    	; 0x113a <update_OLED+0xf8>
			Main_Menu();
    10be:	0e 94 02 07 	call	0xe04	; 0xe04 <Main_Menu>
			main_menu_flag = 1;
    10c2:	81 e0       	ldi	r24, 0x01	; 1
    10c4:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <main_menu_flag>
    10c8:	08 95       	ret
		}
		return;
	}
	
	if(difficulty_flag = 1){
		difficulty_flag = 0;
    10ca:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <difficulty_flag>
		
		if(Menu_contents.menu_index == 2){
    10ce:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <Menu_contents>
    10d2:	82 30       	cpi	r24, 0x02	; 2
    10d4:	59 f4       	brne	.+22     	; 0x10ec <update_OLED+0xaa>
			difficulty_level = 1; // EASY
    10d6:	81 e0       	ldi	r24, 0x01	; 1
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	90 93 2b 03 	sts	0x032B, r25	; 0x80032b <difficulty_level+0x1>
    10de:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <difficulty_level>
			Choose_player_menu();
    10e2:	0e 94 a9 07 	call	0xf52	; 0xf52 <Choose_player_menu>
			choose_player_flag = 1;
    10e6:	81 e0       	ldi	r24, 0x01	; 1
    10e8:	80 93 3b 03 	sts	0x033B, r24	; 0x80033b <choose_player_flag>
		}
		if(Menu_contents.menu_index == 3){
    10ec:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <Menu_contents>
    10f0:	83 30       	cpi	r24, 0x03	; 3
    10f2:	59 f4       	brne	.+22     	; 0x110a <update_OLED+0xc8>
			difficulty_level = 2; // MEDIUM
    10f4:	82 e0       	ldi	r24, 0x02	; 2
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	90 93 2b 03 	sts	0x032B, r25	; 0x80032b <difficulty_level+0x1>
    10fc:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <difficulty_level>
			Choose_player_menu();
    1100:	0e 94 a9 07 	call	0xf52	; 0xf52 <Choose_player_menu>
			choose_player_flag = 1;
    1104:	81 e0       	ldi	r24, 0x01	; 1
    1106:	80 93 3b 03 	sts	0x033B, r24	; 0x80033b <choose_player_flag>
		}
		if(Menu_contents.menu_index == 4){
    110a:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <Menu_contents>
    110e:	84 30       	cpi	r24, 0x04	; 4
    1110:	59 f4       	brne	.+22     	; 0x1128 <update_OLED+0xe6>
			difficulty_level = 3; // HARD
    1112:	83 e0       	ldi	r24, 0x03	; 3
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	90 93 2b 03 	sts	0x032B, r25	; 0x80032b <difficulty_level+0x1>
    111a:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <difficulty_level>
			Choose_player_menu();
    111e:	0e 94 a9 07 	call	0xf52	; 0xf52 <Choose_player_menu>
			choose_player_flag = 1;
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	80 93 3b 03 	sts	0x033B, r24	; 0x80033b <choose_player_flag>
		}
		
		if(Menu_contents.menu_index == 7){
    1128:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <Menu_contents>
    112c:	87 30       	cpi	r24, 0x07	; 7
    112e:	29 f4       	brne	.+10     	; 0x113a <update_OLED+0xf8>
			Main_Menu();
    1130:	0e 94 02 07 	call	0xe04	; 0xe04 <Main_Menu>
			main_menu_flag = 1;
    1134:	81 e0       	ldi	r24, 0x01	; 1
    1136:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <main_menu_flag>
    113a:	08 95       	ret

0000113c <OLED_write_c>:
	 OLED_write_c(0xaf); // display on
 }

void OLED_write_c(uint8_t command){
	volatile char * oled = ( char *) 0x1000 ;
	oled [0]= command ;
    113c:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xc19>
    1140:	08 95       	ret

00001142 <OLED_init>:
#include "OLED.h"
#include "global.h"

void OLED_init()
 {
	 OLED_write_c(0xae); // display off
    1142:	8e ea       	ldi	r24, 0xAE	; 174
    1144:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0xa1); //segment remap
    1148:	81 ea       	ldi	r24, 0xA1	; 161
    114a:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0xda); //common pads hardware: alternative
    114e:	8a ed       	ldi	r24, 0xDA	; 218
    1150:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0x12);
    1154:	82 e1       	ldi	r24, 0x12	; 18
    1156:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0xc8); //common output scan direction:com63~com0
    115a:	88 ec       	ldi	r24, 0xC8	; 200
    115c:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0xa8); //multiplex ration mode:63
    1160:	88 ea       	ldi	r24, 0xA8	; 168
    1162:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0x3f);
    1166:	8f e3       	ldi	r24, 0x3F	; 63
    1168:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0xd5); //display divide ratio/osc. freq. mode
    116c:	85 ed       	ldi	r24, 0xD5	; 213
    116e:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0x80);
    1172:	80 e8       	ldi	r24, 0x80	; 128
    1174:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0x81); //contrast control
    1178:	81 e8       	ldi	r24, 0x81	; 129
    117a:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0x50);
    117e:	80 e5       	ldi	r24, 0x50	; 80
    1180:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0xd9); //set pre-charge period
    1184:	89 ed       	ldi	r24, 0xD9	; 217
    1186:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0x21);
    118a:	81 e2       	ldi	r24, 0x21	; 33
    118c:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0x20); //Set Memory Addressing Mode
    1190:	80 e2       	ldi	r24, 0x20	; 32
    1192:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0x02);
    1196:	82 e0       	ldi	r24, 0x02	; 2
    1198:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0xdb); //VCOM deselect level mode
    119c:	8b ed       	ldi	r24, 0xDB	; 219
    119e:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0x30);
    11a2:	80 e3       	ldi	r24, 0x30	; 48
    11a4:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0xad); //master configuration
    11a8:	8d ea       	ldi	r24, 0xAD	; 173
    11aa:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0x00);
    11ae:	80 e0       	ldi	r24, 0x00	; 0
    11b0:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0xa4); //out follows RAM content
    11b4:	84 ea       	ldi	r24, 0xA4	; 164
    11b6:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0xa6); //set normal display
    11ba:	86 ea       	ldi	r24, 0xA6	; 166
    11bc:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	 OLED_write_c(0xaf); // display on
    11c0:	8f ea       	ldi	r24, 0xAF	; 175
    11c2:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
    11c6:	08 95       	ret

000011c8 <OLED_write_d>:
	oled [0]= command ;
}

void OLED_write_d(uint8_t data){
	volatile char * oled = ( char *) 0x1200 ;
	oled [0]= data ;
    11c8:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xe19>
    11cc:	08 95       	ret

000011ce <OLED_go_to_line>:
}

void OLED_go_to_line(uint8_t line){
	uint8_t data = line | 0xB0;
	OLED_write_c(data);
    11ce:	80 6b       	ori	r24, 0xB0	; 176
    11d0:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
    11d4:	08 95       	ret

000011d6 <OLED_go_to_column>:
}

void OLED_go_to_column(uint8_t column){
    11d6:	cf 93       	push	r28
	uint8_t lower = column & 0xF;
    11d8:	c8 2f       	mov	r28, r24
    11da:	cf 70       	andi	r28, 0x0F	; 15
	uint8_t upper = (column >> 4) | 0x10;
    11dc:	82 95       	swap	r24
    11de:	8f 70       	andi	r24, 0x0F	; 15
	OLED_write_c(upper);
    11e0:	80 61       	ori	r24, 0x10	; 16
    11e2:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	OLED_write_c(lower);
    11e6:	8c 2f       	mov	r24, r28
    11e8:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
}
    11ec:	cf 91       	pop	r28
    11ee:	08 95       	ret

000011f0 <OLED_go_to_pos>:

void OLED_go_to_pos(uint8_t line, uint8_t column){
    11f0:	cf 93       	push	r28
    11f2:	c6 2f       	mov	r28, r22
	OLED_go_to_line(line);
    11f4:	0e 94 e7 08 	call	0x11ce	; 0x11ce <OLED_go_to_line>
	OLED_go_to_column(column);
    11f8:	8c 2f       	mov	r24, r28
    11fa:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <OLED_go_to_column>
}
    11fe:	cf 91       	pop	r28
    1200:	08 95       	ret

00001202 <OLED_home>:

void OLED_home(){
	OLED_go_to_pos(0,0);
    1202:	60 e0       	ldi	r22, 0x00	; 0
    1204:	80 e0       	ldi	r24, 0x00	; 0
    1206:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <OLED_go_to_pos>
    120a:	08 95       	ret

0000120c <OLED_print_c>:
}

void OLED_print_c(uint8_t letter){
    120c:	cf 93       	push	r28
    120e:	df 93       	push	r29
    1210:	d8 2f       	mov	r29, r24
	for (uint8_t i = 0; i < 8; i++){
    1212:	c0 e0       	ldi	r28, 0x00	; 0
    1214:	11 c0       	rjmp	.+34     	; 0x1238 <OLED_print_c+0x2c>
		uint8_t address = pgm_read_byte(&(font8[(letter - 0x20)][i]));
    1216:	ed 2f       	mov	r30, r29
    1218:	f0 e0       	ldi	r31, 0x00	; 0
    121a:	b0 97       	sbiw	r30, 0x20	; 32
    121c:	ee 0f       	add	r30, r30
    121e:	ff 1f       	adc	r31, r31
    1220:	ee 0f       	add	r30, r30
    1222:	ff 1f       	adc	r31, r31
    1224:	ee 0f       	add	r30, r30
    1226:	ff 1f       	adc	r31, r31
    1228:	ec 0f       	add	r30, r28
    122a:	f1 1d       	adc	r31, r1
    122c:	e0 59       	subi	r30, 0x90	; 144
    122e:	ff 4f       	sbci	r31, 0xFF	; 255
    1230:	84 91       	lpm	r24, Z
		OLED_write_d(address);
    1232:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
void OLED_home(){
	OLED_go_to_pos(0,0);
}

void OLED_print_c(uint8_t letter){
	for (uint8_t i = 0; i < 8; i++){
    1236:	cf 5f       	subi	r28, 0xFF	; 255
    1238:	c8 30       	cpi	r28, 0x08	; 8
    123a:	68 f3       	brcs	.-38     	; 0x1216 <OLED_print_c+0xa>
		uint8_t address = pgm_read_byte(&(font8[(letter - 0x20)][i]));
		OLED_write_d(address);
		}
}
    123c:	df 91       	pop	r29
    123e:	cf 91       	pop	r28
    1240:	08 95       	ret

00001242 <OLED_printf>:

void OLED_printf(char text[]){
    1242:	1f 93       	push	r17
    1244:	cf 93       	push	r28
    1246:	df 93       	push	r29
    1248:	ec 01       	movw	r28, r24
	for (uint8_t i = 0; i < strlen(text); i++){
    124a:	10 e0       	ldi	r17, 0x00	; 0
    124c:	07 c0       	rjmp	.+14     	; 0x125c <OLED_printf+0x1a>
		OLED_print_c(text[i]);
    124e:	fe 01       	movw	r30, r28
    1250:	e8 0f       	add	r30, r24
    1252:	f9 1f       	adc	r31, r25
    1254:	80 81       	ld	r24, Z
    1256:	0e 94 06 09 	call	0x120c	; 0x120c <OLED_print_c>
		OLED_write_d(address);
		}
}

void OLED_printf(char text[]){
	for (uint8_t i = 0; i < strlen(text); i++){
    125a:	1f 5f       	subi	r17, 0xFF	; 255
    125c:	81 2f       	mov	r24, r17
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	fe 01       	movw	r30, r28
    1262:	01 90       	ld	r0, Z+
    1264:	00 20       	and	r0, r0
    1266:	e9 f7       	brne	.-6      	; 0x1262 <OLED_printf+0x20>
    1268:	31 97       	sbiw	r30, 0x01	; 1
    126a:	ec 1b       	sub	r30, r28
    126c:	fd 0b       	sbc	r31, r29
    126e:	8e 17       	cp	r24, r30
    1270:	9f 07       	cpc	r25, r31
    1272:	68 f3       	brcs	.-38     	; 0x124e <OLED_printf+0xc>
		OLED_print_c(text[i]);
	}	
}
    1274:	df 91       	pop	r29
    1276:	cf 91       	pop	r28
    1278:	1f 91       	pop	r17
    127a:	08 95       	ret

0000127c <OLED_reset>:




void OLED_reset(){
    127c:	cf 93       	push	r28
	OLED_write_c(0b10110000);
    127e:	80 eb       	ldi	r24, 0xB0	; 176
    1280:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    1284:	c0 e0       	ldi	r28, 0x00	; 0
    1286:	04 c0       	rjmp	.+8      	; 0x1290 <OLED_reset+0x14>
		OLED_write_d(0x00);
    1288:	80 e0       	ldi	r24, 0x00	; 0
    128a:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>



void OLED_reset(){
	OLED_write_c(0b10110000);
	for (uint8_t i = 0; i < 128; i++){
    128e:	cf 5f       	subi	r28, 0xFF	; 255
    1290:	cc 23       	and	r28, r28
    1292:	d4 f7       	brge	.-12     	; 0x1288 <OLED_reset+0xc>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110001);
    1294:	81 eb       	ldi	r24, 0xB1	; 177
    1296:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    129a:	c0 e0       	ldi	r28, 0x00	; 0
    129c:	04 c0       	rjmp	.+8      	; 0x12a6 <OLED_reset+0x2a>
		OLED_write_d(0x00);
    129e:	80 e0       	ldi	r24, 0x00	; 0
    12a0:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
	OLED_write_c(0b10110000);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110001);
	for (uint8_t i = 0; i < 128; i++){
    12a4:	cf 5f       	subi	r28, 0xFF	; 255
    12a6:	cc 23       	and	r28, r28
    12a8:	d4 f7       	brge	.-12     	; 0x129e <OLED_reset+0x22>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110010);
    12aa:	82 eb       	ldi	r24, 0xB2	; 178
    12ac:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    12b0:	c0 e0       	ldi	r28, 0x00	; 0
    12b2:	04 c0       	rjmp	.+8      	; 0x12bc <OLED_reset+0x40>
		OLED_write_d(0x00);
    12b4:	80 e0       	ldi	r24, 0x00	; 0
    12b6:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
	OLED_write_c(0b10110001);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110010);
	for (uint8_t i = 0; i < 128; i++){
    12ba:	cf 5f       	subi	r28, 0xFF	; 255
    12bc:	cc 23       	and	r28, r28
    12be:	d4 f7       	brge	.-12     	; 0x12b4 <OLED_reset+0x38>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110011);
    12c0:	83 eb       	ldi	r24, 0xB3	; 179
    12c2:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    12c6:	c0 e0       	ldi	r28, 0x00	; 0
    12c8:	04 c0       	rjmp	.+8      	; 0x12d2 <OLED_reset+0x56>
		OLED_write_d(0x00);
    12ca:	80 e0       	ldi	r24, 0x00	; 0
    12cc:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
	OLED_write_c(0b10110010);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110011);
	for (uint8_t i = 0; i < 128; i++){
    12d0:	cf 5f       	subi	r28, 0xFF	; 255
    12d2:	cc 23       	and	r28, r28
    12d4:	d4 f7       	brge	.-12     	; 0x12ca <OLED_reset+0x4e>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110100);
    12d6:	84 eb       	ldi	r24, 0xB4	; 180
    12d8:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    12dc:	c0 e0       	ldi	r28, 0x00	; 0
    12de:	04 c0       	rjmp	.+8      	; 0x12e8 <OLED_reset+0x6c>
		OLED_write_d(0x00);
    12e0:	80 e0       	ldi	r24, 0x00	; 0
    12e2:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
	OLED_write_c(0b10110011);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110100);
	for (uint8_t i = 0; i < 128; i++){
    12e6:	cf 5f       	subi	r28, 0xFF	; 255
    12e8:	cc 23       	and	r28, r28
    12ea:	d4 f7       	brge	.-12     	; 0x12e0 <OLED_reset+0x64>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110101);
    12ec:	85 eb       	ldi	r24, 0xB5	; 181
    12ee:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    12f2:	c0 e0       	ldi	r28, 0x00	; 0
    12f4:	04 c0       	rjmp	.+8      	; 0x12fe <OLED_reset+0x82>
		OLED_write_d(0x00);
    12f6:	80 e0       	ldi	r24, 0x00	; 0
    12f8:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
	OLED_write_c(0b10110100);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110101);
	for (uint8_t i = 0; i < 128; i++){
    12fc:	cf 5f       	subi	r28, 0xFF	; 255
    12fe:	cc 23       	and	r28, r28
    1300:	d4 f7       	brge	.-12     	; 0x12f6 <OLED_reset+0x7a>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110110);
    1302:	86 eb       	ldi	r24, 0xB6	; 182
    1304:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    1308:	c0 e0       	ldi	r28, 0x00	; 0
    130a:	04 c0       	rjmp	.+8      	; 0x1314 <OLED_reset+0x98>
		OLED_write_d(0x00);
    130c:	80 e0       	ldi	r24, 0x00	; 0
    130e:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
	OLED_write_c(0b10110101);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110110);
	for (uint8_t i = 0; i < 128; i++){
    1312:	cf 5f       	subi	r28, 0xFF	; 255
    1314:	cc 23       	and	r28, r28
    1316:	d4 f7       	brge	.-12     	; 0x130c <OLED_reset+0x90>
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110111);
    1318:	87 eb       	ldi	r24, 0xB7	; 183
    131a:	0e 94 9e 08 	call	0x113c	; 0x113c <OLED_write_c>
	for (uint8_t i = 0; i < 128; i++){
    131e:	c0 e0       	ldi	r28, 0x00	; 0
    1320:	04 c0       	rjmp	.+8      	; 0x132a <OLED_reset+0xae>
		OLED_write_d(0x00);
    1322:	80 e0       	ldi	r24, 0x00	; 0
    1324:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <OLED_write_d>
	OLED_write_c(0b10110110);
	for (uint8_t i = 0; i < 128; i++){
		OLED_write_d(0x00);
	}
	OLED_write_c(0b10110111);
	for (uint8_t i = 0; i < 128; i++){
    1328:	cf 5f       	subi	r28, 0xFF	; 255
    132a:	cc 23       	and	r28, r28
    132c:	d4 f7       	brge	.-12     	; 0x1322 <OLED_reset+0xa6>
		OLED_write_d(0x00);
	}
}
    132e:	cf 91       	pop	r28
    1330:	08 95       	ret

00001332 <SPI_init>:
	SPDR = cData;
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
	result = SPDR;
	return result;
}
    1332:	87 b3       	in	r24, 0x17	; 23
    1334:	80 6b       	ori	r24, 0xB0	; 176
    1336:	87 bb       	out	0x17, r24	; 23
    1338:	8d b1       	in	r24, 0x0d	; 13
    133a:	81 65       	ori	r24, 0x51	; 81
    133c:	8d b9       	out	0x0d, r24	; 13
    133e:	88 b3       	in	r24, 0x18	; 24
    1340:	80 61       	ori	r24, 0x10	; 16
    1342:	88 bb       	out	0x18, r24	; 24
    1344:	08 95       	ret

00001346 <SPI_write>:



SPI_write(uint8_t cData){
	SPDR = cData;
    1346:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
    1348:	77 9b       	sbis	0x0e, 7	; 14
    134a:	fe cf       	rjmp	.-4      	; 0x1348 <SPI_write+0x2>
}
    134c:	08 95       	ret

0000134e <SPI_read>:

uint8_t SPI_read(){
	uint8_t result;
	SPDR = 0xFF;
    134e:	8f ef       	ldi	r24, 0xFF	; 255
    1350:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
    1352:	77 9b       	sbis	0x0e, 7	; 14
    1354:	fe cf       	rjmp	.-4      	; 0x1352 <SPI_read+0x4>
	result = SPDR;
    1356:	8f b1       	in	r24, 0x0f	; 15
	return result;
    1358:	08 95       	ret

0000135a <__divmodhi4>:
    135a:	97 fb       	bst	r25, 7
    135c:	07 2e       	mov	r0, r23
    135e:	16 f4       	brtc	.+4      	; 0x1364 <__divmodhi4+0xa>
    1360:	00 94       	com	r0
    1362:	07 d0       	rcall	.+14     	; 0x1372 <__divmodhi4_neg1>
    1364:	77 fd       	sbrc	r23, 7
    1366:	09 d0       	rcall	.+18     	; 0x137a <__divmodhi4_neg2>
    1368:	0e 94 c1 09 	call	0x1382	; 0x1382 <__udivmodhi4>
    136c:	07 fc       	sbrc	r0, 7
    136e:	05 d0       	rcall	.+10     	; 0x137a <__divmodhi4_neg2>
    1370:	3e f4       	brtc	.+14     	; 0x1380 <__divmodhi4_exit>

00001372 <__divmodhi4_neg1>:
    1372:	90 95       	com	r25
    1374:	81 95       	neg	r24
    1376:	9f 4f       	sbci	r25, 0xFF	; 255
    1378:	08 95       	ret

0000137a <__divmodhi4_neg2>:
    137a:	70 95       	com	r23
    137c:	61 95       	neg	r22
    137e:	7f 4f       	sbci	r23, 0xFF	; 255

00001380 <__divmodhi4_exit>:
    1380:	08 95       	ret

00001382 <__udivmodhi4>:
    1382:	aa 1b       	sub	r26, r26
    1384:	bb 1b       	sub	r27, r27
    1386:	51 e1       	ldi	r21, 0x11	; 17
    1388:	07 c0       	rjmp	.+14     	; 0x1398 <__udivmodhi4_ep>

0000138a <__udivmodhi4_loop>:
    138a:	aa 1f       	adc	r26, r26
    138c:	bb 1f       	adc	r27, r27
    138e:	a6 17       	cp	r26, r22
    1390:	b7 07       	cpc	r27, r23
    1392:	10 f0       	brcs	.+4      	; 0x1398 <__udivmodhi4_ep>
    1394:	a6 1b       	sub	r26, r22
    1396:	b7 0b       	sbc	r27, r23

00001398 <__udivmodhi4_ep>:
    1398:	88 1f       	adc	r24, r24
    139a:	99 1f       	adc	r25, r25
    139c:	5a 95       	dec	r21
    139e:	a9 f7       	brne	.-22     	; 0x138a <__udivmodhi4_loop>
    13a0:	80 95       	com	r24
    13a2:	90 95       	com	r25
    13a4:	bc 01       	movw	r22, r24
    13a6:	cd 01       	movw	r24, r26
    13a8:	08 95       	ret

000013aa <fdevopen>:
    13aa:	0f 93       	push	r16
    13ac:	1f 93       	push	r17
    13ae:	cf 93       	push	r28
    13b0:	df 93       	push	r29
    13b2:	00 97       	sbiw	r24, 0x00	; 0
    13b4:	31 f4       	brne	.+12     	; 0x13c2 <fdevopen+0x18>
    13b6:	61 15       	cp	r22, r1
    13b8:	71 05       	cpc	r23, r1
    13ba:	19 f4       	brne	.+6      	; 0x13c2 <fdevopen+0x18>
    13bc:	80 e0       	ldi	r24, 0x00	; 0
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	3a c0       	rjmp	.+116    	; 0x1436 <fdevopen+0x8c>
    13c2:	8b 01       	movw	r16, r22
    13c4:	ec 01       	movw	r28, r24
    13c6:	6e e0       	ldi	r22, 0x0E	; 14
    13c8:	70 e0       	ldi	r23, 0x00	; 0
    13ca:	81 e0       	ldi	r24, 0x01	; 1
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	0e 94 47 0c 	call	0x188e	; 0x188e <calloc>
    13d2:	fc 01       	movw	r30, r24
    13d4:	89 2b       	or	r24, r25
    13d6:	91 f3       	breq	.-28     	; 0x13bc <fdevopen+0x12>
    13d8:	80 e8       	ldi	r24, 0x80	; 128
    13da:	83 83       	std	Z+3, r24	; 0x03
    13dc:	01 15       	cp	r16, r1
    13de:	11 05       	cpc	r17, r1
    13e0:	71 f0       	breq	.+28     	; 0x13fe <fdevopen+0x54>
    13e2:	13 87       	std	Z+11, r17	; 0x0b
    13e4:	02 87       	std	Z+10, r16	; 0x0a
    13e6:	81 e8       	ldi	r24, 0x81	; 129
    13e8:	83 83       	std	Z+3, r24	; 0x03
    13ea:	80 91 dd 03 	lds	r24, 0x03DD	; 0x8003dd <__iob>
    13ee:	90 91 de 03 	lds	r25, 0x03DE	; 0x8003de <__iob+0x1>
    13f2:	89 2b       	or	r24, r25
    13f4:	21 f4       	brne	.+8      	; 0x13fe <fdevopen+0x54>
    13f6:	f0 93 de 03 	sts	0x03DE, r31	; 0x8003de <__iob+0x1>
    13fa:	e0 93 dd 03 	sts	0x03DD, r30	; 0x8003dd <__iob>
    13fe:	20 97       	sbiw	r28, 0x00	; 0
    1400:	c9 f0       	breq	.+50     	; 0x1434 <fdevopen+0x8a>
    1402:	d1 87       	std	Z+9, r29	; 0x09
    1404:	c0 87       	std	Z+8, r28	; 0x08
    1406:	83 81       	ldd	r24, Z+3	; 0x03
    1408:	82 60       	ori	r24, 0x02	; 2
    140a:	83 83       	std	Z+3, r24	; 0x03
    140c:	80 91 df 03 	lds	r24, 0x03DF	; 0x8003df <__iob+0x2>
    1410:	90 91 e0 03 	lds	r25, 0x03E0	; 0x8003e0 <__iob+0x3>
    1414:	89 2b       	or	r24, r25
    1416:	71 f4       	brne	.+28     	; 0x1434 <fdevopen+0x8a>
    1418:	f0 93 e0 03 	sts	0x03E0, r31	; 0x8003e0 <__iob+0x3>
    141c:	e0 93 df 03 	sts	0x03DF, r30	; 0x8003df <__iob+0x2>
    1420:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <__iob+0x4>
    1424:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <__iob+0x5>
    1428:	89 2b       	or	r24, r25
    142a:	21 f4       	brne	.+8      	; 0x1434 <fdevopen+0x8a>
    142c:	f0 93 e2 03 	sts	0x03E2, r31	; 0x8003e2 <__iob+0x5>
    1430:	e0 93 e1 03 	sts	0x03E1, r30	; 0x8003e1 <__iob+0x4>
    1434:	cf 01       	movw	r24, r30
    1436:	df 91       	pop	r29
    1438:	cf 91       	pop	r28
    143a:	1f 91       	pop	r17
    143c:	0f 91       	pop	r16
    143e:	08 95       	ret

00001440 <printf>:
    1440:	a0 e0       	ldi	r26, 0x00	; 0
    1442:	b0 e0       	ldi	r27, 0x00	; 0
    1444:	e6 e2       	ldi	r30, 0x26	; 38
    1446:	fa e0       	ldi	r31, 0x0A	; 10
    1448:	0c 94 4b 0e 	jmp	0x1c96	; 0x1c96 <__prologue_saves__+0x20>
    144c:	ae 01       	movw	r20, r28
    144e:	4b 5f       	subi	r20, 0xFB	; 251
    1450:	5f 4f       	sbci	r21, 0xFF	; 255
    1452:	fa 01       	movw	r30, r20
    1454:	61 91       	ld	r22, Z+
    1456:	71 91       	ld	r23, Z+
    1458:	af 01       	movw	r20, r30
    145a:	80 91 df 03 	lds	r24, 0x03DF	; 0x8003df <__iob+0x2>
    145e:	90 91 e0 03 	lds	r25, 0x03E0	; 0x8003e0 <__iob+0x3>
    1462:	0e 94 66 0a 	call	0x14cc	; 0x14cc <vfprintf>
    1466:	e2 e0       	ldi	r30, 0x02	; 2
    1468:	0c 94 67 0e 	jmp	0x1cce	; 0x1cce <__epilogue_restores__+0x20>

0000146c <puts>:
    146c:	0f 93       	push	r16
    146e:	1f 93       	push	r17
    1470:	cf 93       	push	r28
    1472:	df 93       	push	r29
    1474:	e0 91 df 03 	lds	r30, 0x03DF	; 0x8003df <__iob+0x2>
    1478:	f0 91 e0 03 	lds	r31, 0x03E0	; 0x8003e0 <__iob+0x3>
    147c:	23 81       	ldd	r18, Z+3	; 0x03
    147e:	21 ff       	sbrs	r18, 1
    1480:	1b c0       	rjmp	.+54     	; 0x14b8 <puts+0x4c>
    1482:	8c 01       	movw	r16, r24
    1484:	d0 e0       	ldi	r29, 0x00	; 0
    1486:	c0 e0       	ldi	r28, 0x00	; 0
    1488:	f8 01       	movw	r30, r16
    148a:	81 91       	ld	r24, Z+
    148c:	8f 01       	movw	r16, r30
    148e:	60 91 df 03 	lds	r22, 0x03DF	; 0x8003df <__iob+0x2>
    1492:	70 91 e0 03 	lds	r23, 0x03E0	; 0x8003e0 <__iob+0x3>
    1496:	db 01       	movw	r26, r22
    1498:	18 96       	adiw	r26, 0x08	; 8
    149a:	ed 91       	ld	r30, X+
    149c:	fc 91       	ld	r31, X
    149e:	19 97       	sbiw	r26, 0x09	; 9
    14a0:	88 23       	and	r24, r24
    14a2:	31 f0       	breq	.+12     	; 0x14b0 <puts+0x44>
    14a4:	09 95       	icall
    14a6:	89 2b       	or	r24, r25
    14a8:	79 f3       	breq	.-34     	; 0x1488 <puts+0x1c>
    14aa:	df ef       	ldi	r29, 0xFF	; 255
    14ac:	cf ef       	ldi	r28, 0xFF	; 255
    14ae:	ec cf       	rjmp	.-40     	; 0x1488 <puts+0x1c>
    14b0:	8a e0       	ldi	r24, 0x0A	; 10
    14b2:	09 95       	icall
    14b4:	89 2b       	or	r24, r25
    14b6:	19 f0       	breq	.+6      	; 0x14be <puts+0x52>
    14b8:	8f ef       	ldi	r24, 0xFF	; 255
    14ba:	9f ef       	ldi	r25, 0xFF	; 255
    14bc:	02 c0       	rjmp	.+4      	; 0x14c2 <puts+0x56>
    14be:	8d 2f       	mov	r24, r29
    14c0:	9c 2f       	mov	r25, r28
    14c2:	df 91       	pop	r29
    14c4:	cf 91       	pop	r28
    14c6:	1f 91       	pop	r17
    14c8:	0f 91       	pop	r16
    14ca:	08 95       	ret

000014cc <vfprintf>:
    14cc:	ab e0       	ldi	r26, 0x0B	; 11
    14ce:	b0 e0       	ldi	r27, 0x00	; 0
    14d0:	ec e6       	ldi	r30, 0x6C	; 108
    14d2:	fa e0       	ldi	r31, 0x0A	; 10
    14d4:	0c 94 3b 0e 	jmp	0x1c76	; 0x1c76 <__prologue_saves__>
    14d8:	6c 01       	movw	r12, r24
    14da:	7b 01       	movw	r14, r22
    14dc:	8a 01       	movw	r16, r20
    14de:	fc 01       	movw	r30, r24
    14e0:	17 82       	std	Z+7, r1	; 0x07
    14e2:	16 82       	std	Z+6, r1	; 0x06
    14e4:	83 81       	ldd	r24, Z+3	; 0x03
    14e6:	81 ff       	sbrs	r24, 1
    14e8:	cc c1       	rjmp	.+920    	; 0x1882 <vfprintf+0x3b6>
    14ea:	ce 01       	movw	r24, r28
    14ec:	01 96       	adiw	r24, 0x01	; 1
    14ee:	3c 01       	movw	r6, r24
    14f0:	f6 01       	movw	r30, r12
    14f2:	93 81       	ldd	r25, Z+3	; 0x03
    14f4:	f7 01       	movw	r30, r14
    14f6:	93 fd       	sbrc	r25, 3
    14f8:	85 91       	lpm	r24, Z+
    14fa:	93 ff       	sbrs	r25, 3
    14fc:	81 91       	ld	r24, Z+
    14fe:	7f 01       	movw	r14, r30
    1500:	88 23       	and	r24, r24
    1502:	09 f4       	brne	.+2      	; 0x1506 <vfprintf+0x3a>
    1504:	ba c1       	rjmp	.+884    	; 0x187a <vfprintf+0x3ae>
    1506:	85 32       	cpi	r24, 0x25	; 37
    1508:	39 f4       	brne	.+14     	; 0x1518 <vfprintf+0x4c>
    150a:	93 fd       	sbrc	r25, 3
    150c:	85 91       	lpm	r24, Z+
    150e:	93 ff       	sbrs	r25, 3
    1510:	81 91       	ld	r24, Z+
    1512:	7f 01       	movw	r14, r30
    1514:	85 32       	cpi	r24, 0x25	; 37
    1516:	29 f4       	brne	.+10     	; 0x1522 <vfprintf+0x56>
    1518:	b6 01       	movw	r22, r12
    151a:	90 e0       	ldi	r25, 0x00	; 0
    151c:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <fputc>
    1520:	e7 cf       	rjmp	.-50     	; 0x14f0 <vfprintf+0x24>
    1522:	91 2c       	mov	r9, r1
    1524:	21 2c       	mov	r2, r1
    1526:	31 2c       	mov	r3, r1
    1528:	ff e1       	ldi	r31, 0x1F	; 31
    152a:	f3 15       	cp	r31, r3
    152c:	d8 f0       	brcs	.+54     	; 0x1564 <vfprintf+0x98>
    152e:	8b 32       	cpi	r24, 0x2B	; 43
    1530:	79 f0       	breq	.+30     	; 0x1550 <vfprintf+0x84>
    1532:	38 f4       	brcc	.+14     	; 0x1542 <vfprintf+0x76>
    1534:	80 32       	cpi	r24, 0x20	; 32
    1536:	79 f0       	breq	.+30     	; 0x1556 <vfprintf+0x8a>
    1538:	83 32       	cpi	r24, 0x23	; 35
    153a:	a1 f4       	brne	.+40     	; 0x1564 <vfprintf+0x98>
    153c:	23 2d       	mov	r18, r3
    153e:	20 61       	ori	r18, 0x10	; 16
    1540:	1d c0       	rjmp	.+58     	; 0x157c <vfprintf+0xb0>
    1542:	8d 32       	cpi	r24, 0x2D	; 45
    1544:	61 f0       	breq	.+24     	; 0x155e <vfprintf+0x92>
    1546:	80 33       	cpi	r24, 0x30	; 48
    1548:	69 f4       	brne	.+26     	; 0x1564 <vfprintf+0x98>
    154a:	23 2d       	mov	r18, r3
    154c:	21 60       	ori	r18, 0x01	; 1
    154e:	16 c0       	rjmp	.+44     	; 0x157c <vfprintf+0xb0>
    1550:	83 2d       	mov	r24, r3
    1552:	82 60       	ori	r24, 0x02	; 2
    1554:	38 2e       	mov	r3, r24
    1556:	e3 2d       	mov	r30, r3
    1558:	e4 60       	ori	r30, 0x04	; 4
    155a:	3e 2e       	mov	r3, r30
    155c:	2a c0       	rjmp	.+84     	; 0x15b2 <vfprintf+0xe6>
    155e:	f3 2d       	mov	r31, r3
    1560:	f8 60       	ori	r31, 0x08	; 8
    1562:	1d c0       	rjmp	.+58     	; 0x159e <vfprintf+0xd2>
    1564:	37 fc       	sbrc	r3, 7
    1566:	2d c0       	rjmp	.+90     	; 0x15c2 <vfprintf+0xf6>
    1568:	20 ed       	ldi	r18, 0xD0	; 208
    156a:	28 0f       	add	r18, r24
    156c:	2a 30       	cpi	r18, 0x0A	; 10
    156e:	40 f0       	brcs	.+16     	; 0x1580 <vfprintf+0xb4>
    1570:	8e 32       	cpi	r24, 0x2E	; 46
    1572:	b9 f4       	brne	.+46     	; 0x15a2 <vfprintf+0xd6>
    1574:	36 fc       	sbrc	r3, 6
    1576:	81 c1       	rjmp	.+770    	; 0x187a <vfprintf+0x3ae>
    1578:	23 2d       	mov	r18, r3
    157a:	20 64       	ori	r18, 0x40	; 64
    157c:	32 2e       	mov	r3, r18
    157e:	19 c0       	rjmp	.+50     	; 0x15b2 <vfprintf+0xe6>
    1580:	36 fe       	sbrs	r3, 6
    1582:	06 c0       	rjmp	.+12     	; 0x1590 <vfprintf+0xc4>
    1584:	8a e0       	ldi	r24, 0x0A	; 10
    1586:	98 9e       	mul	r9, r24
    1588:	20 0d       	add	r18, r0
    158a:	11 24       	eor	r1, r1
    158c:	92 2e       	mov	r9, r18
    158e:	11 c0       	rjmp	.+34     	; 0x15b2 <vfprintf+0xe6>
    1590:	ea e0       	ldi	r30, 0x0A	; 10
    1592:	2e 9e       	mul	r2, r30
    1594:	20 0d       	add	r18, r0
    1596:	11 24       	eor	r1, r1
    1598:	22 2e       	mov	r2, r18
    159a:	f3 2d       	mov	r31, r3
    159c:	f0 62       	ori	r31, 0x20	; 32
    159e:	3f 2e       	mov	r3, r31
    15a0:	08 c0       	rjmp	.+16     	; 0x15b2 <vfprintf+0xe6>
    15a2:	8c 36       	cpi	r24, 0x6C	; 108
    15a4:	21 f4       	brne	.+8      	; 0x15ae <vfprintf+0xe2>
    15a6:	83 2d       	mov	r24, r3
    15a8:	80 68       	ori	r24, 0x80	; 128
    15aa:	38 2e       	mov	r3, r24
    15ac:	02 c0       	rjmp	.+4      	; 0x15b2 <vfprintf+0xe6>
    15ae:	88 36       	cpi	r24, 0x68	; 104
    15b0:	41 f4       	brne	.+16     	; 0x15c2 <vfprintf+0xf6>
    15b2:	f7 01       	movw	r30, r14
    15b4:	93 fd       	sbrc	r25, 3
    15b6:	85 91       	lpm	r24, Z+
    15b8:	93 ff       	sbrs	r25, 3
    15ba:	81 91       	ld	r24, Z+
    15bc:	7f 01       	movw	r14, r30
    15be:	81 11       	cpse	r24, r1
    15c0:	b3 cf       	rjmp	.-154    	; 0x1528 <vfprintf+0x5c>
    15c2:	98 2f       	mov	r25, r24
    15c4:	9f 7d       	andi	r25, 0xDF	; 223
    15c6:	95 54       	subi	r25, 0x45	; 69
    15c8:	93 30       	cpi	r25, 0x03	; 3
    15ca:	28 f4       	brcc	.+10     	; 0x15d6 <vfprintf+0x10a>
    15cc:	0c 5f       	subi	r16, 0xFC	; 252
    15ce:	1f 4f       	sbci	r17, 0xFF	; 255
    15d0:	9f e3       	ldi	r25, 0x3F	; 63
    15d2:	99 83       	std	Y+1, r25	; 0x01
    15d4:	0d c0       	rjmp	.+26     	; 0x15f0 <vfprintf+0x124>
    15d6:	83 36       	cpi	r24, 0x63	; 99
    15d8:	31 f0       	breq	.+12     	; 0x15e6 <vfprintf+0x11a>
    15da:	83 37       	cpi	r24, 0x73	; 115
    15dc:	71 f0       	breq	.+28     	; 0x15fa <vfprintf+0x12e>
    15de:	83 35       	cpi	r24, 0x53	; 83
    15e0:	09 f0       	breq	.+2      	; 0x15e4 <vfprintf+0x118>
    15e2:	59 c0       	rjmp	.+178    	; 0x1696 <vfprintf+0x1ca>
    15e4:	21 c0       	rjmp	.+66     	; 0x1628 <vfprintf+0x15c>
    15e6:	f8 01       	movw	r30, r16
    15e8:	80 81       	ld	r24, Z
    15ea:	89 83       	std	Y+1, r24	; 0x01
    15ec:	0e 5f       	subi	r16, 0xFE	; 254
    15ee:	1f 4f       	sbci	r17, 0xFF	; 255
    15f0:	88 24       	eor	r8, r8
    15f2:	83 94       	inc	r8
    15f4:	91 2c       	mov	r9, r1
    15f6:	53 01       	movw	r10, r6
    15f8:	13 c0       	rjmp	.+38     	; 0x1620 <vfprintf+0x154>
    15fa:	28 01       	movw	r4, r16
    15fc:	f2 e0       	ldi	r31, 0x02	; 2
    15fe:	4f 0e       	add	r4, r31
    1600:	51 1c       	adc	r5, r1
    1602:	f8 01       	movw	r30, r16
    1604:	a0 80       	ld	r10, Z
    1606:	b1 80       	ldd	r11, Z+1	; 0x01
    1608:	36 fe       	sbrs	r3, 6
    160a:	03 c0       	rjmp	.+6      	; 0x1612 <vfprintf+0x146>
    160c:	69 2d       	mov	r22, r9
    160e:	70 e0       	ldi	r23, 0x00	; 0
    1610:	02 c0       	rjmp	.+4      	; 0x1616 <vfprintf+0x14a>
    1612:	6f ef       	ldi	r22, 0xFF	; 255
    1614:	7f ef       	ldi	r23, 0xFF	; 255
    1616:	c5 01       	movw	r24, r10
    1618:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <strnlen>
    161c:	4c 01       	movw	r8, r24
    161e:	82 01       	movw	r16, r4
    1620:	f3 2d       	mov	r31, r3
    1622:	ff 77       	andi	r31, 0x7F	; 127
    1624:	3f 2e       	mov	r3, r31
    1626:	16 c0       	rjmp	.+44     	; 0x1654 <vfprintf+0x188>
    1628:	28 01       	movw	r4, r16
    162a:	22 e0       	ldi	r18, 0x02	; 2
    162c:	42 0e       	add	r4, r18
    162e:	51 1c       	adc	r5, r1
    1630:	f8 01       	movw	r30, r16
    1632:	a0 80       	ld	r10, Z
    1634:	b1 80       	ldd	r11, Z+1	; 0x01
    1636:	36 fe       	sbrs	r3, 6
    1638:	03 c0       	rjmp	.+6      	; 0x1640 <vfprintf+0x174>
    163a:	69 2d       	mov	r22, r9
    163c:	70 e0       	ldi	r23, 0x00	; 0
    163e:	02 c0       	rjmp	.+4      	; 0x1644 <vfprintf+0x178>
    1640:	6f ef       	ldi	r22, 0xFF	; 255
    1642:	7f ef       	ldi	r23, 0xFF	; 255
    1644:	c5 01       	movw	r24, r10
    1646:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <strnlen_P>
    164a:	4c 01       	movw	r8, r24
    164c:	f3 2d       	mov	r31, r3
    164e:	f0 68       	ori	r31, 0x80	; 128
    1650:	3f 2e       	mov	r3, r31
    1652:	82 01       	movw	r16, r4
    1654:	33 fc       	sbrc	r3, 3
    1656:	1b c0       	rjmp	.+54     	; 0x168e <vfprintf+0x1c2>
    1658:	82 2d       	mov	r24, r2
    165a:	90 e0       	ldi	r25, 0x00	; 0
    165c:	88 16       	cp	r8, r24
    165e:	99 06       	cpc	r9, r25
    1660:	b0 f4       	brcc	.+44     	; 0x168e <vfprintf+0x1c2>
    1662:	b6 01       	movw	r22, r12
    1664:	80 e2       	ldi	r24, 0x20	; 32
    1666:	90 e0       	ldi	r25, 0x00	; 0
    1668:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <fputc>
    166c:	2a 94       	dec	r2
    166e:	f4 cf       	rjmp	.-24     	; 0x1658 <vfprintf+0x18c>
    1670:	f5 01       	movw	r30, r10
    1672:	37 fc       	sbrc	r3, 7
    1674:	85 91       	lpm	r24, Z+
    1676:	37 fe       	sbrs	r3, 7
    1678:	81 91       	ld	r24, Z+
    167a:	5f 01       	movw	r10, r30
    167c:	b6 01       	movw	r22, r12
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <fputc>
    1684:	21 10       	cpse	r2, r1
    1686:	2a 94       	dec	r2
    1688:	21 e0       	ldi	r18, 0x01	; 1
    168a:	82 1a       	sub	r8, r18
    168c:	91 08       	sbc	r9, r1
    168e:	81 14       	cp	r8, r1
    1690:	91 04       	cpc	r9, r1
    1692:	71 f7       	brne	.-36     	; 0x1670 <vfprintf+0x1a4>
    1694:	e8 c0       	rjmp	.+464    	; 0x1866 <vfprintf+0x39a>
    1696:	84 36       	cpi	r24, 0x64	; 100
    1698:	11 f0       	breq	.+4      	; 0x169e <vfprintf+0x1d2>
    169a:	89 36       	cpi	r24, 0x69	; 105
    169c:	41 f5       	brne	.+80     	; 0x16ee <vfprintf+0x222>
    169e:	f8 01       	movw	r30, r16
    16a0:	37 fe       	sbrs	r3, 7
    16a2:	07 c0       	rjmp	.+14     	; 0x16b2 <vfprintf+0x1e6>
    16a4:	60 81       	ld	r22, Z
    16a6:	71 81       	ldd	r23, Z+1	; 0x01
    16a8:	82 81       	ldd	r24, Z+2	; 0x02
    16aa:	93 81       	ldd	r25, Z+3	; 0x03
    16ac:	0c 5f       	subi	r16, 0xFC	; 252
    16ae:	1f 4f       	sbci	r17, 0xFF	; 255
    16b0:	08 c0       	rjmp	.+16     	; 0x16c2 <vfprintf+0x1f6>
    16b2:	60 81       	ld	r22, Z
    16b4:	71 81       	ldd	r23, Z+1	; 0x01
    16b6:	07 2e       	mov	r0, r23
    16b8:	00 0c       	add	r0, r0
    16ba:	88 0b       	sbc	r24, r24
    16bc:	99 0b       	sbc	r25, r25
    16be:	0e 5f       	subi	r16, 0xFE	; 254
    16c0:	1f 4f       	sbci	r17, 0xFF	; 255
    16c2:	f3 2d       	mov	r31, r3
    16c4:	ff 76       	andi	r31, 0x6F	; 111
    16c6:	3f 2e       	mov	r3, r31
    16c8:	97 ff       	sbrs	r25, 7
    16ca:	09 c0       	rjmp	.+18     	; 0x16de <vfprintf+0x212>
    16cc:	90 95       	com	r25
    16ce:	80 95       	com	r24
    16d0:	70 95       	com	r23
    16d2:	61 95       	neg	r22
    16d4:	7f 4f       	sbci	r23, 0xFF	; 255
    16d6:	8f 4f       	sbci	r24, 0xFF	; 255
    16d8:	9f 4f       	sbci	r25, 0xFF	; 255
    16da:	f0 68       	ori	r31, 0x80	; 128
    16dc:	3f 2e       	mov	r3, r31
    16de:	2a e0       	ldi	r18, 0x0A	; 10
    16e0:	30 e0       	ldi	r19, 0x00	; 0
    16e2:	a3 01       	movw	r20, r6
    16e4:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__ultoa_invert>
    16e8:	88 2e       	mov	r8, r24
    16ea:	86 18       	sub	r8, r6
    16ec:	45 c0       	rjmp	.+138    	; 0x1778 <vfprintf+0x2ac>
    16ee:	85 37       	cpi	r24, 0x75	; 117
    16f0:	31 f4       	brne	.+12     	; 0x16fe <vfprintf+0x232>
    16f2:	23 2d       	mov	r18, r3
    16f4:	2f 7e       	andi	r18, 0xEF	; 239
    16f6:	b2 2e       	mov	r11, r18
    16f8:	2a e0       	ldi	r18, 0x0A	; 10
    16fa:	30 e0       	ldi	r19, 0x00	; 0
    16fc:	25 c0       	rjmp	.+74     	; 0x1748 <vfprintf+0x27c>
    16fe:	93 2d       	mov	r25, r3
    1700:	99 7f       	andi	r25, 0xF9	; 249
    1702:	b9 2e       	mov	r11, r25
    1704:	8f 36       	cpi	r24, 0x6F	; 111
    1706:	c1 f0       	breq	.+48     	; 0x1738 <vfprintf+0x26c>
    1708:	18 f4       	brcc	.+6      	; 0x1710 <vfprintf+0x244>
    170a:	88 35       	cpi	r24, 0x58	; 88
    170c:	79 f0       	breq	.+30     	; 0x172c <vfprintf+0x260>
    170e:	b5 c0       	rjmp	.+362    	; 0x187a <vfprintf+0x3ae>
    1710:	80 37       	cpi	r24, 0x70	; 112
    1712:	19 f0       	breq	.+6      	; 0x171a <vfprintf+0x24e>
    1714:	88 37       	cpi	r24, 0x78	; 120
    1716:	21 f0       	breq	.+8      	; 0x1720 <vfprintf+0x254>
    1718:	b0 c0       	rjmp	.+352    	; 0x187a <vfprintf+0x3ae>
    171a:	e9 2f       	mov	r30, r25
    171c:	e0 61       	ori	r30, 0x10	; 16
    171e:	be 2e       	mov	r11, r30
    1720:	b4 fe       	sbrs	r11, 4
    1722:	0d c0       	rjmp	.+26     	; 0x173e <vfprintf+0x272>
    1724:	fb 2d       	mov	r31, r11
    1726:	f4 60       	ori	r31, 0x04	; 4
    1728:	bf 2e       	mov	r11, r31
    172a:	09 c0       	rjmp	.+18     	; 0x173e <vfprintf+0x272>
    172c:	34 fe       	sbrs	r3, 4
    172e:	0a c0       	rjmp	.+20     	; 0x1744 <vfprintf+0x278>
    1730:	29 2f       	mov	r18, r25
    1732:	26 60       	ori	r18, 0x06	; 6
    1734:	b2 2e       	mov	r11, r18
    1736:	06 c0       	rjmp	.+12     	; 0x1744 <vfprintf+0x278>
    1738:	28 e0       	ldi	r18, 0x08	; 8
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	05 c0       	rjmp	.+10     	; 0x1748 <vfprintf+0x27c>
    173e:	20 e1       	ldi	r18, 0x10	; 16
    1740:	30 e0       	ldi	r19, 0x00	; 0
    1742:	02 c0       	rjmp	.+4      	; 0x1748 <vfprintf+0x27c>
    1744:	20 e1       	ldi	r18, 0x10	; 16
    1746:	32 e0       	ldi	r19, 0x02	; 2
    1748:	f8 01       	movw	r30, r16
    174a:	b7 fe       	sbrs	r11, 7
    174c:	07 c0       	rjmp	.+14     	; 0x175c <vfprintf+0x290>
    174e:	60 81       	ld	r22, Z
    1750:	71 81       	ldd	r23, Z+1	; 0x01
    1752:	82 81       	ldd	r24, Z+2	; 0x02
    1754:	93 81       	ldd	r25, Z+3	; 0x03
    1756:	0c 5f       	subi	r16, 0xFC	; 252
    1758:	1f 4f       	sbci	r17, 0xFF	; 255
    175a:	06 c0       	rjmp	.+12     	; 0x1768 <vfprintf+0x29c>
    175c:	60 81       	ld	r22, Z
    175e:	71 81       	ldd	r23, Z+1	; 0x01
    1760:	80 e0       	ldi	r24, 0x00	; 0
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	0e 5f       	subi	r16, 0xFE	; 254
    1766:	1f 4f       	sbci	r17, 0xFF	; 255
    1768:	a3 01       	movw	r20, r6
    176a:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__ultoa_invert>
    176e:	88 2e       	mov	r8, r24
    1770:	86 18       	sub	r8, r6
    1772:	fb 2d       	mov	r31, r11
    1774:	ff 77       	andi	r31, 0x7F	; 127
    1776:	3f 2e       	mov	r3, r31
    1778:	36 fe       	sbrs	r3, 6
    177a:	0d c0       	rjmp	.+26     	; 0x1796 <vfprintf+0x2ca>
    177c:	23 2d       	mov	r18, r3
    177e:	2e 7f       	andi	r18, 0xFE	; 254
    1780:	a2 2e       	mov	r10, r18
    1782:	89 14       	cp	r8, r9
    1784:	58 f4       	brcc	.+22     	; 0x179c <vfprintf+0x2d0>
    1786:	34 fe       	sbrs	r3, 4
    1788:	0b c0       	rjmp	.+22     	; 0x17a0 <vfprintf+0x2d4>
    178a:	32 fc       	sbrc	r3, 2
    178c:	09 c0       	rjmp	.+18     	; 0x17a0 <vfprintf+0x2d4>
    178e:	83 2d       	mov	r24, r3
    1790:	8e 7e       	andi	r24, 0xEE	; 238
    1792:	a8 2e       	mov	r10, r24
    1794:	05 c0       	rjmp	.+10     	; 0x17a0 <vfprintf+0x2d4>
    1796:	b8 2c       	mov	r11, r8
    1798:	a3 2c       	mov	r10, r3
    179a:	03 c0       	rjmp	.+6      	; 0x17a2 <vfprintf+0x2d6>
    179c:	b8 2c       	mov	r11, r8
    179e:	01 c0       	rjmp	.+2      	; 0x17a2 <vfprintf+0x2d6>
    17a0:	b9 2c       	mov	r11, r9
    17a2:	a4 fe       	sbrs	r10, 4
    17a4:	0f c0       	rjmp	.+30     	; 0x17c4 <vfprintf+0x2f8>
    17a6:	fe 01       	movw	r30, r28
    17a8:	e8 0d       	add	r30, r8
    17aa:	f1 1d       	adc	r31, r1
    17ac:	80 81       	ld	r24, Z
    17ae:	80 33       	cpi	r24, 0x30	; 48
    17b0:	21 f4       	brne	.+8      	; 0x17ba <vfprintf+0x2ee>
    17b2:	9a 2d       	mov	r25, r10
    17b4:	99 7e       	andi	r25, 0xE9	; 233
    17b6:	a9 2e       	mov	r10, r25
    17b8:	09 c0       	rjmp	.+18     	; 0x17cc <vfprintf+0x300>
    17ba:	a2 fe       	sbrs	r10, 2
    17bc:	06 c0       	rjmp	.+12     	; 0x17ca <vfprintf+0x2fe>
    17be:	b3 94       	inc	r11
    17c0:	b3 94       	inc	r11
    17c2:	04 c0       	rjmp	.+8      	; 0x17cc <vfprintf+0x300>
    17c4:	8a 2d       	mov	r24, r10
    17c6:	86 78       	andi	r24, 0x86	; 134
    17c8:	09 f0       	breq	.+2      	; 0x17cc <vfprintf+0x300>
    17ca:	b3 94       	inc	r11
    17cc:	a3 fc       	sbrc	r10, 3
    17ce:	11 c0       	rjmp	.+34     	; 0x17f2 <vfprintf+0x326>
    17d0:	a0 fe       	sbrs	r10, 0
    17d2:	06 c0       	rjmp	.+12     	; 0x17e0 <vfprintf+0x314>
    17d4:	b2 14       	cp	r11, r2
    17d6:	88 f4       	brcc	.+34     	; 0x17fa <vfprintf+0x32e>
    17d8:	28 0c       	add	r2, r8
    17da:	92 2c       	mov	r9, r2
    17dc:	9b 18       	sub	r9, r11
    17de:	0e c0       	rjmp	.+28     	; 0x17fc <vfprintf+0x330>
    17e0:	b2 14       	cp	r11, r2
    17e2:	60 f4       	brcc	.+24     	; 0x17fc <vfprintf+0x330>
    17e4:	b6 01       	movw	r22, r12
    17e6:	80 e2       	ldi	r24, 0x20	; 32
    17e8:	90 e0       	ldi	r25, 0x00	; 0
    17ea:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <fputc>
    17ee:	b3 94       	inc	r11
    17f0:	f7 cf       	rjmp	.-18     	; 0x17e0 <vfprintf+0x314>
    17f2:	b2 14       	cp	r11, r2
    17f4:	18 f4       	brcc	.+6      	; 0x17fc <vfprintf+0x330>
    17f6:	2b 18       	sub	r2, r11
    17f8:	02 c0       	rjmp	.+4      	; 0x17fe <vfprintf+0x332>
    17fa:	98 2c       	mov	r9, r8
    17fc:	21 2c       	mov	r2, r1
    17fe:	a4 fe       	sbrs	r10, 4
    1800:	10 c0       	rjmp	.+32     	; 0x1822 <vfprintf+0x356>
    1802:	b6 01       	movw	r22, r12
    1804:	80 e3       	ldi	r24, 0x30	; 48
    1806:	90 e0       	ldi	r25, 0x00	; 0
    1808:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <fputc>
    180c:	a2 fe       	sbrs	r10, 2
    180e:	17 c0       	rjmp	.+46     	; 0x183e <vfprintf+0x372>
    1810:	a1 fc       	sbrc	r10, 1
    1812:	03 c0       	rjmp	.+6      	; 0x181a <vfprintf+0x34e>
    1814:	88 e7       	ldi	r24, 0x78	; 120
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	02 c0       	rjmp	.+4      	; 0x181e <vfprintf+0x352>
    181a:	88 e5       	ldi	r24, 0x58	; 88
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	b6 01       	movw	r22, r12
    1820:	0c c0       	rjmp	.+24     	; 0x183a <vfprintf+0x36e>
    1822:	8a 2d       	mov	r24, r10
    1824:	86 78       	andi	r24, 0x86	; 134
    1826:	59 f0       	breq	.+22     	; 0x183e <vfprintf+0x372>
    1828:	a1 fe       	sbrs	r10, 1
    182a:	02 c0       	rjmp	.+4      	; 0x1830 <vfprintf+0x364>
    182c:	8b e2       	ldi	r24, 0x2B	; 43
    182e:	01 c0       	rjmp	.+2      	; 0x1832 <vfprintf+0x366>
    1830:	80 e2       	ldi	r24, 0x20	; 32
    1832:	a7 fc       	sbrc	r10, 7
    1834:	8d e2       	ldi	r24, 0x2D	; 45
    1836:	b6 01       	movw	r22, r12
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <fputc>
    183e:	89 14       	cp	r8, r9
    1840:	38 f4       	brcc	.+14     	; 0x1850 <vfprintf+0x384>
    1842:	b6 01       	movw	r22, r12
    1844:	80 e3       	ldi	r24, 0x30	; 48
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <fputc>
    184c:	9a 94       	dec	r9
    184e:	f7 cf       	rjmp	.-18     	; 0x183e <vfprintf+0x372>
    1850:	8a 94       	dec	r8
    1852:	f3 01       	movw	r30, r6
    1854:	e8 0d       	add	r30, r8
    1856:	f1 1d       	adc	r31, r1
    1858:	80 81       	ld	r24, Z
    185a:	b6 01       	movw	r22, r12
    185c:	90 e0       	ldi	r25, 0x00	; 0
    185e:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <fputc>
    1862:	81 10       	cpse	r8, r1
    1864:	f5 cf       	rjmp	.-22     	; 0x1850 <vfprintf+0x384>
    1866:	22 20       	and	r2, r2
    1868:	09 f4       	brne	.+2      	; 0x186c <vfprintf+0x3a0>
    186a:	42 ce       	rjmp	.-892    	; 0x14f0 <vfprintf+0x24>
    186c:	b6 01       	movw	r22, r12
    186e:	80 e2       	ldi	r24, 0x20	; 32
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <fputc>
    1876:	2a 94       	dec	r2
    1878:	f6 cf       	rjmp	.-20     	; 0x1866 <vfprintf+0x39a>
    187a:	f6 01       	movw	r30, r12
    187c:	86 81       	ldd	r24, Z+6	; 0x06
    187e:	97 81       	ldd	r25, Z+7	; 0x07
    1880:	02 c0       	rjmp	.+4      	; 0x1886 <vfprintf+0x3ba>
    1882:	8f ef       	ldi	r24, 0xFF	; 255
    1884:	9f ef       	ldi	r25, 0xFF	; 255
    1886:	2b 96       	adiw	r28, 0x0b	; 11
    1888:	e2 e1       	ldi	r30, 0x12	; 18
    188a:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__epilogue_restores__>

0000188e <calloc>:
    188e:	0f 93       	push	r16
    1890:	1f 93       	push	r17
    1892:	cf 93       	push	r28
    1894:	df 93       	push	r29
    1896:	86 9f       	mul	r24, r22
    1898:	80 01       	movw	r16, r0
    189a:	87 9f       	mul	r24, r23
    189c:	10 0d       	add	r17, r0
    189e:	96 9f       	mul	r25, r22
    18a0:	10 0d       	add	r17, r0
    18a2:	11 24       	eor	r1, r1
    18a4:	c8 01       	movw	r24, r16
    18a6:	0e 94 63 0c 	call	0x18c6	; 0x18c6 <malloc>
    18aa:	ec 01       	movw	r28, r24
    18ac:	00 97       	sbiw	r24, 0x00	; 0
    18ae:	29 f0       	breq	.+10     	; 0x18ba <calloc+0x2c>
    18b0:	a8 01       	movw	r20, r16
    18b2:	60 e0       	ldi	r22, 0x00	; 0
    18b4:	70 e0       	ldi	r23, 0x00	; 0
    18b6:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <memset>
    18ba:	ce 01       	movw	r24, r28
    18bc:	df 91       	pop	r29
    18be:	cf 91       	pop	r28
    18c0:	1f 91       	pop	r17
    18c2:	0f 91       	pop	r16
    18c4:	08 95       	ret

000018c6 <malloc>:
    18c6:	0f 93       	push	r16
    18c8:	1f 93       	push	r17
    18ca:	cf 93       	push	r28
    18cc:	df 93       	push	r29
    18ce:	82 30       	cpi	r24, 0x02	; 2
    18d0:	91 05       	cpc	r25, r1
    18d2:	10 f4       	brcc	.+4      	; 0x18d8 <malloc+0x12>
    18d4:	82 e0       	ldi	r24, 0x02	; 2
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	e0 91 e5 03 	lds	r30, 0x03E5	; 0x8003e5 <__flp>
    18dc:	f0 91 e6 03 	lds	r31, 0x03E6	; 0x8003e6 <__flp+0x1>
    18e0:	20 e0       	ldi	r18, 0x00	; 0
    18e2:	30 e0       	ldi	r19, 0x00	; 0
    18e4:	a0 e0       	ldi	r26, 0x00	; 0
    18e6:	b0 e0       	ldi	r27, 0x00	; 0
    18e8:	30 97       	sbiw	r30, 0x00	; 0
    18ea:	19 f1       	breq	.+70     	; 0x1932 <malloc+0x6c>
    18ec:	40 81       	ld	r20, Z
    18ee:	51 81       	ldd	r21, Z+1	; 0x01
    18f0:	02 81       	ldd	r16, Z+2	; 0x02
    18f2:	13 81       	ldd	r17, Z+3	; 0x03
    18f4:	48 17       	cp	r20, r24
    18f6:	59 07       	cpc	r21, r25
    18f8:	c8 f0       	brcs	.+50     	; 0x192c <malloc+0x66>
    18fa:	84 17       	cp	r24, r20
    18fc:	95 07       	cpc	r25, r21
    18fe:	69 f4       	brne	.+26     	; 0x191a <malloc+0x54>
    1900:	10 97       	sbiw	r26, 0x00	; 0
    1902:	31 f0       	breq	.+12     	; 0x1910 <malloc+0x4a>
    1904:	12 96       	adiw	r26, 0x02	; 2
    1906:	0c 93       	st	X, r16
    1908:	12 97       	sbiw	r26, 0x02	; 2
    190a:	13 96       	adiw	r26, 0x03	; 3
    190c:	1c 93       	st	X, r17
    190e:	27 c0       	rjmp	.+78     	; 0x195e <malloc+0x98>
    1910:	00 93 e5 03 	sts	0x03E5, r16	; 0x8003e5 <__flp>
    1914:	10 93 e6 03 	sts	0x03E6, r17	; 0x8003e6 <__flp+0x1>
    1918:	22 c0       	rjmp	.+68     	; 0x195e <malloc+0x98>
    191a:	21 15       	cp	r18, r1
    191c:	31 05       	cpc	r19, r1
    191e:	19 f0       	breq	.+6      	; 0x1926 <malloc+0x60>
    1920:	42 17       	cp	r20, r18
    1922:	53 07       	cpc	r21, r19
    1924:	18 f4       	brcc	.+6      	; 0x192c <malloc+0x66>
    1926:	9a 01       	movw	r18, r20
    1928:	bd 01       	movw	r22, r26
    192a:	ef 01       	movw	r28, r30
    192c:	df 01       	movw	r26, r30
    192e:	f8 01       	movw	r30, r16
    1930:	db cf       	rjmp	.-74     	; 0x18e8 <malloc+0x22>
    1932:	21 15       	cp	r18, r1
    1934:	31 05       	cpc	r19, r1
    1936:	f9 f0       	breq	.+62     	; 0x1976 <malloc+0xb0>
    1938:	28 1b       	sub	r18, r24
    193a:	39 0b       	sbc	r19, r25
    193c:	24 30       	cpi	r18, 0x04	; 4
    193e:	31 05       	cpc	r19, r1
    1940:	80 f4       	brcc	.+32     	; 0x1962 <malloc+0x9c>
    1942:	8a 81       	ldd	r24, Y+2	; 0x02
    1944:	9b 81       	ldd	r25, Y+3	; 0x03
    1946:	61 15       	cp	r22, r1
    1948:	71 05       	cpc	r23, r1
    194a:	21 f0       	breq	.+8      	; 0x1954 <malloc+0x8e>
    194c:	fb 01       	movw	r30, r22
    194e:	93 83       	std	Z+3, r25	; 0x03
    1950:	82 83       	std	Z+2, r24	; 0x02
    1952:	04 c0       	rjmp	.+8      	; 0x195c <malloc+0x96>
    1954:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <__flp+0x1>
    1958:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <__flp>
    195c:	fe 01       	movw	r30, r28
    195e:	32 96       	adiw	r30, 0x02	; 2
    1960:	44 c0       	rjmp	.+136    	; 0x19ea <malloc+0x124>
    1962:	fe 01       	movw	r30, r28
    1964:	e2 0f       	add	r30, r18
    1966:	f3 1f       	adc	r31, r19
    1968:	81 93       	st	Z+, r24
    196a:	91 93       	st	Z+, r25
    196c:	22 50       	subi	r18, 0x02	; 2
    196e:	31 09       	sbc	r19, r1
    1970:	39 83       	std	Y+1, r19	; 0x01
    1972:	28 83       	st	Y, r18
    1974:	3a c0       	rjmp	.+116    	; 0x19ea <malloc+0x124>
    1976:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <__brkval>
    197a:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <__brkval+0x1>
    197e:	23 2b       	or	r18, r19
    1980:	41 f4       	brne	.+16     	; 0x1992 <malloc+0xcc>
    1982:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1986:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    198a:	30 93 e4 03 	sts	0x03E4, r19	; 0x8003e4 <__brkval+0x1>
    198e:	20 93 e3 03 	sts	0x03E3, r18	; 0x8003e3 <__brkval>
    1992:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1996:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    199a:	21 15       	cp	r18, r1
    199c:	31 05       	cpc	r19, r1
    199e:	41 f4       	brne	.+16     	; 0x19b0 <malloc+0xea>
    19a0:	2d b7       	in	r18, 0x3d	; 61
    19a2:	3e b7       	in	r19, 0x3e	; 62
    19a4:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    19a8:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    19ac:	24 1b       	sub	r18, r20
    19ae:	35 0b       	sbc	r19, r21
    19b0:	e0 91 e3 03 	lds	r30, 0x03E3	; 0x8003e3 <__brkval>
    19b4:	f0 91 e4 03 	lds	r31, 0x03E4	; 0x8003e4 <__brkval+0x1>
    19b8:	e2 17       	cp	r30, r18
    19ba:	f3 07       	cpc	r31, r19
    19bc:	a0 f4       	brcc	.+40     	; 0x19e6 <malloc+0x120>
    19be:	2e 1b       	sub	r18, r30
    19c0:	3f 0b       	sbc	r19, r31
    19c2:	28 17       	cp	r18, r24
    19c4:	39 07       	cpc	r19, r25
    19c6:	78 f0       	brcs	.+30     	; 0x19e6 <malloc+0x120>
    19c8:	ac 01       	movw	r20, r24
    19ca:	4e 5f       	subi	r20, 0xFE	; 254
    19cc:	5f 4f       	sbci	r21, 0xFF	; 255
    19ce:	24 17       	cp	r18, r20
    19d0:	35 07       	cpc	r19, r21
    19d2:	48 f0       	brcs	.+18     	; 0x19e6 <malloc+0x120>
    19d4:	4e 0f       	add	r20, r30
    19d6:	5f 1f       	adc	r21, r31
    19d8:	50 93 e4 03 	sts	0x03E4, r21	; 0x8003e4 <__brkval+0x1>
    19dc:	40 93 e3 03 	sts	0x03E3, r20	; 0x8003e3 <__brkval>
    19e0:	81 93       	st	Z+, r24
    19e2:	91 93       	st	Z+, r25
    19e4:	02 c0       	rjmp	.+4      	; 0x19ea <malloc+0x124>
    19e6:	e0 e0       	ldi	r30, 0x00	; 0
    19e8:	f0 e0       	ldi	r31, 0x00	; 0
    19ea:	cf 01       	movw	r24, r30
    19ec:	df 91       	pop	r29
    19ee:	cf 91       	pop	r28
    19f0:	1f 91       	pop	r17
    19f2:	0f 91       	pop	r16
    19f4:	08 95       	ret

000019f6 <free>:
    19f6:	cf 93       	push	r28
    19f8:	df 93       	push	r29
    19fa:	00 97       	sbiw	r24, 0x00	; 0
    19fc:	09 f4       	brne	.+2      	; 0x1a00 <free+0xa>
    19fe:	81 c0       	rjmp	.+258    	; 0x1b02 <free+0x10c>
    1a00:	fc 01       	movw	r30, r24
    1a02:	32 97       	sbiw	r30, 0x02	; 2
    1a04:	13 82       	std	Z+3, r1	; 0x03
    1a06:	12 82       	std	Z+2, r1	; 0x02
    1a08:	a0 91 e5 03 	lds	r26, 0x03E5	; 0x8003e5 <__flp>
    1a0c:	b0 91 e6 03 	lds	r27, 0x03E6	; 0x8003e6 <__flp+0x1>
    1a10:	10 97       	sbiw	r26, 0x00	; 0
    1a12:	81 f4       	brne	.+32     	; 0x1a34 <free+0x3e>
    1a14:	20 81       	ld	r18, Z
    1a16:	31 81       	ldd	r19, Z+1	; 0x01
    1a18:	82 0f       	add	r24, r18
    1a1a:	93 1f       	adc	r25, r19
    1a1c:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <__brkval>
    1a20:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <__brkval+0x1>
    1a24:	28 17       	cp	r18, r24
    1a26:	39 07       	cpc	r19, r25
    1a28:	51 f5       	brne	.+84     	; 0x1a7e <free+0x88>
    1a2a:	f0 93 e4 03 	sts	0x03E4, r31	; 0x8003e4 <__brkval+0x1>
    1a2e:	e0 93 e3 03 	sts	0x03E3, r30	; 0x8003e3 <__brkval>
    1a32:	67 c0       	rjmp	.+206    	; 0x1b02 <free+0x10c>
    1a34:	ed 01       	movw	r28, r26
    1a36:	20 e0       	ldi	r18, 0x00	; 0
    1a38:	30 e0       	ldi	r19, 0x00	; 0
    1a3a:	ce 17       	cp	r28, r30
    1a3c:	df 07       	cpc	r29, r31
    1a3e:	40 f4       	brcc	.+16     	; 0x1a50 <free+0x5a>
    1a40:	4a 81       	ldd	r20, Y+2	; 0x02
    1a42:	5b 81       	ldd	r21, Y+3	; 0x03
    1a44:	9e 01       	movw	r18, r28
    1a46:	41 15       	cp	r20, r1
    1a48:	51 05       	cpc	r21, r1
    1a4a:	f1 f0       	breq	.+60     	; 0x1a88 <free+0x92>
    1a4c:	ea 01       	movw	r28, r20
    1a4e:	f5 cf       	rjmp	.-22     	; 0x1a3a <free+0x44>
    1a50:	d3 83       	std	Z+3, r29	; 0x03
    1a52:	c2 83       	std	Z+2, r28	; 0x02
    1a54:	40 81       	ld	r20, Z
    1a56:	51 81       	ldd	r21, Z+1	; 0x01
    1a58:	84 0f       	add	r24, r20
    1a5a:	95 1f       	adc	r25, r21
    1a5c:	c8 17       	cp	r28, r24
    1a5e:	d9 07       	cpc	r29, r25
    1a60:	59 f4       	brne	.+22     	; 0x1a78 <free+0x82>
    1a62:	88 81       	ld	r24, Y
    1a64:	99 81       	ldd	r25, Y+1	; 0x01
    1a66:	84 0f       	add	r24, r20
    1a68:	95 1f       	adc	r25, r21
    1a6a:	02 96       	adiw	r24, 0x02	; 2
    1a6c:	91 83       	std	Z+1, r25	; 0x01
    1a6e:	80 83       	st	Z, r24
    1a70:	8a 81       	ldd	r24, Y+2	; 0x02
    1a72:	9b 81       	ldd	r25, Y+3	; 0x03
    1a74:	93 83       	std	Z+3, r25	; 0x03
    1a76:	82 83       	std	Z+2, r24	; 0x02
    1a78:	21 15       	cp	r18, r1
    1a7a:	31 05       	cpc	r19, r1
    1a7c:	29 f4       	brne	.+10     	; 0x1a88 <free+0x92>
    1a7e:	f0 93 e6 03 	sts	0x03E6, r31	; 0x8003e6 <__flp+0x1>
    1a82:	e0 93 e5 03 	sts	0x03E5, r30	; 0x8003e5 <__flp>
    1a86:	3d c0       	rjmp	.+122    	; 0x1b02 <free+0x10c>
    1a88:	e9 01       	movw	r28, r18
    1a8a:	fb 83       	std	Y+3, r31	; 0x03
    1a8c:	ea 83       	std	Y+2, r30	; 0x02
    1a8e:	49 91       	ld	r20, Y+
    1a90:	59 91       	ld	r21, Y+
    1a92:	c4 0f       	add	r28, r20
    1a94:	d5 1f       	adc	r29, r21
    1a96:	ec 17       	cp	r30, r28
    1a98:	fd 07       	cpc	r31, r29
    1a9a:	61 f4       	brne	.+24     	; 0x1ab4 <free+0xbe>
    1a9c:	80 81       	ld	r24, Z
    1a9e:	91 81       	ldd	r25, Z+1	; 0x01
    1aa0:	84 0f       	add	r24, r20
    1aa2:	95 1f       	adc	r25, r21
    1aa4:	02 96       	adiw	r24, 0x02	; 2
    1aa6:	e9 01       	movw	r28, r18
    1aa8:	99 83       	std	Y+1, r25	; 0x01
    1aaa:	88 83       	st	Y, r24
    1aac:	82 81       	ldd	r24, Z+2	; 0x02
    1aae:	93 81       	ldd	r25, Z+3	; 0x03
    1ab0:	9b 83       	std	Y+3, r25	; 0x03
    1ab2:	8a 83       	std	Y+2, r24	; 0x02
    1ab4:	e0 e0       	ldi	r30, 0x00	; 0
    1ab6:	f0 e0       	ldi	r31, 0x00	; 0
    1ab8:	12 96       	adiw	r26, 0x02	; 2
    1aba:	8d 91       	ld	r24, X+
    1abc:	9c 91       	ld	r25, X
    1abe:	13 97       	sbiw	r26, 0x03	; 3
    1ac0:	00 97       	sbiw	r24, 0x00	; 0
    1ac2:	19 f0       	breq	.+6      	; 0x1aca <free+0xd4>
    1ac4:	fd 01       	movw	r30, r26
    1ac6:	dc 01       	movw	r26, r24
    1ac8:	f7 cf       	rjmp	.-18     	; 0x1ab8 <free+0xc2>
    1aca:	8d 91       	ld	r24, X+
    1acc:	9c 91       	ld	r25, X
    1ace:	11 97       	sbiw	r26, 0x01	; 1
    1ad0:	9d 01       	movw	r18, r26
    1ad2:	2e 5f       	subi	r18, 0xFE	; 254
    1ad4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ad6:	82 0f       	add	r24, r18
    1ad8:	93 1f       	adc	r25, r19
    1ada:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <__brkval>
    1ade:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <__brkval+0x1>
    1ae2:	28 17       	cp	r18, r24
    1ae4:	39 07       	cpc	r19, r25
    1ae6:	69 f4       	brne	.+26     	; 0x1b02 <free+0x10c>
    1ae8:	30 97       	sbiw	r30, 0x00	; 0
    1aea:	29 f4       	brne	.+10     	; 0x1af6 <free+0x100>
    1aec:	10 92 e6 03 	sts	0x03E6, r1	; 0x8003e6 <__flp+0x1>
    1af0:	10 92 e5 03 	sts	0x03E5, r1	; 0x8003e5 <__flp>
    1af4:	02 c0       	rjmp	.+4      	; 0x1afa <free+0x104>
    1af6:	13 82       	std	Z+3, r1	; 0x03
    1af8:	12 82       	std	Z+2, r1	; 0x02
    1afa:	b0 93 e4 03 	sts	0x03E4, r27	; 0x8003e4 <__brkval+0x1>
    1afe:	a0 93 e3 03 	sts	0x03E3, r26	; 0x8003e3 <__brkval>
    1b02:	df 91       	pop	r29
    1b04:	cf 91       	pop	r28
    1b06:	08 95       	ret

00001b08 <strnlen_P>:
    1b08:	fc 01       	movw	r30, r24
    1b0a:	05 90       	lpm	r0, Z+
    1b0c:	61 50       	subi	r22, 0x01	; 1
    1b0e:	70 40       	sbci	r23, 0x00	; 0
    1b10:	01 10       	cpse	r0, r1
    1b12:	d8 f7       	brcc	.-10     	; 0x1b0a <strnlen_P+0x2>
    1b14:	80 95       	com	r24
    1b16:	90 95       	com	r25
    1b18:	8e 0f       	add	r24, r30
    1b1a:	9f 1f       	adc	r25, r31
    1b1c:	08 95       	ret

00001b1e <memset>:
    1b1e:	dc 01       	movw	r26, r24
    1b20:	01 c0       	rjmp	.+2      	; 0x1b24 <memset+0x6>
    1b22:	6d 93       	st	X+, r22
    1b24:	41 50       	subi	r20, 0x01	; 1
    1b26:	50 40       	sbci	r21, 0x00	; 0
    1b28:	e0 f7       	brcc	.-8      	; 0x1b22 <memset+0x4>
    1b2a:	08 95       	ret

00001b2c <strnlen>:
    1b2c:	fc 01       	movw	r30, r24
    1b2e:	61 50       	subi	r22, 0x01	; 1
    1b30:	70 40       	sbci	r23, 0x00	; 0
    1b32:	01 90       	ld	r0, Z+
    1b34:	01 10       	cpse	r0, r1
    1b36:	d8 f7       	brcc	.-10     	; 0x1b2e <strnlen+0x2>
    1b38:	80 95       	com	r24
    1b3a:	90 95       	com	r25
    1b3c:	8e 0f       	add	r24, r30
    1b3e:	9f 1f       	adc	r25, r31
    1b40:	08 95       	ret

00001b42 <fputc>:
    1b42:	0f 93       	push	r16
    1b44:	1f 93       	push	r17
    1b46:	cf 93       	push	r28
    1b48:	df 93       	push	r29
    1b4a:	fb 01       	movw	r30, r22
    1b4c:	23 81       	ldd	r18, Z+3	; 0x03
    1b4e:	21 fd       	sbrc	r18, 1
    1b50:	03 c0       	rjmp	.+6      	; 0x1b58 <fputc+0x16>
    1b52:	8f ef       	ldi	r24, 0xFF	; 255
    1b54:	9f ef       	ldi	r25, 0xFF	; 255
    1b56:	2c c0       	rjmp	.+88     	; 0x1bb0 <fputc+0x6e>
    1b58:	22 ff       	sbrs	r18, 2
    1b5a:	16 c0       	rjmp	.+44     	; 0x1b88 <fputc+0x46>
    1b5c:	46 81       	ldd	r20, Z+6	; 0x06
    1b5e:	57 81       	ldd	r21, Z+7	; 0x07
    1b60:	24 81       	ldd	r18, Z+4	; 0x04
    1b62:	35 81       	ldd	r19, Z+5	; 0x05
    1b64:	42 17       	cp	r20, r18
    1b66:	53 07       	cpc	r21, r19
    1b68:	44 f4       	brge	.+16     	; 0x1b7a <fputc+0x38>
    1b6a:	a0 81       	ld	r26, Z
    1b6c:	b1 81       	ldd	r27, Z+1	; 0x01
    1b6e:	9d 01       	movw	r18, r26
    1b70:	2f 5f       	subi	r18, 0xFF	; 255
    1b72:	3f 4f       	sbci	r19, 0xFF	; 255
    1b74:	31 83       	std	Z+1, r19	; 0x01
    1b76:	20 83       	st	Z, r18
    1b78:	8c 93       	st	X, r24
    1b7a:	26 81       	ldd	r18, Z+6	; 0x06
    1b7c:	37 81       	ldd	r19, Z+7	; 0x07
    1b7e:	2f 5f       	subi	r18, 0xFF	; 255
    1b80:	3f 4f       	sbci	r19, 0xFF	; 255
    1b82:	37 83       	std	Z+7, r19	; 0x07
    1b84:	26 83       	std	Z+6, r18	; 0x06
    1b86:	14 c0       	rjmp	.+40     	; 0x1bb0 <fputc+0x6e>
    1b88:	8b 01       	movw	r16, r22
    1b8a:	ec 01       	movw	r28, r24
    1b8c:	fb 01       	movw	r30, r22
    1b8e:	00 84       	ldd	r0, Z+8	; 0x08
    1b90:	f1 85       	ldd	r31, Z+9	; 0x09
    1b92:	e0 2d       	mov	r30, r0
    1b94:	09 95       	icall
    1b96:	89 2b       	or	r24, r25
    1b98:	e1 f6       	brne	.-72     	; 0x1b52 <fputc+0x10>
    1b9a:	d8 01       	movw	r26, r16
    1b9c:	16 96       	adiw	r26, 0x06	; 6
    1b9e:	8d 91       	ld	r24, X+
    1ba0:	9c 91       	ld	r25, X
    1ba2:	17 97       	sbiw	r26, 0x07	; 7
    1ba4:	01 96       	adiw	r24, 0x01	; 1
    1ba6:	17 96       	adiw	r26, 0x07	; 7
    1ba8:	9c 93       	st	X, r25
    1baa:	8e 93       	st	-X, r24
    1bac:	16 97       	sbiw	r26, 0x06	; 6
    1bae:	ce 01       	movw	r24, r28
    1bb0:	df 91       	pop	r29
    1bb2:	cf 91       	pop	r28
    1bb4:	1f 91       	pop	r17
    1bb6:	0f 91       	pop	r16
    1bb8:	08 95       	ret

00001bba <__ultoa_invert>:
    1bba:	fa 01       	movw	r30, r20
    1bbc:	aa 27       	eor	r26, r26
    1bbe:	28 30       	cpi	r18, 0x08	; 8
    1bc0:	51 f1       	breq	.+84     	; 0x1c16 <__ultoa_invert+0x5c>
    1bc2:	20 31       	cpi	r18, 0x10	; 16
    1bc4:	81 f1       	breq	.+96     	; 0x1c26 <__ultoa_invert+0x6c>
    1bc6:	e8 94       	clt
    1bc8:	6f 93       	push	r22
    1bca:	6e 7f       	andi	r22, 0xFE	; 254
    1bcc:	6e 5f       	subi	r22, 0xFE	; 254
    1bce:	7f 4f       	sbci	r23, 0xFF	; 255
    1bd0:	8f 4f       	sbci	r24, 0xFF	; 255
    1bd2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd4:	af 4f       	sbci	r26, 0xFF	; 255
    1bd6:	b1 e0       	ldi	r27, 0x01	; 1
    1bd8:	3e d0       	rcall	.+124    	; 0x1c56 <__ultoa_invert+0x9c>
    1bda:	b4 e0       	ldi	r27, 0x04	; 4
    1bdc:	3c d0       	rcall	.+120    	; 0x1c56 <__ultoa_invert+0x9c>
    1bde:	67 0f       	add	r22, r23
    1be0:	78 1f       	adc	r23, r24
    1be2:	89 1f       	adc	r24, r25
    1be4:	9a 1f       	adc	r25, r26
    1be6:	a1 1d       	adc	r26, r1
    1be8:	68 0f       	add	r22, r24
    1bea:	79 1f       	adc	r23, r25
    1bec:	8a 1f       	adc	r24, r26
    1bee:	91 1d       	adc	r25, r1
    1bf0:	a1 1d       	adc	r26, r1
    1bf2:	6a 0f       	add	r22, r26
    1bf4:	71 1d       	adc	r23, r1
    1bf6:	81 1d       	adc	r24, r1
    1bf8:	91 1d       	adc	r25, r1
    1bfa:	a1 1d       	adc	r26, r1
    1bfc:	20 d0       	rcall	.+64     	; 0x1c3e <__ultoa_invert+0x84>
    1bfe:	09 f4       	brne	.+2      	; 0x1c02 <__ultoa_invert+0x48>
    1c00:	68 94       	set
    1c02:	3f 91       	pop	r19
    1c04:	2a e0       	ldi	r18, 0x0A	; 10
    1c06:	26 9f       	mul	r18, r22
    1c08:	11 24       	eor	r1, r1
    1c0a:	30 19       	sub	r19, r0
    1c0c:	30 5d       	subi	r19, 0xD0	; 208
    1c0e:	31 93       	st	Z+, r19
    1c10:	de f6       	brtc	.-74     	; 0x1bc8 <__ultoa_invert+0xe>
    1c12:	cf 01       	movw	r24, r30
    1c14:	08 95       	ret
    1c16:	46 2f       	mov	r20, r22
    1c18:	47 70       	andi	r20, 0x07	; 7
    1c1a:	40 5d       	subi	r20, 0xD0	; 208
    1c1c:	41 93       	st	Z+, r20
    1c1e:	b3 e0       	ldi	r27, 0x03	; 3
    1c20:	0f d0       	rcall	.+30     	; 0x1c40 <__ultoa_invert+0x86>
    1c22:	c9 f7       	brne	.-14     	; 0x1c16 <__ultoa_invert+0x5c>
    1c24:	f6 cf       	rjmp	.-20     	; 0x1c12 <__ultoa_invert+0x58>
    1c26:	46 2f       	mov	r20, r22
    1c28:	4f 70       	andi	r20, 0x0F	; 15
    1c2a:	40 5d       	subi	r20, 0xD0	; 208
    1c2c:	4a 33       	cpi	r20, 0x3A	; 58
    1c2e:	18 f0       	brcs	.+6      	; 0x1c36 <__ultoa_invert+0x7c>
    1c30:	49 5d       	subi	r20, 0xD9	; 217
    1c32:	31 fd       	sbrc	r19, 1
    1c34:	40 52       	subi	r20, 0x20	; 32
    1c36:	41 93       	st	Z+, r20
    1c38:	02 d0       	rcall	.+4      	; 0x1c3e <__ultoa_invert+0x84>
    1c3a:	a9 f7       	brne	.-22     	; 0x1c26 <__ultoa_invert+0x6c>
    1c3c:	ea cf       	rjmp	.-44     	; 0x1c12 <__ultoa_invert+0x58>
    1c3e:	b4 e0       	ldi	r27, 0x04	; 4
    1c40:	a6 95       	lsr	r26
    1c42:	97 95       	ror	r25
    1c44:	87 95       	ror	r24
    1c46:	77 95       	ror	r23
    1c48:	67 95       	ror	r22
    1c4a:	ba 95       	dec	r27
    1c4c:	c9 f7       	brne	.-14     	; 0x1c40 <__ultoa_invert+0x86>
    1c4e:	00 97       	sbiw	r24, 0x00	; 0
    1c50:	61 05       	cpc	r22, r1
    1c52:	71 05       	cpc	r23, r1
    1c54:	08 95       	ret
    1c56:	9b 01       	movw	r18, r22
    1c58:	ac 01       	movw	r20, r24
    1c5a:	0a 2e       	mov	r0, r26
    1c5c:	06 94       	lsr	r0
    1c5e:	57 95       	ror	r21
    1c60:	47 95       	ror	r20
    1c62:	37 95       	ror	r19
    1c64:	27 95       	ror	r18
    1c66:	ba 95       	dec	r27
    1c68:	c9 f7       	brne	.-14     	; 0x1c5c <__ultoa_invert+0xa2>
    1c6a:	62 0f       	add	r22, r18
    1c6c:	73 1f       	adc	r23, r19
    1c6e:	84 1f       	adc	r24, r20
    1c70:	95 1f       	adc	r25, r21
    1c72:	a0 1d       	adc	r26, r0
    1c74:	08 95       	ret

00001c76 <__prologue_saves__>:
    1c76:	2f 92       	push	r2
    1c78:	3f 92       	push	r3
    1c7a:	4f 92       	push	r4
    1c7c:	5f 92       	push	r5
    1c7e:	6f 92       	push	r6
    1c80:	7f 92       	push	r7
    1c82:	8f 92       	push	r8
    1c84:	9f 92       	push	r9
    1c86:	af 92       	push	r10
    1c88:	bf 92       	push	r11
    1c8a:	cf 92       	push	r12
    1c8c:	df 92       	push	r13
    1c8e:	ef 92       	push	r14
    1c90:	ff 92       	push	r15
    1c92:	0f 93       	push	r16
    1c94:	1f 93       	push	r17
    1c96:	cf 93       	push	r28
    1c98:	df 93       	push	r29
    1c9a:	cd b7       	in	r28, 0x3d	; 61
    1c9c:	de b7       	in	r29, 0x3e	; 62
    1c9e:	ca 1b       	sub	r28, r26
    1ca0:	db 0b       	sbc	r29, r27
    1ca2:	0f b6       	in	r0, 0x3f	; 63
    1ca4:	f8 94       	cli
    1ca6:	de bf       	out	0x3e, r29	; 62
    1ca8:	0f be       	out	0x3f, r0	; 63
    1caa:	cd bf       	out	0x3d, r28	; 61
    1cac:	09 94       	ijmp

00001cae <__epilogue_restores__>:
    1cae:	2a 88       	ldd	r2, Y+18	; 0x12
    1cb0:	39 88       	ldd	r3, Y+17	; 0x11
    1cb2:	48 88       	ldd	r4, Y+16	; 0x10
    1cb4:	5f 84       	ldd	r5, Y+15	; 0x0f
    1cb6:	6e 84       	ldd	r6, Y+14	; 0x0e
    1cb8:	7d 84       	ldd	r7, Y+13	; 0x0d
    1cba:	8c 84       	ldd	r8, Y+12	; 0x0c
    1cbc:	9b 84       	ldd	r9, Y+11	; 0x0b
    1cbe:	aa 84       	ldd	r10, Y+10	; 0x0a
    1cc0:	b9 84       	ldd	r11, Y+9	; 0x09
    1cc2:	c8 84       	ldd	r12, Y+8	; 0x08
    1cc4:	df 80       	ldd	r13, Y+7	; 0x07
    1cc6:	ee 80       	ldd	r14, Y+6	; 0x06
    1cc8:	fd 80       	ldd	r15, Y+5	; 0x05
    1cca:	0c 81       	ldd	r16, Y+4	; 0x04
    1ccc:	1b 81       	ldd	r17, Y+3	; 0x03
    1cce:	aa 81       	ldd	r26, Y+2	; 0x02
    1cd0:	b9 81       	ldd	r27, Y+1	; 0x01
    1cd2:	ce 0f       	add	r28, r30
    1cd4:	d1 1d       	adc	r29, r1
    1cd6:	0f b6       	in	r0, 0x3f	; 63
    1cd8:	f8 94       	cli
    1cda:	de bf       	out	0x3e, r29	; 62
    1cdc:	0f be       	out	0x3f, r0	; 63
    1cde:	cd bf       	out	0x3d, r28	; 61
    1ce0:	ed 01       	movw	r28, r26
    1ce2:	08 95       	ret

00001ce4 <_exit>:
    1ce4:	f8 94       	cli

00001ce6 <__stop_program>:
    1ce6:	ff cf       	rjmp	.-2      	; 0x1ce6 <__stop_program>
